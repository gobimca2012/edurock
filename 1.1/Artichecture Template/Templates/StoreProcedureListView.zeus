##|TYPE Template
##|UNIQUEID b8b72f33-4dc2-42b8-b338-0af564af3ede
##|TITLE StoreProcedureListView
##|NAMESPACE StoreProcedureListView
##|SOURCE_TYPE Source
##|OUTPUT_LANGUAGE None
##|GUI_ENGINE .Net Script
##|GUI_LANGUAGE C#
##|GUI_BEGIN

public class GeneratedGui : DotNetScriptGui
{
	public GeneratedGui(ZeusContext context) : base(context) {}

	//-----------------------------------------
	// The User Interface Entry Point
	//-----------------------------------------
	public override void Setup()
	{
		// ** UNCOMMENT CODE BELOW TO SEE UI **

		ui.Title = ".NetScript C# Sample: Java Class";
		ui.Width = 340;
		ui.Height = 300;

		// Setup Database selection combobox.
		GuiLabel label_d = ui.AddLabel("lblDatabases", "Select a database:", "Select a database in the dropdown below.");
		GuiComboBox cmbDatabases = ui.AddComboBox("databaseName", "Select a database.");

		// Setup Tables selection multi-select listbox.
		GuiLabel label_t = ui.AddLabel("lblTables", "Select table:", "Select table from the combobox below.");
		GuiComboBox cmbTables = ui.AddComboBox("StoreProcedure", "Select a table.");

		// bind data to the controls
		cmbDatabases.BindData(MyMeta.Databases);
		cmbDatabases.SelectedValue = MyMeta.DefaultDatabase.Name;
		cmbTables.BindData( MyMeta.Databases[cmbDatabases.SelectedValue].Procedures );
		GuiTextBox txtPrefix=ui.AddTextBox("Prefix","","");
		
		// Attach the onchange event to the cmbDatabases control.
		cmbDatabases.AttachEvent("onchange", "cmbDatabases_onchange");

	
		ui.ShowGui = true;ui.AddLabel("lblDemo", "Demo", "Demo Tooltip");
		ui.ShowGui = true;
	}
	public void cmbDatabases_onchange(GuiComboBox control)
	{
		GuiComboBox cmbDatabases = ui["databaseName"] as GuiComboBox;
		GuiComboBox cmbTables = ui["StoreProcedure"] as GuiComboBox;
		
		cmbTables.BindData( MyMeta.Databases[cmbDatabases.SelectedValue].Procedures );
	}

}
##|GUI_END
##|BODY_MODE Markup
##|BODY_ENGINE .Net Script
##|BODY_LANGUAGE C#
##|BODY_TAG_START <--
##|BODY_TAG_END -->
##|BODY_BEGIN
<--
public class GeneratedTemplate : DotNetScriptTemplate
{
	public GeneratedTemplate(ZeusContext context) : base(context) {}
    public void TableHeadder(IResultColumns  ResultColumns)
	{
	
	foreach(IResultColumn ResultColumn in ResultColumns)
	
	{-->
	<td><--=ResultColumn.Alias--></td>
	<--}
	}
	
	 public void TableBody(IResultColumns  ResultColumns)
	{
	
	foreach(IResultColumn ResultColumn in ResultColumns)
	
	{-->
	<td><%#Eval("<--=ResultColumn.Alias-->")%></td>
	<--}
	}
	//---------------------------------------------------
	// Render() is where you want to write your logic    
	//---------------------------------------------------
	public override void Render()
	{
		string databaseName = input["databaseName"].ToString();
		string ProcedureName = input["StoreProcedure"].ToString();
		
		int columnCount=0;
		IDatabase database = MyMeta.Databases[databaseName];
		IProcedure Procedure = database.Procedures[ProcedureName];-->
		<asp:ListView ID="List<--=Procedure.Alias -->" runat="server" OnItemDataBound="List<--=Procedure.Alias -->OnItemDataBound"
            DataKeyNames="UserMessageID">
            <LayoutTemplate>
                <table>
                    <thead>
                        <tr>
		<--TableHeadder(Procedure.ResultColumns);-->
		  </tr>
                    </thead>
                    <asp:PlaceHolder ID="itemPlaceHolder" runat="server"></asp:PlaceHolder>
                </table>
            </LayoutTemplate>
            <ItemTemplate>
                <tr>
		<--TableBody(Procedure.ResultColumns);-->
		<div>
                    <asp:LinkButton ID="lnkDelete" runat="server">X</asp:LinkButton>
                </div>
            </ItemTemplate>
        </asp:ListView>
	<--}

}
-->
##|BODY_END

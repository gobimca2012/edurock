##|TYPE Template
##|UNIQUEID aef770b3-94cb-4fe4-92a6-9274afa6d03b
##|TITLE AddFormAjaxCS
##|NAMESPACE 
##|SOURCE_TYPE Source
##|OUTPUT_LANGUAGE None
##|GUI_ENGINE .Net Script
##|GUI_LANGUAGE C#
##|GUI_BEGIN

public class GeneratedGui : DotNetScriptGui
{
	public GeneratedGui(ZeusContext context) : base(context) {}

	//-----------------------------------------
	// The User Interface Entry Point
	//-----------------------------------------
	public override void Setup()
	{
		// ** UNCOMMENT CODE BELOW TO SEE UI **

		ui.Title = ".NetScript C# Sample: Java Class";
		ui.Width = 340;
		ui.Height = 300;

		// Setup Database selection combobox.
		GuiLabel label_d = ui.AddLabel("lblDatabases", "Select a database:", "Select a database in the dropdown below.");
		GuiComboBox cmbDatabases = ui.AddComboBox("databaseName", "Select a database.");

		// Setup Tables selection multi-select listbox.
		GuiLabel label_t = ui.AddLabel("lblTables", "Select table:", "Select table from the combobox below.");
		GuiComboBox cmbTables = ui.AddComboBox("tableName", "Select a table.");

		// bind data to the controls
		cmbDatabases.BindData(MyMeta.Databases);
		cmbDatabases.SelectedValue = MyMeta.DefaultDatabase.Name;
		cmbTables.BindData( MyMeta.Databases[cmbDatabases.SelectedValue].Tables );
		GuiTextBox txtPrefix=ui.AddTextBox("Prefix","","");
		
		// Attach the onchange event to the cmbDatabases control.
		cmbDatabases.AttachEvent("onchange", "cmbDatabases_onchange");

	
		ui.ShowGui = true;ui.AddLabel("lblDemo", "Demo", "Demo Tooltip");
		ui.ShowGui = true;
	}
	public void cmbDatabases_onchange(GuiComboBox control)
	{
		GuiComboBox cmbDatabases = ui["databaseName"] as GuiComboBox;
		GuiComboBox cmbTables = ui["tableName"] as GuiComboBox;
		
		cmbTables.BindData( MyMeta.Databases[cmbDatabases.SelectedValue].Tables );
	}

}
##|GUI_END
##|BODY_MODE Markup
##|BODY_ENGINE .Net Script
##|BODY_LANGUAGE C#
##|BODY_TAG_START <%
##|BODY_TAG_END %>
##|BODY_BEGIN
<%
public class GeneratedTemplate : DotNetScriptTemplate
{
	public GeneratedTemplate(ZeusContext context) : base(context) {}
	public string PrintvariableAssignment(IColumn column,string Prefix,string Task,ITable table)
	{
	   string id="";
	   string varid="";
	   
		if(column.LanguageType=="Guid")
		{
		  id="dd"+column.Alias;
		  varid="vardd"+column.Alias;
		  if(Task=="vtop")
		  {
		  %>
		   Guid var<%=id%> = Guid.Empty;
				if (Request.Params["<%=Prefix%><%=id%>"] != null)
					var<%=id%> = Request.Params["<%=Prefix%><%=id%>"].ToString();
		<%}
			else if(Task=="dbtoc")
			{
				%>
				dd<%=column.Alias%>.SelectedValue = <%=table.Alias%>Data.<%=column.Alias%>.ToString();
			<%
			}
		}
		else if(column.LanguageType=="int")
		{
		  id="dd"+column.Alias;
		  varid="vardd"+column.Alias;
		  if(Task=="vtop")
		  {
		  %>
		   int var<%=id%> = 0;
				if (Request.Params["<%=Prefix%><%=id%>"] != null)
					var<%=id%> =Convert.ToInt32(Request.Params["<%=Prefix%><%=id%>"].ToString());
		<%}
			else if(Task=="dbtoc")
			{
				%>
				dd<%=column.Alias%>.SelectedValue = <%=table.Alias%>Data.<%=column.Alias%>.ToString();
			<%
			}
		}
		else if(column.LanguageType=="string")
		{
		  id="txt"+column.Alias;
		   varid="vartxt"+column.Alias;
		   if(Task=="vtop")
			{%>		   
		   string var<%=id%> = "";
				if (Request.Params["<%=Prefix%><%=id%>"] != null)
					var<%=id%> = Request.Params["<%=Prefix%><%=id%>"].ToString();
		<%
			}
			else if(Task=="dbtoc")
			{%>
				txt<%=column.Alias%>.Text = <%=table.Alias%>Data.<%=column.Alias%>;
			<%}
		}
		else if(column.LanguageType=="DateTime")
		{
		  id="txt"+column.Alias;
		  varid="vartxt"+column.Alias;
		  if(Task=="vtop")
			{%>
		   DateTime var<%=id%> = DateTime.Now;
				if (Request.Params["<%=Prefix%><%=id%>"] != null)
					var<%=id%> =Convert.ToDateTime( Request.Params["<%=Prefix%><%=id%>"].ToString());
		   <%}
		   else if(Task=="dbtoc")
			{
				%>
				txt<%=column.Alias%>.Text = <%=table.Alias%>Data.<%=column.Alias%>.ToString();
			<%
			}
		}
		else if(column.LanguageType=="bool" || column.LanguageType=="Boolean")
		{
		  id="chk"+column.Alias;
		  varid="varchk"+column.Alias;
		  if(Task=="vtop")
			{%>
		   Boolean var<%=id%> = false;
				if (Request.Params["<%=Prefix%><%=id%>"] != null)
					var<%=id%> = Convert.ToBoolean(Request.Params["<%=Prefix%><%=id%>"].ToString());
		<%
			}
			else if(Task=="dbtoc")
			{
				%>
				chk<%=column.Alias%>.Checked = Convert.ToBoolean(<%=table.Alias%>Data.<%=column.Alias%>.ToString());
			<%
			}
		}
		return varid;
	}
	
	public ArrayList PrintAssignment(ITable table,string Prefix)
	{
		ArrayList ControlIDS = new ArrayList();
	    foreach(IColumn column in table.Columns)
		{
			ControlIDS.Add(PrintvariableAssignment(column,Prefix,"vtop",table));			
		}
		return ControlIDS;
	}
	public ArrayList PrintAssignmentdbtoc(ITable table,string Prefix)
	{
		ArrayList ControlIDS = new ArrayList();
	    foreach(IColumn column in table.Columns)
		{
			ControlIDS.Add(PrintvariableAssignment(column,Prefix,"dbtoc",table));			
		}
		return ControlIDS;
	}
	public void AddFunction(ArrayList ControlIDS,ITable table)
	{%>new <%=table.Alias%>Controller().<%=table.Alias%>Add(<%
		for(int i=0;i<ControlIDS.Count;i++)
		{
			if(i==ControlIDS.Count-1)
			{
			%><%=ControlIDS[i].ToString()%>);
			<%			}
			else
			{
			%><%=ControlIDS[i].ToString()%>,<%}
		}
	}
	public void UpdateFunction(ArrayList ControlIDS,ITable table)
	{%>new <%=table.Alias%>Controller().<%=table.Alias%>UpdateBy<%=table.Alias%>ID(<%
		for(int i=0;i<ControlIDS.Count;i++)
		{
			if(i==ControlIDS.Count-1)
			{
			%><%=ControlIDS[i].ToString()%>);
			<%			}
			else
			{
			%><%=ControlIDS[i].ToString()%>,<%}
		}
	}
	
	
	//---------------------------------------------------
	// Render() is where you want to write your logic    
	//---------------------------------------------------
	public override void Render()
	{
		string databaseName = input["databaseName"].ToString();
		string tableName = input["tableName"].ToString();
		int columnCount=0;
		IDatabase database = MyMeta.Databases[databaseName];
		ITable table = database.Tables[tableName];
		ArrayList ControlIDS = new ArrayList();
		
		string Prefix = input["Prefix"].ToString();
		%>
	protected void Page_Load(object sender, EventArgs e)
	{
		if (Request.QueryString["Action"] != null)
		{
			if (Request.QueryString["Action"].ToString() == "AddNew")
			{//Change Guid.NewId() for your Primary Key
			<%ControlIDS=PrintAssignment(table,Prefix);
			  AddFunction(ControlIDS,table);
			  
			%>
			Response.Redirect("~/Modules/<%=table.Alias%>/FullView.aspx?<%=table.Alias%>ID=" + vardd<%=table.Alias%>ID + "&mode=edit");
			}			
			else if (Request.QueryString["Action"].ToString() == "UpdateNew")
			{//Change Primary Key to new Guid(Request.QueryString["id"].ToString());
			 <%ControlIDS=PrintAssignment(table,Prefix);
				UpdateFunction(ControlIDS,table);
			%>
			Response.Redirect("~/Modules/<%=table.Alias%>/FullView.aspx?<%=table.Alias%>ID=" + vardd<%=table.Alias%>ID + "&mode=edit");
			}
		}
		else if (Request.QueryString["ID"] != null)
		{
			Guid <%=table.Alias%>ID = new Guid(Request.QueryString["ID"].ToString());
			Hidden<%=table.Alias%>.Value=<%=table.Alias%>ID.ToString();
			var data = new <%=table.Alias%>Controller().<%=table.Alias%>Getby<%=table.Alias%>ID(<%=table.Alias%>ID);
			<%=table.Alias%> <%=table.Alias%>Data = data[0];
			<%PrintAssignmentdbtoc(table,Prefix);%>
			lnkAdd.Visible = false;
            lnkSave.Visible = true;
            lnkSave.Attributes["onclick"] = string.Format("return UpdateNew('{0}');", <%=table.Alias%>ID.ToString());
		}
		else
		{
            lnkAdd.Visible = true;
            lnkSave.Visible = false;
            lnkAdd.Attributes["onclick"] = string.Format("return AddNew();");
			BindUniverSity();
		}
	}
	// Change This Function According to Your Forieng Key
	private void BindUniverSity()
	{
		List<UniverSity> data = new UniverSityController().UniverSityGet();
		ddUniverSityID.DataSource = data;
		ddUniverSityID.DataTextField = "Name";
		ddUniverSityID.DataValueField = "UniversityID";
		ddUniverSityID.DataBind();
	}
	<%}

}
%>
##|BODY_END

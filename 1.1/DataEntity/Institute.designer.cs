#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataEntity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="crameasy")]
	public partial class InstituteDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertInstituteLoginUser(InstituteLoginUser instance);
    partial void UpdateInstituteLoginUser(InstituteLoginUser instance);
    partial void DeleteInstituteLoginUser(InstituteLoginUser instance);
    partial void InsertCourceCatagory(CourceCatagory instance);
    partial void UpdateCourceCatagory(CourceCatagory instance);
    partial void DeleteCourceCatagory(CourceCatagory instance);
    partial void InsertCource(Cource instance);
    partial void UpdateCource(Cource instance);
    partial void DeleteCource(Cource instance);
    partial void InsertTutorialType(TutorialType instance);
    partial void UpdateTutorialType(TutorialType instance);
    partial void DeleteTutorialType(TutorialType instance);
    partial void InsertTutorial(Tutorial instance);
    partial void UpdateTutorial(Tutorial instance);
    partial void DeleteTutorial(Tutorial instance);
    partial void InsertInstructor(Instructor instance);
    partial void UpdateInstructor(Instructor instance);
    partial void DeleteInstructor(Instructor instance);
    partial void InsertInstituteSubject(InstituteSubject instance);
    partial void UpdateInstituteSubject(InstituteSubject instance);
    partial void DeleteInstituteSubject(InstituteSubject instance);
    partial void InsertInstituteUser(InstituteUser instance);
    partial void UpdateInstituteUser(InstituteUser instance);
    partial void DeleteInstituteUser(InstituteUser instance);
    partial void InsertInstituteUserType(InstituteUserType instance);
    partial void UpdateInstituteUserType(InstituteUserType instance);
    partial void DeleteInstituteUserType(InstituteUserType instance);
    partial void InsertInstituteUserInUserType(InstituteUserInUserType instance);
    partial void UpdateInstituteUserInUserType(InstituteUserInUserType instance);
    partial void DeleteInstituteUserInUserType(InstituteUserInUserType instance);
    partial void InsertInstituteUserTypeAccess(InstituteUserTypeAccess instance);
    partial void UpdateInstituteUserTypeAccess(InstituteUserTypeAccess instance);
    partial void DeleteInstituteUserTypeAccess(InstituteUserTypeAccess instance);
    partial void InsertInstituteCourceUser(InstituteCourceUser instance);
    partial void UpdateInstituteCourceUser(InstituteCourceUser instance);
    partial void DeleteInstituteCourceUser(InstituteCourceUser instance);
    partial void InsertInstitute(Institute instance);
    partial void UpdateInstitute(Institute instance);
    partial void DeleteInstitute(Institute instance);
    partial void InsertHomeWork(HomeWork instance);
    partial void UpdateHomeWork(HomeWork instance);
    partial void DeleteHomeWork(HomeWork instance);
    partial void InsertInstituteCource(InstituteCource instance);
    partial void UpdateInstituteCource(InstituteCource instance);
    partial void DeleteInstituteCource(InstituteCource instance);
    partial void InsertPortalSetting(PortalSetting instance);
    partial void UpdatePortalSetting(PortalSetting instance);
    partial void DeletePortalSetting(PortalSetting instance);
    #endregion
		
		public InstituteDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public InstituteDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public InstituteDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public InstituteDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<InstituteLoginUser> InstituteLoginUsers
		{
			get
			{
				return this.GetTable<InstituteLoginUser>();
			}
		}
		
		public System.Data.Linq.Table<CourceCatagory> CourceCatagories
		{
			get
			{
				return this.GetTable<CourceCatagory>();
			}
		}
		
		public System.Data.Linq.Table<Cource> Cources
		{
			get
			{
				return this.GetTable<Cource>();
			}
		}
		
		public System.Data.Linq.Table<TutorialType> TutorialTypes
		{
			get
			{
				return this.GetTable<TutorialType>();
			}
		}
		
		public System.Data.Linq.Table<Tutorial> Tutorials
		{
			get
			{
				return this.GetTable<Tutorial>();
			}
		}
		
		public System.Data.Linq.Table<Instructor> Instructors
		{
			get
			{
				return this.GetTable<Instructor>();
			}
		}
		
		public System.Data.Linq.Table<InstituteSubject> InstituteSubjects
		{
			get
			{
				return this.GetTable<InstituteSubject>();
			}
		}
		
		public System.Data.Linq.Table<InstituteUser> InstituteUsers
		{
			get
			{
				return this.GetTable<InstituteUser>();
			}
		}
		
		public System.Data.Linq.Table<InstituteUserType> InstituteUserTypes
		{
			get
			{
				return this.GetTable<InstituteUserType>();
			}
		}
		
		public System.Data.Linq.Table<InstituteUserInUserType> InstituteUserInUserTypes
		{
			get
			{
				return this.GetTable<InstituteUserInUserType>();
			}
		}
		
		public System.Data.Linq.Table<InstituteUserTypeAccess> InstituteUserTypeAccesses
		{
			get
			{
				return this.GetTable<InstituteUserTypeAccess>();
			}
		}
		
		public System.Data.Linq.Table<InstituteCourceUser> InstituteCourceUsers
		{
			get
			{
				return this.GetTable<InstituteCourceUser>();
			}
		}
		
		public System.Data.Linq.Table<Institute> Institutes
		{
			get
			{
				return this.GetTable<Institute>();
			}
		}
		
		public System.Data.Linq.Table<HomeWork> HomeWorks
		{
			get
			{
				return this.GetTable<HomeWork>();
			}
		}
		
		public System.Data.Linq.Table<InstituteCource> InstituteCources
		{
			get
			{
				return this.GetTable<InstituteCource>();
			}
		}
		
		public System.Data.Linq.Table<PortalSetting> PortalSettings
		{
			get
			{
				return this.GetTable<PortalSetting>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTutorial")]
		public ISingleResult<GetTutorialResult> GetTutorial([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Keywork", DbType="VarChar(1000)")] string keywork, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TutorialType", DbType="Int")] System.Nullable<int> tutorialType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), keywork, tutorialType);
			return ((ISingleResult<GetTutorialResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCourceByInstituteID")]
		public ISingleResult<GetCourceByInstituteIDResult> GetCourceByInstituteID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="InstituteID", DbType="Int")] System.Nullable<int> instituteID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), instituteID);
			return ((ISingleResult<GetCourceByInstituteIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetInstituteCourceName", IsComposable=true)]
		public string GetInstituteCourceName([global::System.Data.Linq.Mapping.ParameterAttribute(Name="InstituteCourceID", DbType="Int")] System.Nullable<int> instituteCourceID)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), instituteCourceID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetInstituteSubjectName", IsComposable=true)]
		public string GetInstituteSubjectName([global::System.Data.Linq.Mapping.ParameterAttribute(Name="InstituteSubjectID", DbType="Int")] System.Nullable<int> instituteSubjectID)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), instituteSubjectID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetInstituteByLoginUserID")]
		public ISingleResult<GetInstituteByLoginUserIDResult> GetInstituteByLoginUserID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoginUserID", DbType="Int")] System.Nullable<int> loginUserID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), loginUserID);
			return ((ISingleResult<GetInstituteByLoginUserIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetInstituteUserFeatureAccess")]
		public ISingleResult<GetInstituteUserFeatureAccessResult> GetInstituteUserFeatureAccess([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoginUserID", DbType="Int")] System.Nullable<int> loginUserID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), loginUserID);
			return ((ISingleResult<GetInstituteUserFeatureAccessResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetUserByInsituteCourceID")]
		public ISingleResult<GetUserByInsituteCourceIDResult> GetUserByInsituteCourceID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="InsituteCourceID", DbType="Int")] System.Nullable<int> insituteCourceID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), insituteCourceID);
			return ((ISingleResult<GetUserByInsituteCourceIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetQuestionTypeByInstituteID")]
		public ISingleResult<GetQuestionTypeByInstituteIDResult> GetQuestionTypeByInstituteID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="InstituteID", DbType="Int")] System.Nullable<int> instituteID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), instituteID);
			return ((ISingleResult<GetQuestionTypeByInstituteIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCourceCatagoryByInstituteID")]
		public ISingleResult<GetCourceCatagoryByInstituteIDResult> GetCourceCatagoryByInstituteID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="InstituteID", DbType="Int")] System.Nullable<int> instituteID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), instituteID);
			return ((ISingleResult<GetCourceCatagoryByInstituteIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteInstituteCourseByInstituteCourseID")]
		public int DeleteInstituteCourseByInstituteCourseID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="InstituteCourseID", DbType="Int")] System.Nullable<int> instituteCourseID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), instituteCourseID);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoginUser")]
	public partial class InstituteLoginUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoginUserID;
		
		private string _Username;
		
		private string _Password;
		
		private int _UserType;
		
		private System.Guid _UserId;
		
		private System.DateTime _ModifiedDate;
		
		private System.DateTime _CreatedDate;
		
		private EntitySet<Tutorial> _Tutorials;
		
		private EntitySet<InstituteUser> _InstituteUsers;
		
		private EntitySet<InstituteCourceUser> _InstituteCourceUsers;
		
		private EntitySet<Institute> _Institutes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginUserIDChanging(int value);
    partial void OnLoginUserIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnUserTypeChanging(int value);
    partial void OnUserTypeChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public InstituteLoginUser()
		{
			this._Tutorials = new EntitySet<Tutorial>(new Action<Tutorial>(this.attach_Tutorials), new Action<Tutorial>(this.detach_Tutorials));
			this._InstituteUsers = new EntitySet<InstituteUser>(new Action<InstituteUser>(this.attach_InstituteUsers), new Action<InstituteUser>(this.detach_InstituteUsers));
			this._InstituteCourceUsers = new EntitySet<InstituteCourceUser>(new Action<InstituteCourceUser>(this.attach_InstituteCourceUsers), new Action<InstituteCourceUser>(this.detach_InstituteCourceUsers));
			this._Institutes = new EntitySet<Institute>(new Action<Institute>(this.attach_Institutes), new Action<Institute>(this.detach_Institutes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginUserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					this.OnLoginUserIDChanging(value);
					this.SendPropertyChanging();
					this._LoginUserID = value;
					this.SendPropertyChanged("LoginUserID");
					this.OnLoginUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="Int NOT NULL")]
		public int UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstituteLoginUser_Tutorial", Storage="_Tutorials", ThisKey="LoginUserID", OtherKey="LoginUserID")]
		public EntitySet<Tutorial> Tutorials
		{
			get
			{
				return this._Tutorials;
			}
			set
			{
				this._Tutorials.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstituteLoginUser_InstituteUser", Storage="_InstituteUsers", ThisKey="LoginUserID", OtherKey="LoginUserID")]
		public EntitySet<InstituteUser> InstituteUsers
		{
			get
			{
				return this._InstituteUsers;
			}
			set
			{
				this._InstituteUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstituteLoginUser_InstituteCourceUser", Storage="_InstituteCourceUsers", ThisKey="LoginUserID", OtherKey="LoginUserID")]
		public EntitySet<InstituteCourceUser> InstituteCourceUsers
		{
			get
			{
				return this._InstituteCourceUsers;
			}
			set
			{
				this._InstituteCourceUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstituteLoginUser_Institute", Storage="_Institutes", ThisKey="LoginUserID", OtherKey="LoginUserID")]
		public EntitySet<Institute> Institutes
		{
			get
			{
				return this._Institutes;
			}
			set
			{
				this._Institutes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tutorials(Tutorial entity)
		{
			this.SendPropertyChanging();
			entity.InstituteLoginUser = this;
		}
		
		private void detach_Tutorials(Tutorial entity)
		{
			this.SendPropertyChanging();
			entity.InstituteLoginUser = null;
		}
		
		private void attach_InstituteUsers(InstituteUser entity)
		{
			this.SendPropertyChanging();
			entity.InstituteLoginUser = this;
		}
		
		private void detach_InstituteUsers(InstituteUser entity)
		{
			this.SendPropertyChanging();
			entity.InstituteLoginUser = null;
		}
		
		private void attach_InstituteCourceUsers(InstituteCourceUser entity)
		{
			this.SendPropertyChanging();
			entity.InstituteLoginUser = this;
		}
		
		private void detach_InstituteCourceUsers(InstituteCourceUser entity)
		{
			this.SendPropertyChanging();
			entity.InstituteLoginUser = null;
		}
		
		private void attach_Institutes(Institute entity)
		{
			this.SendPropertyChanging();
			entity.InstituteLoginUser = this;
		}
		
		private void detach_Institutes(Institute entity)
		{
			this.SendPropertyChanging();
			entity.InstituteLoginUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CourceCatagory")]
	public partial class CourceCatagory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CourceCatagoryID;
		
		private string _CatagoryName;
		
		private int _LoginUserID;
		
		private string _Description;
		
		private int _CatagoryType;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<Cource> _Cources;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourceCatagoryIDChanging(int value);
    partial void OnCourceCatagoryIDChanged();
    partial void OnCatagoryNameChanging(string value);
    partial void OnCatagoryNameChanged();
    partial void OnLoginUserIDChanging(int value);
    partial void OnLoginUserIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCatagoryTypeChanging(int value);
    partial void OnCatagoryTypeChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public CourceCatagory()
		{
			this._Cources = new EntitySet<Cource>(new Action<Cource>(this.attach_Cources), new Action<Cource>(this.detach_Cources));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourceCatagoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CourceCatagoryID
		{
			get
			{
				return this._CourceCatagoryID;
			}
			set
			{
				if ((this._CourceCatagoryID != value))
				{
					this.OnCourceCatagoryIDChanging(value);
					this.SendPropertyChanging();
					this._CourceCatagoryID = value;
					this.SendPropertyChanged("CourceCatagoryID");
					this.OnCourceCatagoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatagoryName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CatagoryName
		{
			get
			{
				return this._CatagoryName;
			}
			set
			{
				if ((this._CatagoryName != value))
				{
					this.OnCatagoryNameChanging(value);
					this.SendPropertyChanging();
					this._CatagoryName = value;
					this.SendPropertyChanged("CatagoryName");
					this.OnCatagoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginUserID", DbType="Int NOT NULL")]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					this.OnLoginUserIDChanging(value);
					this.SendPropertyChanging();
					this._LoginUserID = value;
					this.SendPropertyChanged("LoginUserID");
					this.OnLoginUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatagoryType", DbType="Int NOT NULL")]
		public int CatagoryType
		{
			get
			{
				return this._CatagoryType;
			}
			set
			{
				if ((this._CatagoryType != value))
				{
					this.OnCatagoryTypeChanging(value);
					this.SendPropertyChanging();
					this._CatagoryType = value;
					this.SendPropertyChanged("CatagoryType");
					this.OnCatagoryTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourceCatagory_Cource", Storage="_Cources", ThisKey="CourceCatagoryID", OtherKey="CourceCatagoryID")]
		public EntitySet<Cource> Cources
		{
			get
			{
				return this._Cources;
			}
			set
			{
				this._Cources.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cources(Cource entity)
		{
			this.SendPropertyChanging();
			entity.CourceCatagory = this;
		}
		
		private void detach_Cources(Cource entity)
		{
			this.SendPropertyChanging();
			entity.CourceCatagory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cource")]
	public partial class Cource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CourceID;
		
		private int _CourceCatagoryID;
		
		private string _CourceName;
		
		private string _Description;
		
		private int _CourceType;
		
		private System.DateTime _Modifieddate;
		
		private EntitySet<InstituteCource> _InstituteCources;
		
		private EntityRef<CourceCatagory> _CourceCatagory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourceIDChanging(int value);
    partial void OnCourceIDChanged();
    partial void OnCourceCatagoryIDChanging(int value);
    partial void OnCourceCatagoryIDChanged();
    partial void OnCourceNameChanging(string value);
    partial void OnCourceNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCourceTypeChanging(int value);
    partial void OnCourceTypeChanged();
    partial void OnModifieddateChanging(System.DateTime value);
    partial void OnModifieddateChanged();
    #endregion
		
		public Cource()
		{
			this._InstituteCources = new EntitySet<InstituteCource>(new Action<InstituteCource>(this.attach_InstituteCources), new Action<InstituteCource>(this.detach_InstituteCources));
			this._CourceCatagory = default(EntityRef<CourceCatagory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CourceID
		{
			get
			{
				return this._CourceID;
			}
			set
			{
				if ((this._CourceID != value))
				{
					this.OnCourceIDChanging(value);
					this.SendPropertyChanging();
					this._CourceID = value;
					this.SendPropertyChanged("CourceID");
					this.OnCourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourceCatagoryID", DbType="Int NOT NULL")]
		public int CourceCatagoryID
		{
			get
			{
				return this._CourceCatagoryID;
			}
			set
			{
				if ((this._CourceCatagoryID != value))
				{
					if (this._CourceCatagory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourceCatagoryIDChanging(value);
					this.SendPropertyChanging();
					this._CourceCatagoryID = value;
					this.SendPropertyChanged("CourceCatagoryID");
					this.OnCourceCatagoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourceName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CourceName
		{
			get
			{
				return this._CourceName;
			}
			set
			{
				if ((this._CourceName != value))
				{
					this.OnCourceNameChanging(value);
					this.SendPropertyChanging();
					this._CourceName = value;
					this.SendPropertyChanged("CourceName");
					this.OnCourceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourceType", DbType="Int NOT NULL")]
		public int CourceType
		{
			get
			{
				return this._CourceType;
			}
			set
			{
				if ((this._CourceType != value))
				{
					this.OnCourceTypeChanging(value);
					this.SendPropertyChanging();
					this._CourceType = value;
					this.SendPropertyChanged("CourceType");
					this.OnCourceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modifieddate", DbType="DateTime NOT NULL")]
		public System.DateTime Modifieddate
		{
			get
			{
				return this._Modifieddate;
			}
			set
			{
				if ((this._Modifieddate != value))
				{
					this.OnModifieddateChanging(value);
					this.SendPropertyChanging();
					this._Modifieddate = value;
					this.SendPropertyChanged("Modifieddate");
					this.OnModifieddateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cource_InstituteCource", Storage="_InstituteCources", ThisKey="CourceID", OtherKey="CourceID")]
		public EntitySet<InstituteCource> InstituteCources
		{
			get
			{
				return this._InstituteCources;
			}
			set
			{
				this._InstituteCources.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourceCatagory_Cource", Storage="_CourceCatagory", ThisKey="CourceCatagoryID", OtherKey="CourceCatagoryID", IsForeignKey=true)]
		public CourceCatagory CourceCatagory
		{
			get
			{
				return this._CourceCatagory.Entity;
			}
			set
			{
				CourceCatagory previousValue = this._CourceCatagory.Entity;
				if (((previousValue != value) 
							|| (this._CourceCatagory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CourceCatagory.Entity = null;
						previousValue.Cources.Remove(this);
					}
					this._CourceCatagory.Entity = value;
					if ((value != null))
					{
						value.Cources.Add(this);
						this._CourceCatagoryID = value.CourceCatagoryID;
					}
					else
					{
						this._CourceCatagoryID = default(int);
					}
					this.SendPropertyChanged("CourceCatagory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InstituteCources(InstituteCource entity)
		{
			this.SendPropertyChanging();
			entity.Cource = this;
		}
		
		private void detach_InstituteCources(InstituteCource entity)
		{
			this.SendPropertyChanging();
			entity.Cource = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TutorialType")]
	public partial class TutorialType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TutorialTypeID;
		
		private string _Name;
		
		private int _LoginUserID;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<Tutorial> _Tutorials;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTutorialTypeIDChanging(int value);
    partial void OnTutorialTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLoginUserIDChanging(int value);
    partial void OnLoginUserIDChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public TutorialType()
		{
			this._Tutorials = new EntitySet<Tutorial>(new Action<Tutorial>(this.attach_Tutorials), new Action<Tutorial>(this.detach_Tutorials));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TutorialTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TutorialTypeID
		{
			get
			{
				return this._TutorialTypeID;
			}
			set
			{
				if ((this._TutorialTypeID != value))
				{
					this.OnTutorialTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TutorialTypeID = value;
					this.SendPropertyChanged("TutorialTypeID");
					this.OnTutorialTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginUserID", DbType="Int NOT NULL")]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					this.OnLoginUserIDChanging(value);
					this.SendPropertyChanging();
					this._LoginUserID = value;
					this.SendPropertyChanged("LoginUserID");
					this.OnLoginUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TutorialType_Tutorial", Storage="_Tutorials", ThisKey="TutorialTypeID", OtherKey="TutorialTypeID")]
		public EntitySet<Tutorial> Tutorials
		{
			get
			{
				return this._Tutorials;
			}
			set
			{
				this._Tutorials.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tutorials(Tutorial entity)
		{
			this.SendPropertyChanging();
			entity.TutorialType = this;
		}
		
		private void detach_Tutorials(Tutorial entity)
		{
			this.SendPropertyChanging();
			entity.TutorialType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tutorial")]
	public partial class Tutorial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TutorialID;
		
		private int _LoginUserID;
		
		private int _TutorialTypeID;
		
		private string _Name;
		
		private string _Description;
		
		private string _FilePath;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<InstituteLoginUser> _InstituteLoginUser;
		
		private EntityRef<TutorialType> _TutorialType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTutorialIDChanging(int value);
    partial void OnTutorialIDChanged();
    partial void OnLoginUserIDChanging(int value);
    partial void OnLoginUserIDChanged();
    partial void OnTutorialTypeIDChanging(int value);
    partial void OnTutorialTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public Tutorial()
		{
			this._InstituteLoginUser = default(EntityRef<InstituteLoginUser>);
			this._TutorialType = default(EntityRef<TutorialType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TutorialID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TutorialID
		{
			get
			{
				return this._TutorialID;
			}
			set
			{
				if ((this._TutorialID != value))
				{
					this.OnTutorialIDChanging(value);
					this.SendPropertyChanging();
					this._TutorialID = value;
					this.SendPropertyChanged("TutorialID");
					this.OnTutorialIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginUserID", DbType="Int NOT NULL")]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					if (this._InstituteLoginUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginUserIDChanging(value);
					this.SendPropertyChanging();
					this._LoginUserID = value;
					this.SendPropertyChanged("LoginUserID");
					this.OnLoginUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TutorialTypeID", DbType="Int NOT NULL")]
		public int TutorialTypeID
		{
			get
			{
				return this._TutorialTypeID;
			}
			set
			{
				if ((this._TutorialTypeID != value))
				{
					if (this._TutorialType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTutorialTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TutorialTypeID = value;
					this.SendPropertyChanged("TutorialTypeID");
					this.OnTutorialTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._FilePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstituteLoginUser_Tutorial", Storage="_InstituteLoginUser", ThisKey="LoginUserID", OtherKey="LoginUserID", IsForeignKey=true)]
		public InstituteLoginUser InstituteLoginUser
		{
			get
			{
				return this._InstituteLoginUser.Entity;
			}
			set
			{
				InstituteLoginUser previousValue = this._InstituteLoginUser.Entity;
				if (((previousValue != value) 
							|| (this._InstituteLoginUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InstituteLoginUser.Entity = null;
						previousValue.Tutorials.Remove(this);
					}
					this._InstituteLoginUser.Entity = value;
					if ((value != null))
					{
						value.Tutorials.Add(this);
						this._LoginUserID = value.LoginUserID;
					}
					else
					{
						this._LoginUserID = default(int);
					}
					this.SendPropertyChanged("InstituteLoginUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TutorialType_Tutorial", Storage="_TutorialType", ThisKey="TutorialTypeID", OtherKey="TutorialTypeID", IsForeignKey=true)]
		public TutorialType TutorialType
		{
			get
			{
				return this._TutorialType.Entity;
			}
			set
			{
				TutorialType previousValue = this._TutorialType.Entity;
				if (((previousValue != value) 
							|| (this._TutorialType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TutorialType.Entity = null;
						previousValue.Tutorials.Remove(this);
					}
					this._TutorialType.Entity = value;
					if ((value != null))
					{
						value.Tutorials.Add(this);
						this._TutorialTypeID = value.TutorialTypeID;
					}
					else
					{
						this._TutorialTypeID = default(int);
					}
					this.SendPropertyChanged("TutorialType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Instructor")]
	public partial class Instructor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InstructorID;
		
		private int _InstituteID;
		
		private int _LoginUserID;
		
		private int _InstituteCourceID;
		
		private string _InstructorText;
		
		private System.Nullable<int> _Ratting;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntityRef<InstituteCource> _InstituteCource;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInstructorIDChanging(int value);
    partial void OnInstructorIDChanged();
    partial void OnInstituteIDChanging(int value);
    partial void OnInstituteIDChanged();
    partial void OnLoginUserIDChanging(int value);
    partial void OnLoginUserIDChanged();
    partial void OnInstituteCourceIDChanging(int value);
    partial void OnInstituteCourceIDChanged();
    partial void OnInstructorTextChanging(string value);
    partial void OnInstructorTextChanged();
    partial void OnRattingChanging(System.Nullable<int> value);
    partial void OnRattingChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public Instructor()
		{
			this._InstituteCource = default(EntityRef<InstituteCource>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstructorID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int InstructorID
		{
			get
			{
				return this._InstructorID;
			}
			set
			{
				if ((this._InstructorID != value))
				{
					this.OnInstructorIDChanging(value);
					this.SendPropertyChanging();
					this._InstructorID = value;
					this.SendPropertyChanged("InstructorID");
					this.OnInstructorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteID", DbType="Int NOT NULL")]
		public int InstituteID
		{
			get
			{
				return this._InstituteID;
			}
			set
			{
				if ((this._InstituteID != value))
				{
					this.OnInstituteIDChanging(value);
					this.SendPropertyChanging();
					this._InstituteID = value;
					this.SendPropertyChanged("InstituteID");
					this.OnInstituteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginUserID", DbType="Int NOT NULL")]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					this.OnLoginUserIDChanging(value);
					this.SendPropertyChanging();
					this._LoginUserID = value;
					this.SendPropertyChanged("LoginUserID");
					this.OnLoginUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteCourceID", DbType="Int NOT NULL")]
		public int InstituteCourceID
		{
			get
			{
				return this._InstituteCourceID;
			}
			set
			{
				if ((this._InstituteCourceID != value))
				{
					if (this._InstituteCource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstituteCourceIDChanging(value);
					this.SendPropertyChanging();
					this._InstituteCourceID = value;
					this.SendPropertyChanged("InstituteCourceID");
					this.OnInstituteCourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstructorText", DbType="VarChar(MAX)")]
		public string InstructorText
		{
			get
			{
				return this._InstructorText;
			}
			set
			{
				if ((this._InstructorText != value))
				{
					this.OnInstructorTextChanging(value);
					this.SendPropertyChanging();
					this._InstructorText = value;
					this.SendPropertyChanged("InstructorText");
					this.OnInstructorTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ratting", DbType="Int")]
		public System.Nullable<int> Ratting
		{
			get
			{
				return this._Ratting;
			}
			set
			{
				if ((this._Ratting != value))
				{
					this.OnRattingChanging(value);
					this.SendPropertyChanging();
					this._Ratting = value;
					this.SendPropertyChanged("Ratting");
					this.OnRattingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstituteCource_Instructor", Storage="_InstituteCource", ThisKey="InstituteCourceID", OtherKey="InstituteCourceID", IsForeignKey=true)]
		public InstituteCource InstituteCource
		{
			get
			{
				return this._InstituteCource.Entity;
			}
			set
			{
				InstituteCource previousValue = this._InstituteCource.Entity;
				if (((previousValue != value) 
							|| (this._InstituteCource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InstituteCource.Entity = null;
						previousValue.Instructors.Remove(this);
					}
					this._InstituteCource.Entity = value;
					if ((value != null))
					{
						value.Instructors.Add(this);
						this._InstituteCourceID = value.InstituteCourceID;
					}
					else
					{
						this._InstituteCourceID = default(int);
					}
					this.SendPropertyChanged("InstituteCource");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InstituteSubject")]
	public partial class InstituteSubject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InstituteSubjectID;
		
		private int _LoginUserID;
		
		private string _SubjectText;
		
		private string _Description;
		
		private int _InstituteCourceID;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<InstituteCource> _InstituteCource;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInstituteSubjectIDChanging(int value);
    partial void OnInstituteSubjectIDChanged();
    partial void OnLoginUserIDChanging(int value);
    partial void OnLoginUserIDChanged();
    partial void OnSubjectTextChanging(string value);
    partial void OnSubjectTextChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnInstituteCourceIDChanging(int value);
    partial void OnInstituteCourceIDChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public InstituteSubject()
		{
			this._InstituteCource = default(EntityRef<InstituteCource>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteSubjectID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InstituteSubjectID
		{
			get
			{
				return this._InstituteSubjectID;
			}
			set
			{
				if ((this._InstituteSubjectID != value))
				{
					this.OnInstituteSubjectIDChanging(value);
					this.SendPropertyChanging();
					this._InstituteSubjectID = value;
					this.SendPropertyChanged("InstituteSubjectID");
					this.OnInstituteSubjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginUserID", DbType="Int NOT NULL")]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					this.OnLoginUserIDChanging(value);
					this.SendPropertyChanging();
					this._LoginUserID = value;
					this.SendPropertyChanged("LoginUserID");
					this.OnLoginUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectText", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SubjectText
		{
			get
			{
				return this._SubjectText;
			}
			set
			{
				if ((this._SubjectText != value))
				{
					this.OnSubjectTextChanging(value);
					this.SendPropertyChanging();
					this._SubjectText = value;
					this.SendPropertyChanged("SubjectText");
					this.OnSubjectTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteCourceID", DbType="Int NOT NULL")]
		public int InstituteCourceID
		{
			get
			{
				return this._InstituteCourceID;
			}
			set
			{
				if ((this._InstituteCourceID != value))
				{
					if (this._InstituteCource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstituteCourceIDChanging(value);
					this.SendPropertyChanging();
					this._InstituteCourceID = value;
					this.SendPropertyChanged("InstituteCourceID");
					this.OnInstituteCourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstituteCource_InstituteSubject", Storage="_InstituteCource", ThisKey="InstituteCourceID", OtherKey="InstituteCourceID", IsForeignKey=true)]
		public InstituteCource InstituteCource
		{
			get
			{
				return this._InstituteCource.Entity;
			}
			set
			{
				InstituteCource previousValue = this._InstituteCource.Entity;
				if (((previousValue != value) 
							|| (this._InstituteCource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InstituteCource.Entity = null;
						previousValue.InstituteSubjects.Remove(this);
					}
					this._InstituteCource.Entity = value;
					if ((value != null))
					{
						value.InstituteSubjects.Add(this);
						this._InstituteCourceID = value.InstituteCourceID;
					}
					else
					{
						this._InstituteCourceID = default(int);
					}
					this.SendPropertyChanged("InstituteCource");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InstituteUser")]
	public partial class InstituteUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InstituteUserID;
		
		private int _InstituteID;
		
		private int _LoginUserID;
		
		private string _Description;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<InstituteLoginUser> _InstituteLoginUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInstituteUserIDChanging(int value);
    partial void OnInstituteUserIDChanged();
    partial void OnInstituteIDChanging(int value);
    partial void OnInstituteIDChanged();
    partial void OnLoginUserIDChanging(int value);
    partial void OnLoginUserIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public InstituteUser()
		{
			this._InstituteLoginUser = default(EntityRef<InstituteLoginUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteUserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InstituteUserID
		{
			get
			{
				return this._InstituteUserID;
			}
			set
			{
				if ((this._InstituteUserID != value))
				{
					this.OnInstituteUserIDChanging(value);
					this.SendPropertyChanging();
					this._InstituteUserID = value;
					this.SendPropertyChanged("InstituteUserID");
					this.OnInstituteUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteID", DbType="Int NOT NULL")]
		public int InstituteID
		{
			get
			{
				return this._InstituteID;
			}
			set
			{
				if ((this._InstituteID != value))
				{
					this.OnInstituteIDChanging(value);
					this.SendPropertyChanging();
					this._InstituteID = value;
					this.SendPropertyChanged("InstituteID");
					this.OnInstituteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginUserID", DbType="Int NOT NULL")]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					if (this._InstituteLoginUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginUserIDChanging(value);
					this.SendPropertyChanging();
					this._LoginUserID = value;
					this.SendPropertyChanged("LoginUserID");
					this.OnLoginUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstituteLoginUser_InstituteUser", Storage="_InstituteLoginUser", ThisKey="LoginUserID", OtherKey="LoginUserID", IsForeignKey=true)]
		public InstituteLoginUser InstituteLoginUser
		{
			get
			{
				return this._InstituteLoginUser.Entity;
			}
			set
			{
				InstituteLoginUser previousValue = this._InstituteLoginUser.Entity;
				if (((previousValue != value) 
							|| (this._InstituteLoginUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InstituteLoginUser.Entity = null;
						previousValue.InstituteUsers.Remove(this);
					}
					this._InstituteLoginUser.Entity = value;
					if ((value != null))
					{
						value.InstituteUsers.Add(this);
						this._LoginUserID = value.LoginUserID;
					}
					else
					{
						this._LoginUserID = default(int);
					}
					this.SendPropertyChanged("InstituteLoginUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InstituteUserType")]
	public partial class InstituteUserType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InstituteUserTypeID;
		
		private int _LoginUserID;
		
		private int _InstituteID;
		
		private string _Name;
		
		private string _Description;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<InstituteUserInUserType> _InstituteUserInUserTypes;
		
		private EntitySet<InstituteUserTypeAccess> _InstituteUserTypeAccesses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInstituteUserTypeIDChanging(int value);
    partial void OnInstituteUserTypeIDChanged();
    partial void OnLoginUserIDChanging(int value);
    partial void OnLoginUserIDChanged();
    partial void OnInstituteIDChanging(int value);
    partial void OnInstituteIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public InstituteUserType()
		{
			this._InstituteUserInUserTypes = new EntitySet<InstituteUserInUserType>(new Action<InstituteUserInUserType>(this.attach_InstituteUserInUserTypes), new Action<InstituteUserInUserType>(this.detach_InstituteUserInUserTypes));
			this._InstituteUserTypeAccesses = new EntitySet<InstituteUserTypeAccess>(new Action<InstituteUserTypeAccess>(this.attach_InstituteUserTypeAccesses), new Action<InstituteUserTypeAccess>(this.detach_InstituteUserTypeAccesses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteUserTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InstituteUserTypeID
		{
			get
			{
				return this._InstituteUserTypeID;
			}
			set
			{
				if ((this._InstituteUserTypeID != value))
				{
					this.OnInstituteUserTypeIDChanging(value);
					this.SendPropertyChanging();
					this._InstituteUserTypeID = value;
					this.SendPropertyChanged("InstituteUserTypeID");
					this.OnInstituteUserTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginUserID", DbType="Int NOT NULL")]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					this.OnLoginUserIDChanging(value);
					this.SendPropertyChanging();
					this._LoginUserID = value;
					this.SendPropertyChanged("LoginUserID");
					this.OnLoginUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteID", DbType="Int NOT NULL")]
		public int InstituteID
		{
			get
			{
				return this._InstituteID;
			}
			set
			{
				if ((this._InstituteID != value))
				{
					this.OnInstituteIDChanging(value);
					this.SendPropertyChanging();
					this._InstituteID = value;
					this.SendPropertyChanged("InstituteID");
					this.OnInstituteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstituteUserType_InstituteUserInUserType", Storage="_InstituteUserInUserTypes", ThisKey="InstituteUserTypeID", OtherKey="InstituteUserTypeID")]
		public EntitySet<InstituteUserInUserType> InstituteUserInUserTypes
		{
			get
			{
				return this._InstituteUserInUserTypes;
			}
			set
			{
				this._InstituteUserInUserTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstituteUserType_InstituteUserTypeAccess", Storage="_InstituteUserTypeAccesses", ThisKey="InstituteUserTypeID", OtherKey="InstituteUserTypeID")]
		public EntitySet<InstituteUserTypeAccess> InstituteUserTypeAccesses
		{
			get
			{
				return this._InstituteUserTypeAccesses;
			}
			set
			{
				this._InstituteUserTypeAccesses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InstituteUserInUserTypes(InstituteUserInUserType entity)
		{
			this.SendPropertyChanging();
			entity.InstituteUserType = this;
		}
		
		private void detach_InstituteUserInUserTypes(InstituteUserInUserType entity)
		{
			this.SendPropertyChanging();
			entity.InstituteUserType = null;
		}
		
		private void attach_InstituteUserTypeAccesses(InstituteUserTypeAccess entity)
		{
			this.SendPropertyChanging();
			entity.InstituteUserType = this;
		}
		
		private void detach_InstituteUserTypeAccesses(InstituteUserTypeAccess entity)
		{
			this.SendPropertyChanging();
			entity.InstituteUserType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InstituteUserInUserType")]
	public partial class InstituteUserInUserType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InstituteUserInUserTypeID;
		
		private int _LoginUserID;
		
		private int _InstituteUserID;
		
		private int _InstituteUserTypeID;
		
		private System.DateTime _Modifieddate;
		
		private EntityRef<InstituteUserType> _InstituteUserType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInstituteUserInUserTypeIDChanging(int value);
    partial void OnInstituteUserInUserTypeIDChanged();
    partial void OnLoginUserIDChanging(int value);
    partial void OnLoginUserIDChanged();
    partial void OnInstituteUserIDChanging(int value);
    partial void OnInstituteUserIDChanged();
    partial void OnInstituteUserTypeIDChanging(int value);
    partial void OnInstituteUserTypeIDChanged();
    partial void OnModifieddateChanging(System.DateTime value);
    partial void OnModifieddateChanged();
    #endregion
		
		public InstituteUserInUserType()
		{
			this._InstituteUserType = default(EntityRef<InstituteUserType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteUserInUserTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InstituteUserInUserTypeID
		{
			get
			{
				return this._InstituteUserInUserTypeID;
			}
			set
			{
				if ((this._InstituteUserInUserTypeID != value))
				{
					this.OnInstituteUserInUserTypeIDChanging(value);
					this.SendPropertyChanging();
					this._InstituteUserInUserTypeID = value;
					this.SendPropertyChanged("InstituteUserInUserTypeID");
					this.OnInstituteUserInUserTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginUserID", DbType="Int NOT NULL")]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					this.OnLoginUserIDChanging(value);
					this.SendPropertyChanging();
					this._LoginUserID = value;
					this.SendPropertyChanged("LoginUserID");
					this.OnLoginUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteUserID", DbType="Int NOT NULL")]
		public int InstituteUserID
		{
			get
			{
				return this._InstituteUserID;
			}
			set
			{
				if ((this._InstituteUserID != value))
				{
					this.OnInstituteUserIDChanging(value);
					this.SendPropertyChanging();
					this._InstituteUserID = value;
					this.SendPropertyChanged("InstituteUserID");
					this.OnInstituteUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteUserTypeID", DbType="Int NOT NULL")]
		public int InstituteUserTypeID
		{
			get
			{
				return this._InstituteUserTypeID;
			}
			set
			{
				if ((this._InstituteUserTypeID != value))
				{
					if (this._InstituteUserType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstituteUserTypeIDChanging(value);
					this.SendPropertyChanging();
					this._InstituteUserTypeID = value;
					this.SendPropertyChanged("InstituteUserTypeID");
					this.OnInstituteUserTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modifieddate", DbType="DateTime NOT NULL")]
		public System.DateTime Modifieddate
		{
			get
			{
				return this._Modifieddate;
			}
			set
			{
				if ((this._Modifieddate != value))
				{
					this.OnModifieddateChanging(value);
					this.SendPropertyChanging();
					this._Modifieddate = value;
					this.SendPropertyChanged("Modifieddate");
					this.OnModifieddateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstituteUserType_InstituteUserInUserType", Storage="_InstituteUserType", ThisKey="InstituteUserTypeID", OtherKey="InstituteUserTypeID", IsForeignKey=true)]
		public InstituteUserType InstituteUserType
		{
			get
			{
				return this._InstituteUserType.Entity;
			}
			set
			{
				InstituteUserType previousValue = this._InstituteUserType.Entity;
				if (((previousValue != value) 
							|| (this._InstituteUserType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InstituteUserType.Entity = null;
						previousValue.InstituteUserInUserTypes.Remove(this);
					}
					this._InstituteUserType.Entity = value;
					if ((value != null))
					{
						value.InstituteUserInUserTypes.Add(this);
						this._InstituteUserTypeID = value.InstituteUserTypeID;
					}
					else
					{
						this._InstituteUserTypeID = default(int);
					}
					this.SendPropertyChanged("InstituteUserType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InstituteUserTypeAccess")]
	public partial class InstituteUserTypeAccess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InstituteUserTypeAccessID;
		
		private int _InstituteUserTypeID;
		
		private bool _CanAddExam;
		
		private bool _CanAddQuestion;
		
		private bool _CanAddUser;
		
		private bool _CanAddCource;
		
		private bool _CanAddSubject;
		
		private System.Nullable<bool> _CanAddAudio;
		
		private System.Nullable<bool> _CanAddImage;
		
		private System.Nullable<bool> _CanAddDocument;
		
		private System.Nullable<bool> _CanAddVideo;
		
		private System.Nullable<bool> _CanAddHomeWork;
		
		private System.Nullable<bool> _CanAddEvent;
		
		private System.Nullable<bool> _CanAddArticle;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<InstituteUserType> _InstituteUserType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInstituteUserTypeAccessIDChanging(int value);
    partial void OnInstituteUserTypeAccessIDChanged();
    partial void OnInstituteUserTypeIDChanging(int value);
    partial void OnInstituteUserTypeIDChanged();
    partial void OnCanAddExamChanging(bool value);
    partial void OnCanAddExamChanged();
    partial void OnCanAddQuestionChanging(bool value);
    partial void OnCanAddQuestionChanged();
    partial void OnCanAddUserChanging(bool value);
    partial void OnCanAddUserChanged();
    partial void OnCanAddCourceChanging(bool value);
    partial void OnCanAddCourceChanged();
    partial void OnCanAddSubjectChanging(bool value);
    partial void OnCanAddSubjectChanged();
    partial void OnCanAddAudioChanging(System.Nullable<bool> value);
    partial void OnCanAddAudioChanged();
    partial void OnCanAddImageChanging(System.Nullable<bool> value);
    partial void OnCanAddImageChanged();
    partial void OnCanAddDocumentChanging(System.Nullable<bool> value);
    partial void OnCanAddDocumentChanged();
    partial void OnCanAddVideoChanging(System.Nullable<bool> value);
    partial void OnCanAddVideoChanged();
    partial void OnCanAddHomeWorkChanging(System.Nullable<bool> value);
    partial void OnCanAddHomeWorkChanged();
    partial void OnCanAddEventChanging(System.Nullable<bool> value);
    partial void OnCanAddEventChanged();
    partial void OnCanAddArticleChanging(System.Nullable<bool> value);
    partial void OnCanAddArticleChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public InstituteUserTypeAccess()
		{
			this._InstituteUserType = default(EntityRef<InstituteUserType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteUserTypeAccessID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InstituteUserTypeAccessID
		{
			get
			{
				return this._InstituteUserTypeAccessID;
			}
			set
			{
				if ((this._InstituteUserTypeAccessID != value))
				{
					this.OnInstituteUserTypeAccessIDChanging(value);
					this.SendPropertyChanging();
					this._InstituteUserTypeAccessID = value;
					this.SendPropertyChanged("InstituteUserTypeAccessID");
					this.OnInstituteUserTypeAccessIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteUserTypeID", DbType="Int NOT NULL")]
		public int InstituteUserTypeID
		{
			get
			{
				return this._InstituteUserTypeID;
			}
			set
			{
				if ((this._InstituteUserTypeID != value))
				{
					if (this._InstituteUserType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstituteUserTypeIDChanging(value);
					this.SendPropertyChanging();
					this._InstituteUserTypeID = value;
					this.SendPropertyChanged("InstituteUserTypeID");
					this.OnInstituteUserTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAddExam", DbType="Bit NOT NULL")]
		public bool CanAddExam
		{
			get
			{
				return this._CanAddExam;
			}
			set
			{
				if ((this._CanAddExam != value))
				{
					this.OnCanAddExamChanging(value);
					this.SendPropertyChanging();
					this._CanAddExam = value;
					this.SendPropertyChanged("CanAddExam");
					this.OnCanAddExamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAddQuestion", DbType="Bit NOT NULL")]
		public bool CanAddQuestion
		{
			get
			{
				return this._CanAddQuestion;
			}
			set
			{
				if ((this._CanAddQuestion != value))
				{
					this.OnCanAddQuestionChanging(value);
					this.SendPropertyChanging();
					this._CanAddQuestion = value;
					this.SendPropertyChanged("CanAddQuestion");
					this.OnCanAddQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAddUser", DbType="Bit NOT NULL")]
		public bool CanAddUser
		{
			get
			{
				return this._CanAddUser;
			}
			set
			{
				if ((this._CanAddUser != value))
				{
					this.OnCanAddUserChanging(value);
					this.SendPropertyChanging();
					this._CanAddUser = value;
					this.SendPropertyChanged("CanAddUser");
					this.OnCanAddUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAddCource", DbType="Bit NOT NULL")]
		public bool CanAddCource
		{
			get
			{
				return this._CanAddCource;
			}
			set
			{
				if ((this._CanAddCource != value))
				{
					this.OnCanAddCourceChanging(value);
					this.SendPropertyChanging();
					this._CanAddCource = value;
					this.SendPropertyChanged("CanAddCource");
					this.OnCanAddCourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAddSubject", DbType="Bit NOT NULL")]
		public bool CanAddSubject
		{
			get
			{
				return this._CanAddSubject;
			}
			set
			{
				if ((this._CanAddSubject != value))
				{
					this.OnCanAddSubjectChanging(value);
					this.SendPropertyChanging();
					this._CanAddSubject = value;
					this.SendPropertyChanged("CanAddSubject");
					this.OnCanAddSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAddAudio", DbType="Bit")]
		public System.Nullable<bool> CanAddAudio
		{
			get
			{
				return this._CanAddAudio;
			}
			set
			{
				if ((this._CanAddAudio != value))
				{
					this.OnCanAddAudioChanging(value);
					this.SendPropertyChanging();
					this._CanAddAudio = value;
					this.SendPropertyChanged("CanAddAudio");
					this.OnCanAddAudioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAddImage", DbType="Bit")]
		public System.Nullable<bool> CanAddImage
		{
			get
			{
				return this._CanAddImage;
			}
			set
			{
				if ((this._CanAddImage != value))
				{
					this.OnCanAddImageChanging(value);
					this.SendPropertyChanging();
					this._CanAddImage = value;
					this.SendPropertyChanged("CanAddImage");
					this.OnCanAddImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAddDocument", DbType="Bit")]
		public System.Nullable<bool> CanAddDocument
		{
			get
			{
				return this._CanAddDocument;
			}
			set
			{
				if ((this._CanAddDocument != value))
				{
					this.OnCanAddDocumentChanging(value);
					this.SendPropertyChanging();
					this._CanAddDocument = value;
					this.SendPropertyChanged("CanAddDocument");
					this.OnCanAddDocumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAddVideo", DbType="Bit")]
		public System.Nullable<bool> CanAddVideo
		{
			get
			{
				return this._CanAddVideo;
			}
			set
			{
				if ((this._CanAddVideo != value))
				{
					this.OnCanAddVideoChanging(value);
					this.SendPropertyChanging();
					this._CanAddVideo = value;
					this.SendPropertyChanged("CanAddVideo");
					this.OnCanAddVideoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAddHomeWork", DbType="Bit")]
		public System.Nullable<bool> CanAddHomeWork
		{
			get
			{
				return this._CanAddHomeWork;
			}
			set
			{
				if ((this._CanAddHomeWork != value))
				{
					this.OnCanAddHomeWorkChanging(value);
					this.SendPropertyChanging();
					this._CanAddHomeWork = value;
					this.SendPropertyChanged("CanAddHomeWork");
					this.OnCanAddHomeWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAddEvent", DbType="Bit")]
		public System.Nullable<bool> CanAddEvent
		{
			get
			{
				return this._CanAddEvent;
			}
			set
			{
				if ((this._CanAddEvent != value))
				{
					this.OnCanAddEventChanging(value);
					this.SendPropertyChanging();
					this._CanAddEvent = value;
					this.SendPropertyChanged("CanAddEvent");
					this.OnCanAddEventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAddArticle", DbType="Bit")]
		public System.Nullable<bool> CanAddArticle
		{
			get
			{
				return this._CanAddArticle;
			}
			set
			{
				if ((this._CanAddArticle != value))
				{
					this.OnCanAddArticleChanging(value);
					this.SendPropertyChanging();
					this._CanAddArticle = value;
					this.SendPropertyChanged("CanAddArticle");
					this.OnCanAddArticleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstituteUserType_InstituteUserTypeAccess", Storage="_InstituteUserType", ThisKey="InstituteUserTypeID", OtherKey="InstituteUserTypeID", IsForeignKey=true)]
		public InstituteUserType InstituteUserType
		{
			get
			{
				return this._InstituteUserType.Entity;
			}
			set
			{
				InstituteUserType previousValue = this._InstituteUserType.Entity;
				if (((previousValue != value) 
							|| (this._InstituteUserType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InstituteUserType.Entity = null;
						previousValue.InstituteUserTypeAccesses.Remove(this);
					}
					this._InstituteUserType.Entity = value;
					if ((value != null))
					{
						value.InstituteUserTypeAccesses.Add(this);
						this._InstituteUserTypeID = value.InstituteUserTypeID;
					}
					else
					{
						this._InstituteUserTypeID = default(int);
					}
					this.SendPropertyChanged("InstituteUserType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InstituteCourceUser")]
	public partial class InstituteCourceUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _InstituteCourceUserID;
		
		private int _InstituteCourceID;
		
		private int _LoginUserID;
		
		private int _WhoLoginUserID;
		
		private int _Type;
		
		private System.DateTime _Modifieddate;
		
		private EntityRef<InstituteLoginUser> _InstituteLoginUser;
		
		private EntityRef<InstituteCource> _InstituteCource;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInstituteCourceUserIDChanging(System.Guid value);
    partial void OnInstituteCourceUserIDChanged();
    partial void OnInstituteCourceIDChanging(int value);
    partial void OnInstituteCourceIDChanged();
    partial void OnLoginUserIDChanging(int value);
    partial void OnLoginUserIDChanged();
    partial void OnWhoLoginUserIDChanging(int value);
    partial void OnWhoLoginUserIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnModifieddateChanging(System.DateTime value);
    partial void OnModifieddateChanged();
    #endregion
		
		public InstituteCourceUser()
		{
			this._InstituteLoginUser = default(EntityRef<InstituteLoginUser>);
			this._InstituteCource = default(EntityRef<InstituteCource>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteCourceUserID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid InstituteCourceUserID
		{
			get
			{
				return this._InstituteCourceUserID;
			}
			set
			{
				if ((this._InstituteCourceUserID != value))
				{
					this.OnInstituteCourceUserIDChanging(value);
					this.SendPropertyChanging();
					this._InstituteCourceUserID = value;
					this.SendPropertyChanged("InstituteCourceUserID");
					this.OnInstituteCourceUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteCourceID", DbType="Int NOT NULL")]
		public int InstituteCourceID
		{
			get
			{
				return this._InstituteCourceID;
			}
			set
			{
				if ((this._InstituteCourceID != value))
				{
					if (this._InstituteCource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstituteCourceIDChanging(value);
					this.SendPropertyChanging();
					this._InstituteCourceID = value;
					this.SendPropertyChanged("InstituteCourceID");
					this.OnInstituteCourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginUserID", DbType="Int NOT NULL")]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					if (this._InstituteLoginUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginUserIDChanging(value);
					this.SendPropertyChanging();
					this._LoginUserID = value;
					this.SendPropertyChanged("LoginUserID");
					this.OnLoginUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WhoLoginUserID", DbType="Int NOT NULL")]
		public int WhoLoginUserID
		{
			get
			{
				return this._WhoLoginUserID;
			}
			set
			{
				if ((this._WhoLoginUserID != value))
				{
					this.OnWhoLoginUserIDChanging(value);
					this.SendPropertyChanging();
					this._WhoLoginUserID = value;
					this.SendPropertyChanged("WhoLoginUserID");
					this.OnWhoLoginUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modifieddate", DbType="DateTime NOT NULL")]
		public System.DateTime Modifieddate
		{
			get
			{
				return this._Modifieddate;
			}
			set
			{
				if ((this._Modifieddate != value))
				{
					this.OnModifieddateChanging(value);
					this.SendPropertyChanging();
					this._Modifieddate = value;
					this.SendPropertyChanged("Modifieddate");
					this.OnModifieddateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstituteLoginUser_InstituteCourceUser", Storage="_InstituteLoginUser", ThisKey="LoginUserID", OtherKey="LoginUserID", IsForeignKey=true)]
		public InstituteLoginUser InstituteLoginUser
		{
			get
			{
				return this._InstituteLoginUser.Entity;
			}
			set
			{
				InstituteLoginUser previousValue = this._InstituteLoginUser.Entity;
				if (((previousValue != value) 
							|| (this._InstituteLoginUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InstituteLoginUser.Entity = null;
						previousValue.InstituteCourceUsers.Remove(this);
					}
					this._InstituteLoginUser.Entity = value;
					if ((value != null))
					{
						value.InstituteCourceUsers.Add(this);
						this._LoginUserID = value.LoginUserID;
					}
					else
					{
						this._LoginUserID = default(int);
					}
					this.SendPropertyChanged("InstituteLoginUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstituteCource_InstituteCourceUser", Storage="_InstituteCource", ThisKey="InstituteCourceID", OtherKey="InstituteCourceID", IsForeignKey=true)]
		public InstituteCource InstituteCource
		{
			get
			{
				return this._InstituteCource.Entity;
			}
			set
			{
				InstituteCource previousValue = this._InstituteCource.Entity;
				if (((previousValue != value) 
							|| (this._InstituteCource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InstituteCource.Entity = null;
						previousValue.InstituteCourceUsers.Remove(this);
					}
					this._InstituteCource.Entity = value;
					if ((value != null))
					{
						value.InstituteCourceUsers.Add(this);
						this._InstituteCourceID = value.InstituteCourceID;
					}
					else
					{
						this._InstituteCourceID = default(int);
					}
					this.SendPropertyChanged("InstituteCource");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Institute")]
	public partial class Institute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InstituteID;
		
		private int _LoginUserID;
		
		private string _Name;
		
		private string _Address;
		
		private string _CityName;
		
		private string _StateName;
		
		private string _CountryName;
		
		private string _TelePhone;
		
		private string _Fax;
		
		private string _Email;
		
		private string _WebSite;
		
		private System.Nullable<int> _CollegeType;
		
		private string _ShortName;
		
		private string _Description;
		
		private string _Logo;
		
		private System.DateTime _ModifiedDate;
		
		private bool _IsDeleted;
		
		private EntitySet<InstituteCource> _InstituteCources;
		
		private EntitySet<PortalSetting> _PortalSettings;
		
		private EntityRef<InstituteLoginUser> _InstituteLoginUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInstituteIDChanging(int value);
    partial void OnInstituteIDChanged();
    partial void OnLoginUserIDChanging(int value);
    partial void OnLoginUserIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityNameChanging(string value);
    partial void OnCityNameChanged();
    partial void OnStateNameChanging(string value);
    partial void OnStateNameChanged();
    partial void OnCountryNameChanging(string value);
    partial void OnCountryNameChanged();
    partial void OnTelePhoneChanging(string value);
    partial void OnTelePhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnWebSiteChanging(string value);
    partial void OnWebSiteChanged();
    partial void OnCollegeTypeChanging(System.Nullable<int> value);
    partial void OnCollegeTypeChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnLogoChanging(string value);
    partial void OnLogoChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public Institute()
		{
			this._InstituteCources = new EntitySet<InstituteCource>(new Action<InstituteCource>(this.attach_InstituteCources), new Action<InstituteCource>(this.detach_InstituteCources));
			this._PortalSettings = new EntitySet<PortalSetting>(new Action<PortalSetting>(this.attach_PortalSettings), new Action<PortalSetting>(this.detach_PortalSettings));
			this._InstituteLoginUser = default(EntityRef<InstituteLoginUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InstituteID
		{
			get
			{
				return this._InstituteID;
			}
			set
			{
				if ((this._InstituteID != value))
				{
					this.OnInstituteIDChanging(value);
					this.SendPropertyChanging();
					this._InstituteID = value;
					this.SendPropertyChanged("InstituteID");
					this.OnInstituteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginUserID", DbType="Int NOT NULL")]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					if (this._InstituteLoginUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginUserIDChanging(value);
					this.SendPropertyChanging();
					this._LoginUserID = value;
					this.SendPropertyChanged("LoginUserID");
					this.OnLoginUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="VarChar(MAX)")]
		public string CityName
		{
			get
			{
				return this._CityName;
			}
			set
			{
				if ((this._CityName != value))
				{
					this.OnCityNameChanging(value);
					this.SendPropertyChanging();
					this._CityName = value;
					this.SendPropertyChanged("CityName");
					this.OnCityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="VarChar(MAX)")]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this.OnStateNameChanging(value);
					this.SendPropertyChanging();
					this._StateName = value;
					this.SendPropertyChanged("StateName");
					this.OnStateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="VarChar(MAX)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this.OnCountryNameChanging(value);
					this.SendPropertyChanging();
					this._CountryName = value;
					this.SendPropertyChanged("CountryName");
					this.OnCountryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelePhone", DbType="VarChar(MAX)")]
		public string TelePhone
		{
			get
			{
				return this._TelePhone;
			}
			set
			{
				if ((this._TelePhone != value))
				{
					this.OnTelePhoneChanging(value);
					this.SendPropertyChanging();
					this._TelePhone = value;
					this.SendPropertyChanged("TelePhone");
					this.OnTelePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="VarChar(MAX)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(MAX)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSite", DbType="VarChar(MAX)")]
		public string WebSite
		{
			get
			{
				return this._WebSite;
			}
			set
			{
				if ((this._WebSite != value))
				{
					this.OnWebSiteChanging(value);
					this.SendPropertyChanging();
					this._WebSite = value;
					this.SendPropertyChanged("WebSite");
					this.OnWebSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollegeType", DbType="Int")]
		public System.Nullable<int> CollegeType
		{
			get
			{
				return this._CollegeType;
			}
			set
			{
				if ((this._CollegeType != value))
				{
					this.OnCollegeTypeChanging(value);
					this.SendPropertyChanging();
					this._CollegeType = value;
					this.SendPropertyChanged("CollegeType");
					this.OnCollegeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(MAX)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="VarChar(MAX)")]
		public string Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this.OnLogoChanging(value);
					this.SendPropertyChanging();
					this._Logo = value;
					this.SendPropertyChanged("Logo");
					this.OnLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institute_InstituteCource", Storage="_InstituteCources", ThisKey="InstituteID", OtherKey="InstituteID")]
		public EntitySet<InstituteCource> InstituteCources
		{
			get
			{
				return this._InstituteCources;
			}
			set
			{
				this._InstituteCources.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institute_PortalSetting", Storage="_PortalSettings", ThisKey="InstituteID", OtherKey="InstituteID")]
		public EntitySet<PortalSetting> PortalSettings
		{
			get
			{
				return this._PortalSettings;
			}
			set
			{
				this._PortalSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstituteLoginUser_Institute", Storage="_InstituteLoginUser", ThisKey="LoginUserID", OtherKey="LoginUserID", IsForeignKey=true)]
		public InstituteLoginUser InstituteLoginUser
		{
			get
			{
				return this._InstituteLoginUser.Entity;
			}
			set
			{
				InstituteLoginUser previousValue = this._InstituteLoginUser.Entity;
				if (((previousValue != value) 
							|| (this._InstituteLoginUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InstituteLoginUser.Entity = null;
						previousValue.Institutes.Remove(this);
					}
					this._InstituteLoginUser.Entity = value;
					if ((value != null))
					{
						value.Institutes.Add(this);
						this._LoginUserID = value.LoginUserID;
					}
					else
					{
						this._LoginUserID = default(int);
					}
					this.SendPropertyChanged("InstituteLoginUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InstituteCources(InstituteCource entity)
		{
			this.SendPropertyChanging();
			entity.Institute = this;
		}
		
		private void detach_InstituteCources(InstituteCource entity)
		{
			this.SendPropertyChanging();
			entity.Institute = null;
		}
		
		private void attach_PortalSettings(PortalSetting entity)
		{
			this.SendPropertyChanging();
			entity.Institute = this;
		}
		
		private void detach_PortalSettings(PortalSetting entity)
		{
			this.SendPropertyChanging();
			entity.Institute = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HomeWork")]
	public partial class HomeWork : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HomeWorkID;
		
		private int _LoginUserID;
		
		private System.Nullable<int> _EditLoginUserID;
		
		private string _Title;
		
		private string _Description;
		
		private string _ShortDescription;
		
		private System.Nullable<int> _InstituteCourceID;
		
		private System.Nullable<int> _InstituteSubjectID;
		
		private System.DateTime _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHomeWorkIDChanging(int value);
    partial void OnHomeWorkIDChanged();
    partial void OnLoginUserIDChanging(int value);
    partial void OnLoginUserIDChanged();
    partial void OnEditLoginUserIDChanging(System.Nullable<int> value);
    partial void OnEditLoginUserIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnShortDescriptionChanging(string value);
    partial void OnShortDescriptionChanged();
    partial void OnInstituteCourceIDChanging(System.Nullable<int> value);
    partial void OnInstituteCourceIDChanged();
    partial void OnInstituteSubjectIDChanging(System.Nullable<int> value);
    partial void OnInstituteSubjectIDChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public HomeWork()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeWorkID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HomeWorkID
		{
			get
			{
				return this._HomeWorkID;
			}
			set
			{
				if ((this._HomeWorkID != value))
				{
					this.OnHomeWorkIDChanging(value);
					this.SendPropertyChanging();
					this._HomeWorkID = value;
					this.SendPropertyChanged("HomeWorkID");
					this.OnHomeWorkIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginUserID", DbType="Int NOT NULL")]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					this.OnLoginUserIDChanging(value);
					this.SendPropertyChanging();
					this._LoginUserID = value;
					this.SendPropertyChanged("LoginUserID");
					this.OnLoginUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditLoginUserID", DbType="Int")]
		public System.Nullable<int> EditLoginUserID
		{
			get
			{
				return this._EditLoginUserID;
			}
			set
			{
				if ((this._EditLoginUserID != value))
				{
					this.OnEditLoginUserIDChanging(value);
					this.SendPropertyChanging();
					this._EditLoginUserID = value;
					this.SendPropertyChanged("EditLoginUserID");
					this.OnEditLoginUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDescription", DbType="VarChar(MAX)")]
		public string ShortDescription
		{
			get
			{
				return this._ShortDescription;
			}
			set
			{
				if ((this._ShortDescription != value))
				{
					this.OnShortDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ShortDescription = value;
					this.SendPropertyChanged("ShortDescription");
					this.OnShortDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteCourceID", DbType="Int")]
		public System.Nullable<int> InstituteCourceID
		{
			get
			{
				return this._InstituteCourceID;
			}
			set
			{
				if ((this._InstituteCourceID != value))
				{
					this.OnInstituteCourceIDChanging(value);
					this.SendPropertyChanging();
					this._InstituteCourceID = value;
					this.SendPropertyChanged("InstituteCourceID");
					this.OnInstituteCourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteSubjectID", DbType="Int")]
		public System.Nullable<int> InstituteSubjectID
		{
			get
			{
				return this._InstituteSubjectID;
			}
			set
			{
				if ((this._InstituteSubjectID != value))
				{
					this.OnInstituteSubjectIDChanging(value);
					this.SendPropertyChanging();
					this._InstituteSubjectID = value;
					this.SendPropertyChanged("InstituteSubjectID");
					this.OnInstituteSubjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InstituteCource")]
	public partial class InstituteCource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InstituteCourceID;
		
		private int _InstituteID;
		
		private int _CourceID;
		
		private System.Nullable<int> _LoginUserID;
		
		private string _MetaDescription;
		
		private string _MetaKeyword;
		
		private System.DateTime _Modifieddate;
		
		private EntitySet<Instructor> _Instructors;
		
		private EntitySet<InstituteSubject> _InstituteSubjects;
		
		private EntitySet<InstituteCourceUser> _InstituteCourceUsers;
		
		private EntityRef<Cource> _Cource;
		
		private EntityRef<Institute> _Institute;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInstituteCourceIDChanging(int value);
    partial void OnInstituteCourceIDChanged();
    partial void OnInstituteIDChanging(int value);
    partial void OnInstituteIDChanged();
    partial void OnCourceIDChanging(int value);
    partial void OnCourceIDChanged();
    partial void OnLoginUserIDChanging(System.Nullable<int> value);
    partial void OnLoginUserIDChanged();
    partial void OnMetaDescriptionChanging(string value);
    partial void OnMetaDescriptionChanged();
    partial void OnMetaKeywordChanging(string value);
    partial void OnMetaKeywordChanged();
    partial void OnModifieddateChanging(System.DateTime value);
    partial void OnModifieddateChanged();
    #endregion
		
		public InstituteCource()
		{
			this._Instructors = new EntitySet<Instructor>(new Action<Instructor>(this.attach_Instructors), new Action<Instructor>(this.detach_Instructors));
			this._InstituteSubjects = new EntitySet<InstituteSubject>(new Action<InstituteSubject>(this.attach_InstituteSubjects), new Action<InstituteSubject>(this.detach_InstituteSubjects));
			this._InstituteCourceUsers = new EntitySet<InstituteCourceUser>(new Action<InstituteCourceUser>(this.attach_InstituteCourceUsers), new Action<InstituteCourceUser>(this.detach_InstituteCourceUsers));
			this._Cource = default(EntityRef<Cource>);
			this._Institute = default(EntityRef<Institute>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteCourceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InstituteCourceID
		{
			get
			{
				return this._InstituteCourceID;
			}
			set
			{
				if ((this._InstituteCourceID != value))
				{
					this.OnInstituteCourceIDChanging(value);
					this.SendPropertyChanging();
					this._InstituteCourceID = value;
					this.SendPropertyChanged("InstituteCourceID");
					this.OnInstituteCourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteID", DbType="Int NOT NULL")]
		public int InstituteID
		{
			get
			{
				return this._InstituteID;
			}
			set
			{
				if ((this._InstituteID != value))
				{
					if (this._Institute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstituteIDChanging(value);
					this.SendPropertyChanging();
					this._InstituteID = value;
					this.SendPropertyChanged("InstituteID");
					this.OnInstituteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourceID", DbType="Int NOT NULL")]
		public int CourceID
		{
			get
			{
				return this._CourceID;
			}
			set
			{
				if ((this._CourceID != value))
				{
					if (this._Cource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourceIDChanging(value);
					this.SendPropertyChanging();
					this._CourceID = value;
					this.SendPropertyChanged("CourceID");
					this.OnCourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginUserID", DbType="Int")]
		public System.Nullable<int> LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					this.OnLoginUserIDChanging(value);
					this.SendPropertyChanging();
					this._LoginUserID = value;
					this.SendPropertyChanged("LoginUserID");
					this.OnLoginUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="VarChar(MAX)")]
		public string MetaDescription
		{
			get
			{
				return this._MetaDescription;
			}
			set
			{
				if ((this._MetaDescription != value))
				{
					this.OnMetaDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MetaDescription = value;
					this.SendPropertyChanged("MetaDescription");
					this.OnMetaDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeyword", DbType="VarChar(MAX)")]
		public string MetaKeyword
		{
			get
			{
				return this._MetaKeyword;
			}
			set
			{
				if ((this._MetaKeyword != value))
				{
					this.OnMetaKeywordChanging(value);
					this.SendPropertyChanging();
					this._MetaKeyword = value;
					this.SendPropertyChanged("MetaKeyword");
					this.OnMetaKeywordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modifieddate", DbType="DateTime NOT NULL")]
		public System.DateTime Modifieddate
		{
			get
			{
				return this._Modifieddate;
			}
			set
			{
				if ((this._Modifieddate != value))
				{
					this.OnModifieddateChanging(value);
					this.SendPropertyChanging();
					this._Modifieddate = value;
					this.SendPropertyChanged("Modifieddate");
					this.OnModifieddateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstituteCource_Instructor", Storage="_Instructors", ThisKey="InstituteCourceID", OtherKey="InstituteCourceID")]
		public EntitySet<Instructor> Instructors
		{
			get
			{
				return this._Instructors;
			}
			set
			{
				this._Instructors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstituteCource_InstituteSubject", Storage="_InstituteSubjects", ThisKey="InstituteCourceID", OtherKey="InstituteCourceID")]
		public EntitySet<InstituteSubject> InstituteSubjects
		{
			get
			{
				return this._InstituteSubjects;
			}
			set
			{
				this._InstituteSubjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstituteCource_InstituteCourceUser", Storage="_InstituteCourceUsers", ThisKey="InstituteCourceID", OtherKey="InstituteCourceID")]
		public EntitySet<InstituteCourceUser> InstituteCourceUsers
		{
			get
			{
				return this._InstituteCourceUsers;
			}
			set
			{
				this._InstituteCourceUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cource_InstituteCource", Storage="_Cource", ThisKey="CourceID", OtherKey="CourceID", IsForeignKey=true)]
		public Cource Cource
		{
			get
			{
				return this._Cource.Entity;
			}
			set
			{
				Cource previousValue = this._Cource.Entity;
				if (((previousValue != value) 
							|| (this._Cource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cource.Entity = null;
						previousValue.InstituteCources.Remove(this);
					}
					this._Cource.Entity = value;
					if ((value != null))
					{
						value.InstituteCources.Add(this);
						this._CourceID = value.CourceID;
					}
					else
					{
						this._CourceID = default(int);
					}
					this.SendPropertyChanged("Cource");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institute_InstituteCource", Storage="_Institute", ThisKey="InstituteID", OtherKey="InstituteID", IsForeignKey=true)]
		public Institute Institute
		{
			get
			{
				return this._Institute.Entity;
			}
			set
			{
				Institute previousValue = this._Institute.Entity;
				if (((previousValue != value) 
							|| (this._Institute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Institute.Entity = null;
						previousValue.InstituteCources.Remove(this);
					}
					this._Institute.Entity = value;
					if ((value != null))
					{
						value.InstituteCources.Add(this);
						this._InstituteID = value.InstituteID;
					}
					else
					{
						this._InstituteID = default(int);
					}
					this.SendPropertyChanged("Institute");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Instructors(Instructor entity)
		{
			this.SendPropertyChanging();
			entity.InstituteCource = this;
		}
		
		private void detach_Instructors(Instructor entity)
		{
			this.SendPropertyChanging();
			entity.InstituteCource = null;
		}
		
		private void attach_InstituteSubjects(InstituteSubject entity)
		{
			this.SendPropertyChanging();
			entity.InstituteCource = this;
		}
		
		private void detach_InstituteSubjects(InstituteSubject entity)
		{
			this.SendPropertyChanging();
			entity.InstituteCource = null;
		}
		
		private void attach_InstituteCourceUsers(InstituteCourceUser entity)
		{
			this.SendPropertyChanging();
			entity.InstituteCource = this;
		}
		
		private void detach_InstituteCourceUsers(InstituteCourceUser entity)
		{
			this.SendPropertyChanging();
			entity.InstituteCource = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PortalSetting")]
	public partial class PortalSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PortalSettingID;
		
		private int _InstituteID;
		
		private System.Xml.Linq.XElement _Settings;
		
		private string _ItemIndex;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<Institute> _Institute;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPortalSettingIDChanging(System.Guid value);
    partial void OnPortalSettingIDChanged();
    partial void OnInstituteIDChanging(int value);
    partial void OnInstituteIDChanged();
    partial void OnSettingsChanging(System.Xml.Linq.XElement value);
    partial void OnSettingsChanged();
    partial void OnItemIndexChanging(string value);
    partial void OnItemIndexChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public PortalSetting()
		{
			this._Institute = default(EntityRef<Institute>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalSettingID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PortalSettingID
		{
			get
			{
				return this._PortalSettingID;
			}
			set
			{
				if ((this._PortalSettingID != value))
				{
					this.OnPortalSettingIDChanging(value);
					this.SendPropertyChanging();
					this._PortalSettingID = value;
					this.SendPropertyChanged("PortalSettingID");
					this.OnPortalSettingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteID", DbType="Int NOT NULL")]
		public int InstituteID
		{
			get
			{
				return this._InstituteID;
			}
			set
			{
				if ((this._InstituteID != value))
				{
					if (this._Institute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstituteIDChanging(value);
					this.SendPropertyChanging();
					this._InstituteID = value;
					this.SendPropertyChanged("InstituteID");
					this.OnInstituteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Settings", DbType="Xml NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement Settings
		{
			get
			{
				return this._Settings;
			}
			set
			{
				if ((this._Settings != value))
				{
					this.OnSettingsChanging(value);
					this.SendPropertyChanging();
					this._Settings = value;
					this.SendPropertyChanged("Settings");
					this.OnSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemIndex", DbType="VarChar(50)")]
		public string ItemIndex
		{
			get
			{
				return this._ItemIndex;
			}
			set
			{
				if ((this._ItemIndex != value))
				{
					this.OnItemIndexChanging(value);
					this.SendPropertyChanging();
					this._ItemIndex = value;
					this.SendPropertyChanged("ItemIndex");
					this.OnItemIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institute_PortalSetting", Storage="_Institute", ThisKey="InstituteID", OtherKey="InstituteID", IsForeignKey=true)]
		public Institute Institute
		{
			get
			{
				return this._Institute.Entity;
			}
			set
			{
				Institute previousValue = this._Institute.Entity;
				if (((previousValue != value) 
							|| (this._Institute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Institute.Entity = null;
						previousValue.PortalSettings.Remove(this);
					}
					this._Institute.Entity = value;
					if ((value != null))
					{
						value.PortalSettings.Add(this);
						this._InstituteID = value.InstituteID;
					}
					else
					{
						this._InstituteID = default(int);
					}
					this.SendPropertyChanged("Institute");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetTutorialResult
	{
		
		private int _TutorialID;
		
		private int _TutorialTypeID;
		
		private int _LoginUserID;
		
		private string _Name;
		
		private string _Description;
		
		private System.DateTime _ModifiedDate;
		
		private string _FilePath;
		
		private string _TutorialType;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _MiddleName;
		
		private string _PhotoPath;
		
		public GetTutorialResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TutorialID", DbType="Int NOT NULL")]
		public int TutorialID
		{
			get
			{
				return this._TutorialID;
			}
			set
			{
				if ((this._TutorialID != value))
				{
					this._TutorialID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TutorialTypeID", DbType="Int NOT NULL")]
		public int TutorialTypeID
		{
			get
			{
				return this._TutorialTypeID;
			}
			set
			{
				if ((this._TutorialTypeID != value))
				{
					this._TutorialTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginUserID", DbType="Int NOT NULL")]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					this._LoginUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this._FilePath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TutorialType", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string TutorialType
		{
			get
			{
				return this._TutorialType;
			}
			set
			{
				if ((this._TutorialType != value))
				{
					this._TutorialType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(1000)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(1000)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="VarChar(1000)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this._MiddleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoPath", DbType="VarChar(2000)")]
		public string PhotoPath
		{
			get
			{
				return this._PhotoPath;
			}
			set
			{
				if ((this._PhotoPath != value))
				{
					this._PhotoPath = value;
				}
			}
		}
	}
	
	public partial class GetCourceByInstituteIDResult
	{
		
		private string _CourceName;
		
		private int _InstituteCourceID;
		
		private int _InstituteID;
		
		private int _CourceID;
		
		public GetCourceByInstituteIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourceName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CourceName
		{
			get
			{
				return this._CourceName;
			}
			set
			{
				if ((this._CourceName != value))
				{
					this._CourceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteCourceID", DbType="Int NOT NULL")]
		public int InstituteCourceID
		{
			get
			{
				return this._InstituteCourceID;
			}
			set
			{
				if ((this._InstituteCourceID != value))
				{
					this._InstituteCourceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteID", DbType="Int NOT NULL")]
		public int InstituteID
		{
			get
			{
				return this._InstituteID;
			}
			set
			{
				if ((this._InstituteID != value))
				{
					this._InstituteID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourceID", DbType="Int NOT NULL")]
		public int CourceID
		{
			get
			{
				return this._CourceID;
			}
			set
			{
				if ((this._CourceID != value))
				{
					this._CourceID = value;
				}
			}
		}
	}
	
	public partial class GetInstituteByLoginUserIDResult
	{
		
		private string _InstituteName;
		
		private string _Username;
		
		private int _UserID;
		
		private int _LoginUserID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _MiddleName;
		
		private string _PhotoPath;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _City;
		
		private string _State;
		
		private string _Country;
		
		private string _WebSite;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private int _InstituteID;
		
		public GetInstituteByLoginUserIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string InstituteName
		{
			get
			{
				return this._InstituteName;
			}
			set
			{
				if ((this._InstituteName != value))
				{
					this._InstituteName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginUserID", DbType="Int NOT NULL")]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					this._LoginUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(1000)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(1000)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="VarChar(1000)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this._MiddleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoPath", DbType="VarChar(2000)")]
		public string PhotoPath
		{
			get
			{
				return this._PhotoPath;
			}
			set
			{
				if ((this._PhotoPath != value))
				{
					this._PhotoPath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="VarChar(MAX)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this._Address1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="VarChar(MAX)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this._Address2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(2000)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(2000)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(2000)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this._Country = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSite", DbType="VarChar(2000)")]
		public string WebSite
		{
			get
			{
				return this._WebSite;
			}
			set
			{
				if ((this._WebSite != value))
				{
					this._WebSite = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteID", DbType="Int NOT NULL")]
		public int InstituteID
		{
			get
			{
				return this._InstituteID;
			}
			set
			{
				if ((this._InstituteID != value))
				{
					this._InstituteID = value;
				}
			}
		}
	}
	
	public partial class GetInstituteUserFeatureAccessResult
	{
		
		private int _InstituteUserTypeAccessID;
		
		private int _InstituteUserTypeID;
		
		private bool _CanAddExam;
		
		private bool _CanAddQuestion;
		
		private bool _CanAddUser;
		
		private bool _CanAddCource;
		
		private bool _CanAddSubject;
		
		private System.Nullable<bool> _CanAddAudio;
		
		private System.Nullable<bool> _CanAddImage;
		
		private System.Nullable<bool> _CanAddDocument;
		
		private System.Nullable<bool> _CanAddVideo;
		
		private System.Nullable<bool> _CanAddHomeWork;
		
		private System.Nullable<bool> _CanAddEvent;
		
		private System.Nullable<bool> _CanAddArticle;
		
		private System.DateTime _ModifiedDate;
		
		private int _LoginUserID;
		
		public GetInstituteUserFeatureAccessResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteUserTypeAccessID", DbType="Int NOT NULL")]
		public int InstituteUserTypeAccessID
		{
			get
			{
				return this._InstituteUserTypeAccessID;
			}
			set
			{
				if ((this._InstituteUserTypeAccessID != value))
				{
					this._InstituteUserTypeAccessID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteUserTypeID", DbType="Int NOT NULL")]
		public int InstituteUserTypeID
		{
			get
			{
				return this._InstituteUserTypeID;
			}
			set
			{
				if ((this._InstituteUserTypeID != value))
				{
					this._InstituteUserTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAddExam", DbType="Bit NOT NULL")]
		public bool CanAddExam
		{
			get
			{
				return this._CanAddExam;
			}
			set
			{
				if ((this._CanAddExam != value))
				{
					this._CanAddExam = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAddQuestion", DbType="Bit NOT NULL")]
		public bool CanAddQuestion
		{
			get
			{
				return this._CanAddQuestion;
			}
			set
			{
				if ((this._CanAddQuestion != value))
				{
					this._CanAddQuestion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAddUser", DbType="Bit NOT NULL")]
		public bool CanAddUser
		{
			get
			{
				return this._CanAddUser;
			}
			set
			{
				if ((this._CanAddUser != value))
				{
					this._CanAddUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAddCource", DbType="Bit NOT NULL")]
		public bool CanAddCource
		{
			get
			{
				return this._CanAddCource;
			}
			set
			{
				if ((this._CanAddCource != value))
				{
					this._CanAddCource = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAddSubject", DbType="Bit NOT NULL")]
		public bool CanAddSubject
		{
			get
			{
				return this._CanAddSubject;
			}
			set
			{
				if ((this._CanAddSubject != value))
				{
					this._CanAddSubject = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAddAudio", DbType="Bit")]
		public System.Nullable<bool> CanAddAudio
		{
			get
			{
				return this._CanAddAudio;
			}
			set
			{
				if ((this._CanAddAudio != value))
				{
					this._CanAddAudio = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAddImage", DbType="Bit")]
		public System.Nullable<bool> CanAddImage
		{
			get
			{
				return this._CanAddImage;
			}
			set
			{
				if ((this._CanAddImage != value))
				{
					this._CanAddImage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAddDocument", DbType="Bit")]
		public System.Nullable<bool> CanAddDocument
		{
			get
			{
				return this._CanAddDocument;
			}
			set
			{
				if ((this._CanAddDocument != value))
				{
					this._CanAddDocument = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAddVideo", DbType="Bit")]
		public System.Nullable<bool> CanAddVideo
		{
			get
			{
				return this._CanAddVideo;
			}
			set
			{
				if ((this._CanAddVideo != value))
				{
					this._CanAddVideo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAddHomeWork", DbType="Bit")]
		public System.Nullable<bool> CanAddHomeWork
		{
			get
			{
				return this._CanAddHomeWork;
			}
			set
			{
				if ((this._CanAddHomeWork != value))
				{
					this._CanAddHomeWork = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAddEvent", DbType="Bit")]
		public System.Nullable<bool> CanAddEvent
		{
			get
			{
				return this._CanAddEvent;
			}
			set
			{
				if ((this._CanAddEvent != value))
				{
					this._CanAddEvent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAddArticle", DbType="Bit")]
		public System.Nullable<bool> CanAddArticle
		{
			get
			{
				return this._CanAddArticle;
			}
			set
			{
				if ((this._CanAddArticle != value))
				{
					this._CanAddArticle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginUserID", DbType="Int NOT NULL")]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					this._LoginUserID = value;
				}
			}
		}
	}
	
	public partial class GetUserByInsituteCourceIDResult
	{
		
		private int _UserID;
		
		private int _LoginUserID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _MiddleName;
		
		private string _PhotoPath;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _City;
		
		private string _State;
		
		private string _Country;
		
		private string _WebSite;
		
		private string _AboutMe;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		public GetUserByInsituteCourceIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginUserID", DbType="Int NOT NULL")]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					this._LoginUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(1000)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(1000)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="VarChar(1000)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this._MiddleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoPath", DbType="VarChar(2000)")]
		public string PhotoPath
		{
			get
			{
				return this._PhotoPath;
			}
			set
			{
				if ((this._PhotoPath != value))
				{
					this._PhotoPath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="VarChar(MAX)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this._Address1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="VarChar(MAX)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this._Address2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(2000)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(2000)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(2000)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this._Country = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSite", DbType="VarChar(2000)")]
		public string WebSite
		{
			get
			{
				return this._WebSite;
			}
			set
			{
				if ((this._WebSite != value))
				{
					this._WebSite = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AboutMe", DbType="VarChar(MAX)")]
		public string AboutMe
		{
			get
			{
				return this._AboutMe;
			}
			set
			{
				if ((this._AboutMe != value))
				{
					this._AboutMe = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(MAX)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
	}
	
	public partial class GetQuestionTypeByInstituteIDResult
	{
		
		private int _QuestionTypeID;
		
		private string _QuestionTypeTnext;
		
		private int _LoginUserID;
		
		private System.DateTime _ModifiedDate;
		
		public GetQuestionTypeByInstituteIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionTypeID", DbType="Int NOT NULL")]
		public int QuestionTypeID
		{
			get
			{
				return this._QuestionTypeID;
			}
			set
			{
				if ((this._QuestionTypeID != value))
				{
					this._QuestionTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionTypeTnext", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string QuestionTypeTnext
		{
			get
			{
				return this._QuestionTypeTnext;
			}
			set
			{
				if ((this._QuestionTypeTnext != value))
				{
					this._QuestionTypeTnext = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginUserID", DbType="Int NOT NULL")]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					this._LoginUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
	}
	
	public partial class GetCourceCatagoryByInstituteIDResult
	{
		
		private int _CourceCatagoryID;
		
		private string _CatagoryName;
		
		private int _LoginUserID;
		
		private string _Description;
		
		private int _CatagoryType;
		
		private System.DateTime _ModifiedDate;
		
		public GetCourceCatagoryByInstituteIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourceCatagoryID", DbType="Int NOT NULL")]
		public int CourceCatagoryID
		{
			get
			{
				return this._CourceCatagoryID;
			}
			set
			{
				if ((this._CourceCatagoryID != value))
				{
					this._CourceCatagoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatagoryName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CatagoryName
		{
			get
			{
				return this._CatagoryName;
			}
			set
			{
				if ((this._CatagoryName != value))
				{
					this._CatagoryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginUserID", DbType="Int NOT NULL")]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					this._LoginUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatagoryType", DbType="Int NOT NULL")]
		public int CatagoryType
		{
			get
			{
				return this._CatagoryType;
			}
			set
			{
				if ((this._CatagoryType != value))
				{
					this._CatagoryType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
	}
}
#pragma warning restore 1591

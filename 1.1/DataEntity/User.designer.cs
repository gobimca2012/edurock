#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataEntity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="edu")]
	public partial class UserDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertStudentLogin(StudentLogin instance);
    partial void UpdateStudentLogin(StudentLogin instance);
    partial void DeleteStudentLogin(StudentLogin instance);
    partial void InsertUserEducation(UserEducation instance);
    partial void UpdateUserEducation(UserEducation instance);
    partial void DeleteUserEducation(UserEducation instance);
    partial void InsertDocumentCource(DocumentCource instance);
    partial void UpdateDocumentCource(DocumentCource instance);
    partial void DeleteDocumentCource(DocumentCource instance);
    partial void InsertShareGroup(ShareGroup instance);
    partial void UpdateShareGroup(ShareGroup instance);
    partial void DeleteShareGroup(ShareGroup instance);
    partial void InsertShareUser(ShareUser instance);
    partial void UpdateShareUser(ShareUser instance);
    partial void DeleteShareUser(ShareUser instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertComment(Comment instance);
    partial void UpdateComment(Comment instance);
    partial void DeleteComment(Comment instance);
    partial void InsertShare(Share instance);
    partial void UpdateShare(Share instance);
    partial void DeleteShare(Share instance);
    partial void InsertDocument(Document instance);
    partial void UpdateDocument(Document instance);
    partial void DeleteDocument(Document instance);
    partial void InsertArticle(Article instance);
    partial void UpdateArticle(Article instance);
    partial void DeleteArticle(Article instance);
    partial void InsertEvent(Event instance);
    partial void UpdateEvent(Event instance);
    partial void DeleteEvent(Event instance);
    partial void InsertRatting(Ratting instance);
    partial void UpdateRatting(Ratting instance);
    partial void DeleteRatting(Ratting instance);
    #endregion
		
		public UserDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UserDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UserDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UserDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<StudentLogin> StudentLogins
		{
			get
			{
				return this.GetTable<StudentLogin>();
			}
		}
		
		public System.Data.Linq.Table<UserEducation> UserEducations
		{
			get
			{
				return this.GetTable<UserEducation>();
			}
		}
		
		public System.Data.Linq.Table<DocumentCource> DocumentCources
		{
			get
			{
				return this.GetTable<DocumentCource>();
			}
		}
		
		public System.Data.Linq.Table<ShareGroup> ShareGroups
		{
			get
			{
				return this.GetTable<ShareGroup>();
			}
		}
		
		public System.Data.Linq.Table<ShareUser> ShareUsers
		{
			get
			{
				return this.GetTable<ShareUser>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Comment> Comments
		{
			get
			{
				return this.GetTable<Comment>();
			}
		}
		
		public System.Data.Linq.Table<Share> Shares
		{
			get
			{
				return this.GetTable<Share>();
			}
		}
		
		public System.Data.Linq.Table<Document> Documents
		{
			get
			{
				return this.GetTable<Document>();
			}
		}
		
		public System.Data.Linq.Table<Article> Articles
		{
			get
			{
				return this.GetTable<Article>();
			}
		}
		
		public System.Data.Linq.Table<Event> Events
		{
			get
			{
				return this.GetTable<Event>();
			}
		}
		
		public System.Data.Linq.Table<Ratting> Rattings
		{
			get
			{
				return this.GetTable<Ratting>();
			}
		}
		
		[Function(Name="dbo.GetShareUser")]
		public ISingleResult<GetShareUserResult> GetShareUser([Parameter(Name="ObjectType", DbType="Int")] System.Nullable<int> objectType, [Parameter(Name="ObjectID", DbType="VarChar(100)")] string objectID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), objectType, objectID);
			return ((ISingleResult<GetShareUserResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GetUserContent")]
		public ISingleResult<GetUserContentResult> GetUserContent([Parameter(Name="LoginUserID", DbType="Int")] System.Nullable<int> loginUserID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), loginUserID);
			return ((ISingleResult<GetUserContentResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GetContent")]
		public ISingleResult<GetContentResult> GetContent([Parameter(Name="LoginUserID", DbType="Int")] System.Nullable<int> loginUserID, [Parameter(Name="InstituteCourceID", DbType="Int")] System.Nullable<int> instituteCourceID, [Parameter(Name="InstituteSubjectID", DbType="Int")] System.Nullable<int> instituteSubjectID, [Parameter(Name="ContentType", DbType="Int")] System.Nullable<int> contentType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), loginUserID, instituteCourceID, instituteSubjectID, contentType);
			return ((ISingleResult<GetContentResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GetUser")]
		public ISingleResult<GetUserResult> GetUser([Parameter(Name="InstituteCourceID", DbType="Int")] System.Nullable<int> instituteCourceID, [Parameter(Name="InstituteID", DbType="Int")] System.Nullable<int> instituteID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), instituteCourceID, instituteID);
			return ((ISingleResult<GetUserResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GetShareGroup")]
		public ISingleResult<GetShareGroupResult> GetShareGroup([Parameter(Name="ObjectType", DbType="Int")] System.Nullable<int> objectType, [Parameter(Name="ObjectID", DbType="VarChar(100)")] string objectID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), objectType, objectID);
			return ((ISingleResult<GetShareGroupResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GetUserObjectAccess")]
		public ISingleResult<GetUserObjectAccessResult> GetUserObjectAccess([Parameter(Name="LoginUserID", DbType="Int")] System.Nullable<int> loginUserID, [Parameter(Name="ObjectID", DbType="VarChar(40)")] string objectID, [Parameter(Name="ObjectType", DbType="Int")] System.Nullable<int> objectType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), loginUserID, objectID, objectType);
			return ((ISingleResult<GetUserObjectAccessResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GetGroupObjectAccess")]
		public ISingleResult<GetGroupObjectAccessResult> GetGroupObjectAccess([Parameter(Name="LoginUserID", DbType="Int")] System.Nullable<int> loginUserID, [Parameter(Name="ObjectID", DbType="VarChar(40)")] string objectID, [Parameter(Name="ObjectType", DbType="Int")] System.Nullable<int> objectType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), loginUserID, objectID, objectType);
			return ((ISingleResult<GetGroupObjectAccessResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GetUserRelatedContent")]
		public ISingleResult<GetUserRelatedContentResult> GetUserRelatedContent([Parameter(Name="LoginUserID", DbType="Int")] System.Nullable<int> loginUserID, [Parameter(Name="InstituteCourceID", DbType="Int")] System.Nullable<int> instituteCourceID, [Parameter(Name="InstituteSubjectID", DbType="Int")] System.Nullable<int> instituteSubjectID, [Parameter(Name="ContentType", DbType="Int")] System.Nullable<int> contentType, [Parameter(Name="LoggedInUserLoginID", DbType="Int")] System.Nullable<int> loggedInUserLoginID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), loginUserID, instituteCourceID, instituteSubjectID, contentType, loggedInUserLoginID);
			return ((ISingleResult<GetUserRelatedContentResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GetUserRelatedContentSearch")]
		public ISingleResult<GetUserRelatedContentSearchResult> GetUserRelatedContentSearch([Parameter(Name="LoginUserID", DbType="Int")] System.Nullable<int> loginUserID, [Parameter(Name="InstituteCourceID", DbType="Int")] System.Nullable<int> instituteCourceID, [Parameter(Name="InstituteSubjectID", DbType="Int")] System.Nullable<int> instituteSubjectID, [Parameter(Name="ContentType", DbType="Int")] System.Nullable<int> contentType, [Parameter(Name="LoggedInUserLoginID", DbType="Int")] System.Nullable<int> loggedInUserLoginID, [Parameter(Name="Keyword", DbType="VarChar(MAX)")] string keyword, [Parameter(Name="Starddate", DbType="DateTime")] System.Nullable<System.DateTime> starddate, [Parameter(Name="Enddate", DbType="DateTime")] System.Nullable<System.DateTime> enddate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), loginUserID, instituteCourceID, instituteSubjectID, contentType, loggedInUserLoginID, keyword, starddate, enddate);
			return ((ISingleResult<GetUserRelatedContentSearchResult>)(result.ReturnValue));
		}
	}
	
	[Table(Name="dbo.LoginUser")]
	public partial class StudentLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoginUserID;
		
		private string _Username;
		
		private string _Password;
		
		private int _UserType;
		
		private System.Guid _UserId;
		
		private System.DateTime _ModifiedDate;
		
		private System.DateTime _CreatedDate;
		
		private EntitySet<UserEducation> _UserEducations;
		
		private EntitySet<ShareUser> _ShareUsers;
		
		private EntitySet<User> _Users;
		
		private EntitySet<Comment> _Comments;
		
		private EntitySet<Document> _Documents;
		
		private EntitySet<Article> _Articles;
		
		private EntitySet<Event> _Events;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginUserIDChanging(int value);
    partial void OnLoginUserIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnUserTypeChanging(int value);
    partial void OnUserTypeChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public StudentLogin()
		{
			this._UserEducations = new EntitySet<UserEducation>(new Action<UserEducation>(this.attach_UserEducations), new Action<UserEducation>(this.detach_UserEducations));
			this._ShareUsers = new EntitySet<ShareUser>(new Action<ShareUser>(this.attach_ShareUsers), new Action<ShareUser>(this.detach_ShareUsers));
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			this._Documents = new EntitySet<Document>(new Action<Document>(this.attach_Documents), new Action<Document>(this.detach_Documents));
			this._Articles = new EntitySet<Article>(new Action<Article>(this.attach_Articles), new Action<Article>(this.detach_Articles));
			this._Events = new EntitySet<Event>(new Action<Event>(this.attach_Events), new Action<Event>(this.detach_Events));
			OnCreated();
		}
		
		[Column(Storage="_LoginUserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					this.OnLoginUserIDChanging(value);
					this.SendPropertyChanging();
					this._LoginUserID = value;
					this.SendPropertyChanged("LoginUserID");
					this.OnLoginUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_Username", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[Column(Storage="_Password", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[Column(Storage="_UserType", DbType="Int NOT NULL")]
		public int UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[Association(Name="StudentLogin_UserEducation", Storage="_UserEducations", OtherKey="LoginUserID")]
		public EntitySet<UserEducation> UserEducations
		{
			get
			{
				return this._UserEducations;
			}
			set
			{
				this._UserEducations.Assign(value);
			}
		}
		
		[Association(Name="StudentLogin_ShareUser", Storage="_ShareUsers", OtherKey="LoginUserID")]
		public EntitySet<ShareUser> ShareUsers
		{
			get
			{
				return this._ShareUsers;
			}
			set
			{
				this._ShareUsers.Assign(value);
			}
		}
		
		[Association(Name="StudentLogin_User", Storage="_Users", OtherKey="LoginUserID")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		[Association(Name="StudentLogin_Comment", Storage="_Comments", OtherKey="LoginUserID")]
		public EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[Association(Name="StudentLogin_Document", Storage="_Documents", OtherKey="LoginUserID")]
		public EntitySet<Document> Documents
		{
			get
			{
				return this._Documents;
			}
			set
			{
				this._Documents.Assign(value);
			}
		}
		
		[Association(Name="StudentLogin_Article", Storage="_Articles", OtherKey="LoginUserID")]
		public EntitySet<Article> Articles
		{
			get
			{
				return this._Articles;
			}
			set
			{
				this._Articles.Assign(value);
			}
		}
		
		[Association(Name="StudentLogin_Event", Storage="_Events", OtherKey="LoginUserID")]
		public EntitySet<Event> Events
		{
			get
			{
				return this._Events;
			}
			set
			{
				this._Events.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserEducations(UserEducation entity)
		{
			this.SendPropertyChanging();
			entity.StudentLogin = this;
		}
		
		private void detach_UserEducations(UserEducation entity)
		{
			this.SendPropertyChanging();
			entity.StudentLogin = null;
		}
		
		private void attach_ShareUsers(ShareUser entity)
		{
			this.SendPropertyChanging();
			entity.StudentLogin = this;
		}
		
		private void detach_ShareUsers(ShareUser entity)
		{
			this.SendPropertyChanging();
			entity.StudentLogin = null;
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.StudentLogin = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.StudentLogin = null;
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.StudentLogin = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.StudentLogin = null;
		}
		
		private void attach_Documents(Document entity)
		{
			this.SendPropertyChanging();
			entity.StudentLogin = this;
		}
		
		private void detach_Documents(Document entity)
		{
			this.SendPropertyChanging();
			entity.StudentLogin = null;
		}
		
		private void attach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.StudentLogin = this;
		}
		
		private void detach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.StudentLogin = null;
		}
		
		private void attach_Events(Event entity)
		{
			this.SendPropertyChanging();
			entity.StudentLogin = this;
		}
		
		private void detach_Events(Event entity)
		{
			this.SendPropertyChanging();
			entity.StudentLogin = null;
		}
	}
	
	[Table(Name="dbo.UserEducation")]
	public partial class UserEducation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserEducationID;
		
		private int _LoginUserID;
		
		private string _InstitueName;
		
		private string _SubjectName;
		
		private string _Year;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntityRef<StudentLogin> _StudentLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserEducationIDChanging(int value);
    partial void OnUserEducationIDChanged();
    partial void OnLoginUserIDChanging(int value);
    partial void OnLoginUserIDChanged();
    partial void OnInstitueNameChanging(string value);
    partial void OnInstitueNameChanged();
    partial void OnSubjectNameChanging(string value);
    partial void OnSubjectNameChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public UserEducation()
		{
			this._StudentLogin = default(EntityRef<StudentLogin>);
			OnCreated();
		}
		
		[Column(Storage="_UserEducationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserEducationID
		{
			get
			{
				return this._UserEducationID;
			}
			set
			{
				if ((this._UserEducationID != value))
				{
					this.OnUserEducationIDChanging(value);
					this.SendPropertyChanging();
					this._UserEducationID = value;
					this.SendPropertyChanged("UserEducationID");
					this.OnUserEducationIDChanged();
				}
			}
		}
		
		[Column(Storage="_LoginUserID", DbType="Int NOT NULL")]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					if (this._StudentLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginUserIDChanging(value);
					this.SendPropertyChanging();
					this._LoginUserID = value;
					this.SendPropertyChanged("LoginUserID");
					this.OnLoginUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_InstitueName", DbType="VarChar(MAX)")]
		public string InstitueName
		{
			get
			{
				return this._InstitueName;
			}
			set
			{
				if ((this._InstitueName != value))
				{
					this.OnInstitueNameChanging(value);
					this.SendPropertyChanging();
					this._InstitueName = value;
					this.SendPropertyChanged("InstitueName");
					this.OnInstitueNameChanged();
				}
			}
		}
		
		[Column(Storage="_SubjectName", DbType="VarChar(MAX)")]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this.OnSubjectNameChanging(value);
					this.SendPropertyChanging();
					this._SubjectName = value;
					this.SendPropertyChanged("SubjectName");
					this.OnSubjectNameChanged();
				}
			}
		}
		
		[Column(Storage="_Year", DbType="VarChar(10)")]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[Association(Name="StudentLogin_UserEducation", Storage="_StudentLogin", ThisKey="LoginUserID", IsForeignKey=true)]
		public StudentLogin StudentLogin
		{
			get
			{
				return this._StudentLogin.Entity;
			}
			set
			{
				StudentLogin previousValue = this._StudentLogin.Entity;
				if (((previousValue != value) 
							|| (this._StudentLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentLogin.Entity = null;
						previousValue.UserEducations.Remove(this);
					}
					this._StudentLogin.Entity = value;
					if ((value != null))
					{
						value.UserEducations.Add(this);
						this._LoginUserID = value.LoginUserID;
					}
					else
					{
						this._LoginUserID = default(int);
					}
					this.SendPropertyChanged("StudentLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.DocumentCource")]
	public partial class DocumentCource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _DocumentCourceID;
		
		private System.Guid _DocumentID;
		
		private int _InstituteCourceID;
		
		private System.Nullable<int> _SubjectID;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<Document> _Document;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocumentCourceIDChanging(System.Guid value);
    partial void OnDocumentCourceIDChanged();
    partial void OnDocumentIDChanging(System.Guid value);
    partial void OnDocumentIDChanged();
    partial void OnInstituteCourceIDChanging(int value);
    partial void OnInstituteCourceIDChanged();
    partial void OnSubjectIDChanging(System.Nullable<int> value);
    partial void OnSubjectIDChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public DocumentCource()
		{
			this._Document = default(EntityRef<Document>);
			OnCreated();
		}
		
		[Column(Storage="_DocumentCourceID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid DocumentCourceID
		{
			get
			{
				return this._DocumentCourceID;
			}
			set
			{
				if ((this._DocumentCourceID != value))
				{
					this.OnDocumentCourceIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentCourceID = value;
					this.SendPropertyChanged("DocumentCourceID");
					this.OnDocumentCourceIDChanged();
				}
			}
		}
		
		[Column(Storage="_DocumentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DocumentID
		{
			get
			{
				return this._DocumentID;
			}
			set
			{
				if ((this._DocumentID != value))
				{
					if (this._Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentID = value;
					this.SendPropertyChanged("DocumentID");
					this.OnDocumentIDChanged();
				}
			}
		}
		
		[Column(Storage="_InstituteCourceID", DbType="Int NOT NULL")]
		public int InstituteCourceID
		{
			get
			{
				return this._InstituteCourceID;
			}
			set
			{
				if ((this._InstituteCourceID != value))
				{
					this.OnInstituteCourceIDChanging(value);
					this.SendPropertyChanging();
					this._InstituteCourceID = value;
					this.SendPropertyChanged("InstituteCourceID");
					this.OnInstituteCourceIDChanged();
				}
			}
		}
		
		[Column(Storage="_SubjectID", DbType="Int")]
		public System.Nullable<int> SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					this.OnSubjectIDChanging(value);
					this.SendPropertyChanging();
					this._SubjectID = value;
					this.SendPropertyChanged("SubjectID");
					this.OnSubjectIDChanged();
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[Association(Name="Document_DocumentCource", Storage="_Document", ThisKey="DocumentID", IsForeignKey=true)]
		public Document Document
		{
			get
			{
				return this._Document.Entity;
			}
			set
			{
				Document previousValue = this._Document.Entity;
				if (((previousValue != value) 
							|| (this._Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Document.Entity = null;
						previousValue.DocumentCources.Remove(this);
					}
					this._Document.Entity = value;
					if ((value != null))
					{
						value.DocumentCources.Add(this);
						this._DocumentID = value.DocumentID;
					}
					else
					{
						this._DocumentID = default(System.Guid);
					}
					this.SendPropertyChanged("Document");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ShareGroup")]
	public partial class ShareGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ShareGroupID;
		
		private int _InstituteUserTypeID;
		
		private System.Guid _ShareID;
		
		private System.Nullable<bool> _EnableEdit;
		
		private System.Nullable<bool> _EnableAdd;
		
		private System.Nullable<bool> _EnableView;
		
		private System.Nullable<bool> _EnableDelete;
		
		private System.Nullable<bool> _EnableEditByLoggedIn;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<Share> _Share;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShareGroupIDChanging(System.Guid value);
    partial void OnShareGroupIDChanged();
    partial void OnInstituteUserTypeIDChanging(int value);
    partial void OnInstituteUserTypeIDChanged();
    partial void OnShareIDChanging(System.Guid value);
    partial void OnShareIDChanged();
    partial void OnEnableEditChanging(System.Nullable<bool> value);
    partial void OnEnableEditChanged();
    partial void OnEnableAddChanging(System.Nullable<bool> value);
    partial void OnEnableAddChanged();
    partial void OnEnableViewChanging(System.Nullable<bool> value);
    partial void OnEnableViewChanged();
    partial void OnEnableDeleteChanging(System.Nullable<bool> value);
    partial void OnEnableDeleteChanged();
    partial void OnEnableEditByLoggedInChanging(System.Nullable<bool> value);
    partial void OnEnableEditByLoggedInChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ShareGroup()
		{
			this._Share = default(EntityRef<Share>);
			OnCreated();
		}
		
		[Column(Storage="_ShareGroupID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ShareGroupID
		{
			get
			{
				return this._ShareGroupID;
			}
			set
			{
				if ((this._ShareGroupID != value))
				{
					this.OnShareGroupIDChanging(value);
					this.SendPropertyChanging();
					this._ShareGroupID = value;
					this.SendPropertyChanged("ShareGroupID");
					this.OnShareGroupIDChanged();
				}
			}
		}
		
		[Column(Storage="_InstituteUserTypeID", DbType="Int NOT NULL")]
		public int InstituteUserTypeID
		{
			get
			{
				return this._InstituteUserTypeID;
			}
			set
			{
				if ((this._InstituteUserTypeID != value))
				{
					this.OnInstituteUserTypeIDChanging(value);
					this.SendPropertyChanging();
					this._InstituteUserTypeID = value;
					this.SendPropertyChanged("InstituteUserTypeID");
					this.OnInstituteUserTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_ShareID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ShareID
		{
			get
			{
				return this._ShareID;
			}
			set
			{
				if ((this._ShareID != value))
				{
					if (this._Share.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShareIDChanging(value);
					this.SendPropertyChanging();
					this._ShareID = value;
					this.SendPropertyChanged("ShareID");
					this.OnShareIDChanged();
				}
			}
		}
		
		[Column(Storage="_EnableEdit", DbType="Bit")]
		public System.Nullable<bool> EnableEdit
		{
			get
			{
				return this._EnableEdit;
			}
			set
			{
				if ((this._EnableEdit != value))
				{
					this.OnEnableEditChanging(value);
					this.SendPropertyChanging();
					this._EnableEdit = value;
					this.SendPropertyChanged("EnableEdit");
					this.OnEnableEditChanged();
				}
			}
		}
		
		[Column(Storage="_EnableAdd", DbType="Bit")]
		public System.Nullable<bool> EnableAdd
		{
			get
			{
				return this._EnableAdd;
			}
			set
			{
				if ((this._EnableAdd != value))
				{
					this.OnEnableAddChanging(value);
					this.SendPropertyChanging();
					this._EnableAdd = value;
					this.SendPropertyChanged("EnableAdd");
					this.OnEnableAddChanged();
				}
			}
		}
		
		[Column(Storage="_EnableView", DbType="Bit")]
		public System.Nullable<bool> EnableView
		{
			get
			{
				return this._EnableView;
			}
			set
			{
				if ((this._EnableView != value))
				{
					this.OnEnableViewChanging(value);
					this.SendPropertyChanging();
					this._EnableView = value;
					this.SendPropertyChanged("EnableView");
					this.OnEnableViewChanged();
				}
			}
		}
		
		[Column(Storage="_EnableDelete", DbType="Bit")]
		public System.Nullable<bool> EnableDelete
		{
			get
			{
				return this._EnableDelete;
			}
			set
			{
				if ((this._EnableDelete != value))
				{
					this.OnEnableDeleteChanging(value);
					this.SendPropertyChanging();
					this._EnableDelete = value;
					this.SendPropertyChanged("EnableDelete");
					this.OnEnableDeleteChanged();
				}
			}
		}
		
		[Column(Storage="_EnableEditByLoggedIn", DbType="Bit")]
		public System.Nullable<bool> EnableEditByLoggedIn
		{
			get
			{
				return this._EnableEditByLoggedIn;
			}
			set
			{
				if ((this._EnableEditByLoggedIn != value))
				{
					this.OnEnableEditByLoggedInChanging(value);
					this.SendPropertyChanging();
					this._EnableEditByLoggedIn = value;
					this.SendPropertyChanged("EnableEditByLoggedIn");
					this.OnEnableEditByLoggedInChanged();
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[Association(Name="Share_ShareGroup", Storage="_Share", ThisKey="ShareID", IsForeignKey=true)]
		public Share Share
		{
			get
			{
				return this._Share.Entity;
			}
			set
			{
				Share previousValue = this._Share.Entity;
				if (((previousValue != value) 
							|| (this._Share.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Share.Entity = null;
						previousValue.ShareGroups.Remove(this);
					}
					this._Share.Entity = value;
					if ((value != null))
					{
						value.ShareGroups.Add(this);
						this._ShareID = value.ShareID;
					}
					else
					{
						this._ShareID = default(System.Guid);
					}
					this.SendPropertyChanged("Share");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ShareUser")]
	public partial class ShareUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ShareUserID;
		
		private int _LoginUserID;
		
		private System.Guid _ShareID;
		
		private System.Nullable<bool> _EnableEdit;
		
		private System.Nullable<bool> _EnableAdd;
		
		private System.Nullable<bool> _EnableView;
		
		private System.Nullable<bool> _EnableDelete;
		
		private System.Nullable<bool> _EnableEditByLoggedIn;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<StudentLogin> _StudentLogin;
		
		private EntityRef<Share> _Share;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShareUserIDChanging(System.Guid value);
    partial void OnShareUserIDChanged();
    partial void OnLoginUserIDChanging(int value);
    partial void OnLoginUserIDChanged();
    partial void OnShareIDChanging(System.Guid value);
    partial void OnShareIDChanged();
    partial void OnEnableEditChanging(System.Nullable<bool> value);
    partial void OnEnableEditChanged();
    partial void OnEnableAddChanging(System.Nullable<bool> value);
    partial void OnEnableAddChanged();
    partial void OnEnableViewChanging(System.Nullable<bool> value);
    partial void OnEnableViewChanged();
    partial void OnEnableDeleteChanging(System.Nullable<bool> value);
    partial void OnEnableDeleteChanged();
    partial void OnEnableEditByLoggedInChanging(System.Nullable<bool> value);
    partial void OnEnableEditByLoggedInChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ShareUser()
		{
			this._StudentLogin = default(EntityRef<StudentLogin>);
			this._Share = default(EntityRef<Share>);
			OnCreated();
		}
		
		[Column(Storage="_ShareUserID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ShareUserID
		{
			get
			{
				return this._ShareUserID;
			}
			set
			{
				if ((this._ShareUserID != value))
				{
					this.OnShareUserIDChanging(value);
					this.SendPropertyChanging();
					this._ShareUserID = value;
					this.SendPropertyChanged("ShareUserID");
					this.OnShareUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_LoginUserID", DbType="Int NOT NULL")]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					if (this._StudentLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginUserIDChanging(value);
					this.SendPropertyChanging();
					this._LoginUserID = value;
					this.SendPropertyChanged("LoginUserID");
					this.OnLoginUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_ShareID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ShareID
		{
			get
			{
				return this._ShareID;
			}
			set
			{
				if ((this._ShareID != value))
				{
					if (this._Share.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShareIDChanging(value);
					this.SendPropertyChanging();
					this._ShareID = value;
					this.SendPropertyChanged("ShareID");
					this.OnShareIDChanged();
				}
			}
		}
		
		[Column(Storage="_EnableEdit", DbType="Bit")]
		public System.Nullable<bool> EnableEdit
		{
			get
			{
				return this._EnableEdit;
			}
			set
			{
				if ((this._EnableEdit != value))
				{
					this.OnEnableEditChanging(value);
					this.SendPropertyChanging();
					this._EnableEdit = value;
					this.SendPropertyChanged("EnableEdit");
					this.OnEnableEditChanged();
				}
			}
		}
		
		[Column(Storage="_EnableAdd", DbType="Bit")]
		public System.Nullable<bool> EnableAdd
		{
			get
			{
				return this._EnableAdd;
			}
			set
			{
				if ((this._EnableAdd != value))
				{
					this.OnEnableAddChanging(value);
					this.SendPropertyChanging();
					this._EnableAdd = value;
					this.SendPropertyChanged("EnableAdd");
					this.OnEnableAddChanged();
				}
			}
		}
		
		[Column(Storage="_EnableView", DbType="Bit")]
		public System.Nullable<bool> EnableView
		{
			get
			{
				return this._EnableView;
			}
			set
			{
				if ((this._EnableView != value))
				{
					this.OnEnableViewChanging(value);
					this.SendPropertyChanging();
					this._EnableView = value;
					this.SendPropertyChanged("EnableView");
					this.OnEnableViewChanged();
				}
			}
		}
		
		[Column(Storage="_EnableDelete", DbType="Bit")]
		public System.Nullable<bool> EnableDelete
		{
			get
			{
				return this._EnableDelete;
			}
			set
			{
				if ((this._EnableDelete != value))
				{
					this.OnEnableDeleteChanging(value);
					this.SendPropertyChanging();
					this._EnableDelete = value;
					this.SendPropertyChanged("EnableDelete");
					this.OnEnableDeleteChanged();
				}
			}
		}
		
		[Column(Storage="_EnableEditByLoggedIn", DbType="Bit")]
		public System.Nullable<bool> EnableEditByLoggedIn
		{
			get
			{
				return this._EnableEditByLoggedIn;
			}
			set
			{
				if ((this._EnableEditByLoggedIn != value))
				{
					this.OnEnableEditByLoggedInChanging(value);
					this.SendPropertyChanging();
					this._EnableEditByLoggedIn = value;
					this.SendPropertyChanged("EnableEditByLoggedIn");
					this.OnEnableEditByLoggedInChanged();
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[Association(Name="StudentLogin_ShareUser", Storage="_StudentLogin", ThisKey="LoginUserID", IsForeignKey=true)]
		public StudentLogin StudentLogin
		{
			get
			{
				return this._StudentLogin.Entity;
			}
			set
			{
				StudentLogin previousValue = this._StudentLogin.Entity;
				if (((previousValue != value) 
							|| (this._StudentLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentLogin.Entity = null;
						previousValue.ShareUsers.Remove(this);
					}
					this._StudentLogin.Entity = value;
					if ((value != null))
					{
						value.ShareUsers.Add(this);
						this._LoginUserID = value.LoginUserID;
					}
					else
					{
						this._LoginUserID = default(int);
					}
					this.SendPropertyChanged("StudentLogin");
				}
			}
		}
		
		[Association(Name="Share_ShareUser", Storage="_Share", ThisKey="ShareID", IsForeignKey=true)]
		public Share Share
		{
			get
			{
				return this._Share.Entity;
			}
			set
			{
				Share previousValue = this._Share.Entity;
				if (((previousValue != value) 
							|| (this._Share.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Share.Entity = null;
						previousValue.ShareUsers.Remove(this);
					}
					this._Share.Entity = value;
					if ((value != null))
					{
						value.ShareUsers.Add(this);
						this._ShareID = value.ShareID;
					}
					else
					{
						this._ShareID = default(System.Guid);
					}
					this.SendPropertyChanged("Share");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private int _LoginUserID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _MiddleName;
		
		private string _PhotoPath;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _City;
		
		private string _State;
		
		private string _Country;
		
		private string _WebSite;
		
		private string _AboutMe;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntityRef<StudentLogin> _StudentLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnLoginUserIDChanging(int value);
    partial void OnLoginUserIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnPhotoPathChanging(string value);
    partial void OnPhotoPathChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnWebSiteChanging(string value);
    partial void OnWebSiteChanged();
    partial void OnAboutMeChanging(string value);
    partial void OnAboutMeChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public User()
		{
			this._StudentLogin = default(EntityRef<StudentLogin>);
			OnCreated();
		}
		
		[Column(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_LoginUserID", DbType="Int NOT NULL")]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					if (this._StudentLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginUserIDChanging(value);
					this.SendPropertyChanging();
					this._LoginUserID = value;
					this.SendPropertyChanged("LoginUserID");
					this.OnLoginUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_FirstName", DbType="VarChar(1000)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[Column(Storage="_LastName", DbType="VarChar(1000)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[Column(Storage="_MiddleName", DbType="VarChar(1000)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[Column(Storage="_PhotoPath", DbType="VarChar(2000)")]
		public string PhotoPath
		{
			get
			{
				return this._PhotoPath;
			}
			set
			{
				if ((this._PhotoPath != value))
				{
					this.OnPhotoPathChanging(value);
					this.SendPropertyChanging();
					this._PhotoPath = value;
					this.SendPropertyChanged("PhotoPath");
					this.OnPhotoPathChanged();
				}
			}
		}
		
		[Column(Storage="_BirthDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[Column(Storage="_Address1", DbType="VarChar(MAX)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[Column(Storage="_Address2", DbType="VarChar(MAX)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[Column(Storage="_City", DbType="VarChar(2000)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[Column(Storage="_State", DbType="VarChar(2000)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[Column(Storage="_Country", DbType="VarChar(2000)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[Column(Storage="_WebSite", DbType="VarChar(2000)")]
		public string WebSite
		{
			get
			{
				return this._WebSite;
			}
			set
			{
				if ((this._WebSite != value))
				{
					this.OnWebSiteChanging(value);
					this.SendPropertyChanging();
					this._WebSite = value;
					this.SendPropertyChanged("WebSite");
					this.OnWebSiteChanged();
				}
			}
		}
		
		[Column(Storage="_AboutMe", DbType="VarChar(MAX)")]
		public string AboutMe
		{
			get
			{
				return this._AboutMe;
			}
			set
			{
				if ((this._AboutMe != value))
				{
					this.OnAboutMeChanging(value);
					this.SendPropertyChanging();
					this._AboutMe = value;
					this.SendPropertyChanged("AboutMe");
					this.OnAboutMeChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="VarChar(MAX)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[Association(Name="StudentLogin_User", Storage="_StudentLogin", ThisKey="LoginUserID", IsForeignKey=true)]
		public StudentLogin StudentLogin
		{
			get
			{
				return this._StudentLogin.Entity;
			}
			set
			{
				StudentLogin previousValue = this._StudentLogin.Entity;
				if (((previousValue != value) 
							|| (this._StudentLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentLogin.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._StudentLogin.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._LoginUserID = value.LoginUserID;
					}
					else
					{
						this._LoginUserID = default(int);
					}
					this.SendPropertyChanged("StudentLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Comment")]
	public partial class Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CommentID;
		
		private string _ContentID;
		
		private int _ContentType;
		
		private int _LoginUserID;
		
		private string _CommentText;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<StudentLogin> _StudentLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommentIDChanging(System.Guid value);
    partial void OnCommentIDChanged();
    partial void OnContentIDChanging(string value);
    partial void OnContentIDChanged();
    partial void OnContentTypeChanging(int value);
    partial void OnContentTypeChanged();
    partial void OnLoginUserIDChanging(int value);
    partial void OnLoginUserIDChanged();
    partial void OnCommentTextChanging(string value);
    partial void OnCommentTextChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public Comment()
		{
			this._StudentLogin = default(EntityRef<StudentLogin>);
			OnCreated();
		}
		
		[Column(Storage="_CommentID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CommentID
		{
			get
			{
				return this._CommentID;
			}
			set
			{
				if ((this._CommentID != value))
				{
					this.OnCommentIDChanging(value);
					this.SendPropertyChanging();
					this._CommentID = value;
					this.SendPropertyChanged("CommentID");
					this.OnCommentIDChanged();
				}
			}
		}
		
		[Column(Storage="_ContentID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ContentID
		{
			get
			{
				return this._ContentID;
			}
			set
			{
				if ((this._ContentID != value))
				{
					this.OnContentIDChanging(value);
					this.SendPropertyChanging();
					this._ContentID = value;
					this.SendPropertyChanged("ContentID");
					this.OnContentIDChanged();
				}
			}
		}
		
		[Column(Storage="_ContentType", DbType="Int NOT NULL")]
		public int ContentType
		{
			get
			{
				return this._ContentType;
			}
			set
			{
				if ((this._ContentType != value))
				{
					this.OnContentTypeChanging(value);
					this.SendPropertyChanging();
					this._ContentType = value;
					this.SendPropertyChanged("ContentType");
					this.OnContentTypeChanged();
				}
			}
		}
		
		[Column(Storage="_LoginUserID", DbType="Int NOT NULL")]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					if (this._StudentLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginUserIDChanging(value);
					this.SendPropertyChanging();
					this._LoginUserID = value;
					this.SendPropertyChanged("LoginUserID");
					this.OnLoginUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_CommentText", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string CommentText
		{
			get
			{
				return this._CommentText;
			}
			set
			{
				if ((this._CommentText != value))
				{
					this.OnCommentTextChanging(value);
					this.SendPropertyChanging();
					this._CommentText = value;
					this.SendPropertyChanged("CommentText");
					this.OnCommentTextChanged();
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[Association(Name="StudentLogin_Comment", Storage="_StudentLogin", ThisKey="LoginUserID", IsForeignKey=true)]
		public StudentLogin StudentLogin
		{
			get
			{
				return this._StudentLogin.Entity;
			}
			set
			{
				StudentLogin previousValue = this._StudentLogin.Entity;
				if (((previousValue != value) 
							|| (this._StudentLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentLogin.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._StudentLogin.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._LoginUserID = value.LoginUserID;
					}
					else
					{
						this._LoginUserID = default(int);
					}
					this.SendPropertyChanged("StudentLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Share")]
	public partial class Share : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ShareID;
		
		private int _ObjectType;
		
		private string _ObjectID;
		
		private System.Nullable<bool> _EnableAllUseView;
		
		private System.Nullable<bool> _EnableAllUserEdit;
		
		private System.Nullable<bool> _EnableAllUserComment;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<ShareGroup> _ShareGroups;
		
		private EntitySet<ShareUser> _ShareUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShareIDChanging(System.Guid value);
    partial void OnShareIDChanged();
    partial void OnObjectTypeChanging(int value);
    partial void OnObjectTypeChanged();
    partial void OnObjectIDChanging(string value);
    partial void OnObjectIDChanged();
    partial void OnEnableAllUseViewChanging(System.Nullable<bool> value);
    partial void OnEnableAllUseViewChanged();
    partial void OnEnableAllUserEditChanging(System.Nullable<bool> value);
    partial void OnEnableAllUserEditChanged();
    partial void OnEnableAllUserCommentChanging(System.Nullable<bool> value);
    partial void OnEnableAllUserCommentChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public Share()
		{
			this._ShareGroups = new EntitySet<ShareGroup>(new Action<ShareGroup>(this.attach_ShareGroups), new Action<ShareGroup>(this.detach_ShareGroups));
			this._ShareUsers = new EntitySet<ShareUser>(new Action<ShareUser>(this.attach_ShareUsers), new Action<ShareUser>(this.detach_ShareUsers));
			OnCreated();
		}
		
		[Column(Storage="_ShareID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ShareID
		{
			get
			{
				return this._ShareID;
			}
			set
			{
				if ((this._ShareID != value))
				{
					this.OnShareIDChanging(value);
					this.SendPropertyChanging();
					this._ShareID = value;
					this.SendPropertyChanged("ShareID");
					this.OnShareIDChanged();
				}
			}
		}
		
		[Column(Storage="_ObjectType", DbType="Int NOT NULL")]
		public int ObjectType
		{
			get
			{
				return this._ObjectType;
			}
			set
			{
				if ((this._ObjectType != value))
				{
					this.OnObjectTypeChanging(value);
					this.SendPropertyChanging();
					this._ObjectType = value;
					this.SendPropertyChanged("ObjectType");
					this.OnObjectTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ObjectID", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[Column(Storage="_EnableAllUseView", DbType="Bit")]
		public System.Nullable<bool> EnableAllUseView
		{
			get
			{
				return this._EnableAllUseView;
			}
			set
			{
				if ((this._EnableAllUseView != value))
				{
					this.OnEnableAllUseViewChanging(value);
					this.SendPropertyChanging();
					this._EnableAllUseView = value;
					this.SendPropertyChanged("EnableAllUseView");
					this.OnEnableAllUseViewChanged();
				}
			}
		}
		
		[Column(Storage="_EnableAllUserEdit", DbType="Bit")]
		public System.Nullable<bool> EnableAllUserEdit
		{
			get
			{
				return this._EnableAllUserEdit;
			}
			set
			{
				if ((this._EnableAllUserEdit != value))
				{
					this.OnEnableAllUserEditChanging(value);
					this.SendPropertyChanging();
					this._EnableAllUserEdit = value;
					this.SendPropertyChanged("EnableAllUserEdit");
					this.OnEnableAllUserEditChanged();
				}
			}
		}
		
		[Column(Storage="_EnableAllUserComment", DbType="Bit")]
		public System.Nullable<bool> EnableAllUserComment
		{
			get
			{
				return this._EnableAllUserComment;
			}
			set
			{
				if ((this._EnableAllUserComment != value))
				{
					this.OnEnableAllUserCommentChanging(value);
					this.SendPropertyChanging();
					this._EnableAllUserComment = value;
					this.SendPropertyChanged("EnableAllUserComment");
					this.OnEnableAllUserCommentChanged();
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[Association(Name="Share_ShareGroup", Storage="_ShareGroups", OtherKey="ShareID")]
		public EntitySet<ShareGroup> ShareGroups
		{
			get
			{
				return this._ShareGroups;
			}
			set
			{
				this._ShareGroups.Assign(value);
			}
		}
		
		[Association(Name="Share_ShareUser", Storage="_ShareUsers", OtherKey="ShareID")]
		public EntitySet<ShareUser> ShareUsers
		{
			get
			{
				return this._ShareUsers;
			}
			set
			{
				this._ShareUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ShareGroups(ShareGroup entity)
		{
			this.SendPropertyChanging();
			entity.Share = this;
		}
		
		private void detach_ShareGroups(ShareGroup entity)
		{
			this.SendPropertyChanging();
			entity.Share = null;
		}
		
		private void attach_ShareUsers(ShareUser entity)
		{
			this.SendPropertyChanging();
			entity.Share = this;
		}
		
		private void detach_ShareUsers(ShareUser entity)
		{
			this.SendPropertyChanging();
			entity.Share = null;
		}
	}
	
	[Table(Name="dbo.Document")]
	public partial class Document : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _DocumentID;
		
		private string _Name;
		
		private string _Description;
		
		private string _MetaDescription;
		
		private string _Tag;
		
		private int _LoginUserID;
		
		private System.Nullable<int> _EditLoginUserID;
		
		private System.Nullable<int> _Rating;
		
		private string _FilePath;
		
		private int _DocumentType;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<DocumentCource> _DocumentCources;
		
		private EntityRef<StudentLogin> _StudentLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocumentIDChanging(System.Guid value);
    partial void OnDocumentIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMetaDescriptionChanging(string value);
    partial void OnMetaDescriptionChanged();
    partial void OnTagChanging(string value);
    partial void OnTagChanged();
    partial void OnLoginUserIDChanging(int value);
    partial void OnLoginUserIDChanged();
    partial void OnEditLoginUserIDChanging(System.Nullable<int> value);
    partial void OnEditLoginUserIDChanged();
    partial void OnRatingChanging(System.Nullable<int> value);
    partial void OnRatingChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnDocumentTypeChanging(int value);
    partial void OnDocumentTypeChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public Document()
		{
			this._DocumentCources = new EntitySet<DocumentCource>(new Action<DocumentCource>(this.attach_DocumentCources), new Action<DocumentCource>(this.detach_DocumentCources));
			this._StudentLogin = default(EntityRef<StudentLogin>);
			OnCreated();
		}
		
		[Column(Storage="_DocumentID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid DocumentID
		{
			get
			{
				return this._DocumentID;
			}
			set
			{
				if ((this._DocumentID != value))
				{
					this.OnDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentID = value;
					this.SendPropertyChanged("DocumentID");
					this.OnDocumentIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_MetaDescription", DbType="VarChar(MAX)")]
		public string MetaDescription
		{
			get
			{
				return this._MetaDescription;
			}
			set
			{
				if ((this._MetaDescription != value))
				{
					this.OnMetaDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MetaDescription = value;
					this.SendPropertyChanged("MetaDescription");
					this.OnMetaDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Tag", DbType="VarChar(MAX)")]
		public string Tag
		{
			get
			{
				return this._Tag;
			}
			set
			{
				if ((this._Tag != value))
				{
					this.OnTagChanging(value);
					this.SendPropertyChanging();
					this._Tag = value;
					this.SendPropertyChanged("Tag");
					this.OnTagChanged();
				}
			}
		}
		
		[Column(Storage="_LoginUserID", DbType="Int NOT NULL")]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					if (this._StudentLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginUserIDChanging(value);
					this.SendPropertyChanging();
					this._LoginUserID = value;
					this.SendPropertyChanged("LoginUserID");
					this.OnLoginUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_EditLoginUserID", DbType="Int")]
		public System.Nullable<int> EditLoginUserID
		{
			get
			{
				return this._EditLoginUserID;
			}
			set
			{
				if ((this._EditLoginUserID != value))
				{
					this.OnEditLoginUserIDChanging(value);
					this.SendPropertyChanging();
					this._EditLoginUserID = value;
					this.SendPropertyChanged("EditLoginUserID");
					this.OnEditLoginUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_Rating", DbType="Int")]
		public System.Nullable<int> Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[Column(Storage="_FilePath", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._FilePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[Column(Storage="_DocumentType", DbType="Int NOT NULL")]
		public int DocumentType
		{
			get
			{
				return this._DocumentType;
			}
			set
			{
				if ((this._DocumentType != value))
				{
					this.OnDocumentTypeChanging(value);
					this.SendPropertyChanging();
					this._DocumentType = value;
					this.SendPropertyChanged("DocumentType");
					this.OnDocumentTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[Association(Name="Document_DocumentCource", Storage="_DocumentCources", OtherKey="DocumentID")]
		public EntitySet<DocumentCource> DocumentCources
		{
			get
			{
				return this._DocumentCources;
			}
			set
			{
				this._DocumentCources.Assign(value);
			}
		}
		
		[Association(Name="StudentLogin_Document", Storage="_StudentLogin", ThisKey="LoginUserID", IsForeignKey=true)]
		public StudentLogin StudentLogin
		{
			get
			{
				return this._StudentLogin.Entity;
			}
			set
			{
				StudentLogin previousValue = this._StudentLogin.Entity;
				if (((previousValue != value) 
							|| (this._StudentLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentLogin.Entity = null;
						previousValue.Documents.Remove(this);
					}
					this._StudentLogin.Entity = value;
					if ((value != null))
					{
						value.Documents.Add(this);
						this._LoginUserID = value.LoginUserID;
					}
					else
					{
						this._LoginUserID = default(int);
					}
					this.SendPropertyChanged("StudentLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DocumentCources(DocumentCource entity)
		{
			this.SendPropertyChanging();
			entity.Document = this;
		}
		
		private void detach_DocumentCources(DocumentCource entity)
		{
			this.SendPropertyChanging();
			entity.Document = null;
		}
	}
	
	[Table(Name="dbo.Article")]
	public partial class Article : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ArticleID;
		
		private int _LoginUserID;
		
		private System.Nullable<int> _EditLoginUserID;
		
		private string _Title;
		
		private string _Description;
		
		private string _MetaDescription;
		
		private int _InstituteCourceID;
		
		private int _InstituteSubjectID;
		
		private string _Tag;
		
		private System.Nullable<int> _Rating;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<StudentLogin> _StudentLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArticleIDChanging(System.Guid value);
    partial void OnArticleIDChanged();
    partial void OnLoginUserIDChanging(int value);
    partial void OnLoginUserIDChanged();
    partial void OnEditLoginUserIDChanging(System.Nullable<int> value);
    partial void OnEditLoginUserIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMetaDescriptionChanging(string value);
    partial void OnMetaDescriptionChanged();
    partial void OnInstituteCourceIDChanging(int value);
    partial void OnInstituteCourceIDChanged();
    partial void OnInstituteSubjectIDChanging(int value);
    partial void OnInstituteSubjectIDChanged();
    partial void OnTagChanging(string value);
    partial void OnTagChanged();
    partial void OnRatingChanging(System.Nullable<int> value);
    partial void OnRatingChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public Article()
		{
			this._StudentLogin = default(EntityRef<StudentLogin>);
			OnCreated();
		}
		
		[Column(Storage="_ArticleID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ArticleID
		{
			get
			{
				return this._ArticleID;
			}
			set
			{
				if ((this._ArticleID != value))
				{
					this.OnArticleIDChanging(value);
					this.SendPropertyChanging();
					this._ArticleID = value;
					this.SendPropertyChanged("ArticleID");
					this.OnArticleIDChanged();
				}
			}
		}
		
		[Column(Storage="_LoginUserID", DbType="Int NOT NULL")]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					if (this._StudentLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginUserIDChanging(value);
					this.SendPropertyChanging();
					this._LoginUserID = value;
					this.SendPropertyChanged("LoginUserID");
					this.OnLoginUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_EditLoginUserID", DbType="Int")]
		public System.Nullable<int> EditLoginUserID
		{
			get
			{
				return this._EditLoginUserID;
			}
			set
			{
				if ((this._EditLoginUserID != value))
				{
					this.OnEditLoginUserIDChanging(value);
					this.SendPropertyChanging();
					this._EditLoginUserID = value;
					this.SendPropertyChanged("EditLoginUserID");
					this.OnEditLoginUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_Title", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_MetaDescription", DbType="VarChar(MAX)")]
		public string MetaDescription
		{
			get
			{
				return this._MetaDescription;
			}
			set
			{
				if ((this._MetaDescription != value))
				{
					this.OnMetaDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MetaDescription = value;
					this.SendPropertyChanged("MetaDescription");
					this.OnMetaDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_InstituteCourceID", DbType="Int NOT NULL")]
		public int InstituteCourceID
		{
			get
			{
				return this._InstituteCourceID;
			}
			set
			{
				if ((this._InstituteCourceID != value))
				{
					this.OnInstituteCourceIDChanging(value);
					this.SendPropertyChanging();
					this._InstituteCourceID = value;
					this.SendPropertyChanged("InstituteCourceID");
					this.OnInstituteCourceIDChanged();
				}
			}
		}
		
		[Column(Storage="_InstituteSubjectID", DbType="Int NOT NULL")]
		public int InstituteSubjectID
		{
			get
			{
				return this._InstituteSubjectID;
			}
			set
			{
				if ((this._InstituteSubjectID != value))
				{
					this.OnInstituteSubjectIDChanging(value);
					this.SendPropertyChanging();
					this._InstituteSubjectID = value;
					this.SendPropertyChanged("InstituteSubjectID");
					this.OnInstituteSubjectIDChanged();
				}
			}
		}
		
		[Column(Storage="_Tag", DbType="VarChar(MAX)")]
		public string Tag
		{
			get
			{
				return this._Tag;
			}
			set
			{
				if ((this._Tag != value))
				{
					this.OnTagChanging(value);
					this.SendPropertyChanging();
					this._Tag = value;
					this.SendPropertyChanged("Tag");
					this.OnTagChanged();
				}
			}
		}
		
		[Column(Storage="_Rating", DbType="Int")]
		public System.Nullable<int> Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[Association(Name="StudentLogin_Article", Storage="_StudentLogin", ThisKey="LoginUserID", IsForeignKey=true)]
		public StudentLogin StudentLogin
		{
			get
			{
				return this._StudentLogin.Entity;
			}
			set
			{
				StudentLogin previousValue = this._StudentLogin.Entity;
				if (((previousValue != value) 
							|| (this._StudentLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentLogin.Entity = null;
						previousValue.Articles.Remove(this);
					}
					this._StudentLogin.Entity = value;
					if ((value != null))
					{
						value.Articles.Add(this);
						this._LoginUserID = value.LoginUserID;
					}
					else
					{
						this._LoginUserID = default(int);
					}
					this.SendPropertyChanged("StudentLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Event")]
	public partial class Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _EventID;
		
		private int _LoginUserID;
		
		private System.Nullable<int> _EditLoginUserID;
		
		private string _Title;
		
		private string _Description;
		
		private string _MetaDescription;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<int> _InstituteCourceID;
		
		private System.Nullable<int> _InstituteSubjectID;
		
		private string _Tag;
		
		private string _ContactPerson;
		
		private string _ContactEmail;
		
		private string _ContactPhone;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntityRef<StudentLogin> _StudentLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIDChanging(System.Guid value);
    partial void OnEventIDChanged();
    partial void OnLoginUserIDChanging(int value);
    partial void OnLoginUserIDChanged();
    partial void OnEditLoginUserIDChanging(System.Nullable<int> value);
    partial void OnEditLoginUserIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMetaDescriptionChanging(string value);
    partial void OnMetaDescriptionChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnInstituteCourceIDChanging(System.Nullable<int> value);
    partial void OnInstituteCourceIDChanged();
    partial void OnInstituteSubjectIDChanging(System.Nullable<int> value);
    partial void OnInstituteSubjectIDChanged();
    partial void OnTagChanging(string value);
    partial void OnTagChanged();
    partial void OnContactPersonChanging(string value);
    partial void OnContactPersonChanged();
    partial void OnContactEmailChanging(string value);
    partial void OnContactEmailChanged();
    partial void OnContactPhoneChanging(string value);
    partial void OnContactPhoneChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public Event()
		{
			this._StudentLogin = default(EntityRef<StudentLogin>);
			OnCreated();
		}
		
		[Column(Storage="_EventID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[Column(Storage="_LoginUserID", DbType="Int NOT NULL")]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					if (this._StudentLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginUserIDChanging(value);
					this.SendPropertyChanging();
					this._LoginUserID = value;
					this.SendPropertyChanged("LoginUserID");
					this.OnLoginUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_EditLoginUserID", DbType="Int")]
		public System.Nullable<int> EditLoginUserID
		{
			get
			{
				return this._EditLoginUserID;
			}
			set
			{
				if ((this._EditLoginUserID != value))
				{
					this.OnEditLoginUserIDChanging(value);
					this.SendPropertyChanging();
					this._EditLoginUserID = value;
					this.SendPropertyChanged("EditLoginUserID");
					this.OnEditLoginUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_Title", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_MetaDescription", DbType="VarChar(MAX)")]
		public string MetaDescription
		{
			get
			{
				return this._MetaDescription;
			}
			set
			{
				if ((this._MetaDescription != value))
				{
					this.OnMetaDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MetaDescription = value;
					this.SendPropertyChanged("MetaDescription");
					this.OnMetaDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[Column(Storage="_InstituteCourceID", DbType="Int")]
		public System.Nullable<int> InstituteCourceID
		{
			get
			{
				return this._InstituteCourceID;
			}
			set
			{
				if ((this._InstituteCourceID != value))
				{
					this.OnInstituteCourceIDChanging(value);
					this.SendPropertyChanging();
					this._InstituteCourceID = value;
					this.SendPropertyChanged("InstituteCourceID");
					this.OnInstituteCourceIDChanged();
				}
			}
		}
		
		[Column(Storage="_InstituteSubjectID", DbType="Int")]
		public System.Nullable<int> InstituteSubjectID
		{
			get
			{
				return this._InstituteSubjectID;
			}
			set
			{
				if ((this._InstituteSubjectID != value))
				{
					this.OnInstituteSubjectIDChanging(value);
					this.SendPropertyChanging();
					this._InstituteSubjectID = value;
					this.SendPropertyChanged("InstituteSubjectID");
					this.OnInstituteSubjectIDChanged();
				}
			}
		}
		
		[Column(Storage="_Tag", DbType="VarChar(MAX)")]
		public string Tag
		{
			get
			{
				return this._Tag;
			}
			set
			{
				if ((this._Tag != value))
				{
					this.OnTagChanging(value);
					this.SendPropertyChanging();
					this._Tag = value;
					this.SendPropertyChanged("Tag");
					this.OnTagChanged();
				}
			}
		}
		
		[Column(Storage="_ContactPerson", DbType="VarChar(1000)")]
		public string ContactPerson
		{
			get
			{
				return this._ContactPerson;
			}
			set
			{
				if ((this._ContactPerson != value))
				{
					this.OnContactPersonChanging(value);
					this.SendPropertyChanging();
					this._ContactPerson = value;
					this.SendPropertyChanged("ContactPerson");
					this.OnContactPersonChanged();
				}
			}
		}
		
		[Column(Storage="_ContactEmail", DbType="VarChar(1000)")]
		public string ContactEmail
		{
			get
			{
				return this._ContactEmail;
			}
			set
			{
				if ((this._ContactEmail != value))
				{
					this.OnContactEmailChanging(value);
					this.SendPropertyChanging();
					this._ContactEmail = value;
					this.SendPropertyChanged("ContactEmail");
					this.OnContactEmailChanged();
				}
			}
		}
		
		[Column(Storage="_ContactPhone", DbType="VarChar(20)")]
		public string ContactPhone
		{
			get
			{
				return this._ContactPhone;
			}
			set
			{
				if ((this._ContactPhone != value))
				{
					this.OnContactPhoneChanging(value);
					this.SendPropertyChanging();
					this._ContactPhone = value;
					this.SendPropertyChanged("ContactPhone");
					this.OnContactPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[Association(Name="StudentLogin_Event", Storage="_StudentLogin", ThisKey="LoginUserID", IsForeignKey=true)]
		public StudentLogin StudentLogin
		{
			get
			{
				return this._StudentLogin.Entity;
			}
			set
			{
				StudentLogin previousValue = this._StudentLogin.Entity;
				if (((previousValue != value) 
							|| (this._StudentLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentLogin.Entity = null;
						previousValue.Events.Remove(this);
					}
					this._StudentLogin.Entity = value;
					if ((value != null))
					{
						value.Events.Add(this);
						this._LoginUserID = value.LoginUserID;
					}
					else
					{
						this._LoginUserID = default(int);
					}
					this.SendPropertyChanged("StudentLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Ratting")]
	public partial class Ratting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _RattingID;
		
		private int _Rating;
		
		private int _ContentType;
		
		private string _ContentID;
		
		private System.DateTime _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRattingIDChanging(System.Guid value);
    partial void OnRattingIDChanged();
    partial void OnRatingChanging(int value);
    partial void OnRatingChanged();
    partial void OnContentTypeChanging(int value);
    partial void OnContentTypeChanged();
    partial void OnContentIDChanging(string value);
    partial void OnContentIDChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public Ratting()
		{
			OnCreated();
		}
		
		[Column(Storage="_RattingID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RattingID
		{
			get
			{
				return this._RattingID;
			}
			set
			{
				if ((this._RattingID != value))
				{
					this.OnRattingIDChanging(value);
					this.SendPropertyChanging();
					this._RattingID = value;
					this.SendPropertyChanged("RattingID");
					this.OnRattingIDChanged();
				}
			}
		}
		
		[Column(Storage="_Rating", DbType="Int NOT NULL")]
		public int Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[Column(Storage="_ContentType", DbType="Int NOT NULL")]
		public int ContentType
		{
			get
			{
				return this._ContentType;
			}
			set
			{
				if ((this._ContentType != value))
				{
					this.OnContentTypeChanging(value);
					this.SendPropertyChanging();
					this._ContentType = value;
					this.SendPropertyChanged("ContentType");
					this.OnContentTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ContentID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ContentID
		{
			get
			{
				return this._ContentID;
			}
			set
			{
				if ((this._ContentID != value))
				{
					this.OnContentIDChanging(value);
					this.SendPropertyChanging();
					this._ContentID = value;
					this.SendPropertyChanged("ContentID");
					this.OnContentIDChanged();
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetShareUserResult
	{
		
		private string _ObjectID;
		
		private System.Nullable<int> _ObjectType;
		
		private string _Username;
		
		private System.Nullable<bool> _EnableEdit;
		
		private System.Nullable<bool> _EnableAdd;
		
		private System.Nullable<bool> _EnableView;
		
		private System.Nullable<bool> _EnableDelete;
		
		private System.Nullable<bool> _EnableEditByLoggedIn;
		
		private int _LoginUserID;
		
		public GetShareUserResult()
		{
		}
		
		[Column(Storage="_ObjectID", DbType="VarChar(100)")]
		public string ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					this._ObjectID = value;
				}
			}
		}
		
		[Column(Storage="_ObjectType", DbType="Int")]
		public System.Nullable<int> ObjectType
		{
			get
			{
				return this._ObjectType;
			}
			set
			{
				if ((this._ObjectType != value))
				{
					this._ObjectType = value;
				}
			}
		}
		
		[Column(Storage="_Username", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[Column(Storage="_EnableEdit", DbType="Bit")]
		public System.Nullable<bool> EnableEdit
		{
			get
			{
				return this._EnableEdit;
			}
			set
			{
				if ((this._EnableEdit != value))
				{
					this._EnableEdit = value;
				}
			}
		}
		
		[Column(Storage="_EnableAdd", DbType="Bit")]
		public System.Nullable<bool> EnableAdd
		{
			get
			{
				return this._EnableAdd;
			}
			set
			{
				if ((this._EnableAdd != value))
				{
					this._EnableAdd = value;
				}
			}
		}
		
		[Column(Storage="_EnableView", DbType="Bit")]
		public System.Nullable<bool> EnableView
		{
			get
			{
				return this._EnableView;
			}
			set
			{
				if ((this._EnableView != value))
				{
					this._EnableView = value;
				}
			}
		}
		
		[Column(Storage="_EnableDelete", DbType="Bit")]
		public System.Nullable<bool> EnableDelete
		{
			get
			{
				return this._EnableDelete;
			}
			set
			{
				if ((this._EnableDelete != value))
				{
					this._EnableDelete = value;
				}
			}
		}
		
		[Column(Storage="_EnableEditByLoggedIn", DbType="Bit")]
		public System.Nullable<bool> EnableEditByLoggedIn
		{
			get
			{
				return this._EnableEditByLoggedIn;
			}
			set
			{
				if ((this._EnableEditByLoggedIn != value))
				{
					this._EnableEditByLoggedIn = value;
				}
			}
		}
		
		[Column(Storage="_LoginUserID", DbType="Int NOT NULL")]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					this._LoginUserID = value;
				}
			}
		}
	}
	
	public partial class GetUserContentResult
	{
		
		private string _ID;
		
		private string _Title;
		
		private int _LoginUserID;
		
		private int _InstituteCourceID;
		
		private System.Nullable<int> _InstituteSubjectID;
		
		private System.DateTime _ModifiedDate;
		
		private int _ContentType;
		
		public GetUserContentResult()
		{
		}
		
		[Column(Storage="_ID", DbType="VarChar(40)")]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_LoginUserID", DbType="Int NOT NULL")]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					this._LoginUserID = value;
				}
			}
		}
		
		[Column(Storage="_InstituteCourceID", DbType="Int NOT NULL")]
		public int InstituteCourceID
		{
			get
			{
				return this._InstituteCourceID;
			}
			set
			{
				if ((this._InstituteCourceID != value))
				{
					this._InstituteCourceID = value;
				}
			}
		}
		
		[Column(Storage="_InstituteSubjectID", DbType="Int")]
		public System.Nullable<int> InstituteSubjectID
		{
			get
			{
				return this._InstituteSubjectID;
			}
			set
			{
				if ((this._InstituteSubjectID != value))
				{
					this._InstituteSubjectID = value;
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[Column(Storage="_ContentType", DbType="Int NOT NULL")]
		public int ContentType
		{
			get
			{
				return this._ContentType;
			}
			set
			{
				if ((this._ContentType != value))
				{
					this._ContentType = value;
				}
			}
		}
	}
	
	public partial class GetContentResult
	{
		
		private string _ID;
		
		private string _Title;
		
		private int _LoginUserID;
		
		private int _InstituteCourceID;
		
		private System.Nullable<int> _InstituteSubjectID;
		
		private System.DateTime _ModifiedDate;
		
		private int _ContentType;
		
		private string _Param1;
		
		public GetContentResult()
		{
		}
		
		[Column(Storage="_ID", DbType="VarChar(40)")]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_LoginUserID", DbType="Int NOT NULL")]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					this._LoginUserID = value;
				}
			}
		}
		
		[Column(Storage="_InstituteCourceID", DbType="Int NOT NULL")]
		public int InstituteCourceID
		{
			get
			{
				return this._InstituteCourceID;
			}
			set
			{
				if ((this._InstituteCourceID != value))
				{
					this._InstituteCourceID = value;
				}
			}
		}
		
		[Column(Storage="_InstituteSubjectID", DbType="Int")]
		public System.Nullable<int> InstituteSubjectID
		{
			get
			{
				return this._InstituteSubjectID;
			}
			set
			{
				if ((this._InstituteSubjectID != value))
				{
					this._InstituteSubjectID = value;
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[Column(Storage="_ContentType", DbType="Int NOT NULL")]
		public int ContentType
		{
			get
			{
				return this._ContentType;
			}
			set
			{
				if ((this._ContentType != value))
				{
					this._ContentType = value;
				}
			}
		}
		
		[Column(Storage="_Param1", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Param1
		{
			get
			{
				return this._Param1;
			}
			set
			{
				if ((this._Param1 != value))
				{
					this._Param1 = value;
				}
			}
		}
	}
	
	public partial class GetUserResult
	{
		
		private int _UserID;
		
		private int _LoginUserID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _MiddleName;
		
		private string _PhotoPath;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _City;
		
		private string _State;
		
		private string _Country;
		
		private string _WebSite;
		
		private string _AboutMe;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private int _InstituteCourceID;
		
		private int _InstituteID;
		
		public GetUserResult()
		{
		}
		
		[Column(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[Column(Storage="_LoginUserID", DbType="Int NOT NULL")]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					this._LoginUserID = value;
				}
			}
		}
		
		[Column(Storage="_FirstName", DbType="VarChar(1000)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[Column(Storage="_LastName", DbType="VarChar(1000)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[Column(Storage="_MiddleName", DbType="VarChar(1000)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this._MiddleName = value;
				}
			}
		}
		
		[Column(Storage="_PhotoPath", DbType="VarChar(2000)")]
		public string PhotoPath
		{
			get
			{
				return this._PhotoPath;
			}
			set
			{
				if ((this._PhotoPath != value))
				{
					this._PhotoPath = value;
				}
			}
		}
		
		[Column(Storage="_BirthDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[Column(Storage="_Address1", DbType="VarChar(MAX)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this._Address1 = value;
				}
			}
		}
		
		[Column(Storage="_Address2", DbType="VarChar(MAX)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this._Address2 = value;
				}
			}
		}
		
		[Column(Storage="_City", DbType="VarChar(2000)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[Column(Storage="_State", DbType="VarChar(2000)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[Column(Storage="_Country", DbType="VarChar(2000)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this._Country = value;
				}
			}
		}
		
		[Column(Storage="_WebSite", DbType="VarChar(2000)")]
		public string WebSite
		{
			get
			{
				return this._WebSite;
			}
			set
			{
				if ((this._WebSite != value))
				{
					this._WebSite = value;
				}
			}
		}
		
		[Column(Storage="_AboutMe", DbType="VarChar(MAX)")]
		public string AboutMe
		{
			get
			{
				return this._AboutMe;
			}
			set
			{
				if ((this._AboutMe != value))
				{
					this._AboutMe = value;
				}
			}
		}
		
		[Column(Storage="_Status", DbType="VarChar(MAX)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[Column(Storage="_InstituteCourceID", DbType="Int NOT NULL")]
		public int InstituteCourceID
		{
			get
			{
				return this._InstituteCourceID;
			}
			set
			{
				if ((this._InstituteCourceID != value))
				{
					this._InstituteCourceID = value;
				}
			}
		}
		
		[Column(Storage="_InstituteID", DbType="Int NOT NULL")]
		public int InstituteID
		{
			get
			{
				return this._InstituteID;
			}
			set
			{
				if ((this._InstituteID != value))
				{
					this._InstituteID = value;
				}
			}
		}
	}
	
	public partial class GetShareGroupResult
	{
		
		private string _Name;
		
		private int _InstituteUserTypeID;
		
		private System.Nullable<bool> _EnableEdit;
		
		private System.Nullable<bool> _EnableAdd;
		
		private System.Nullable<bool> _EnableView;
		
		private System.Nullable<bool> _EnableDelete;
		
		private System.Nullable<bool> _EnableEditByLoggedIn;
		
		public GetShareGroupResult()
		{
		}
		
		[Column(Storage="_Name", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_InstituteUserTypeID", DbType="Int NOT NULL")]
		public int InstituteUserTypeID
		{
			get
			{
				return this._InstituteUserTypeID;
			}
			set
			{
				if ((this._InstituteUserTypeID != value))
				{
					this._InstituteUserTypeID = value;
				}
			}
		}
		
		[Column(Storage="_EnableEdit", DbType="Bit")]
		public System.Nullable<bool> EnableEdit
		{
			get
			{
				return this._EnableEdit;
			}
			set
			{
				if ((this._EnableEdit != value))
				{
					this._EnableEdit = value;
				}
			}
		}
		
		[Column(Storage="_EnableAdd", DbType="Bit")]
		public System.Nullable<bool> EnableAdd
		{
			get
			{
				return this._EnableAdd;
			}
			set
			{
				if ((this._EnableAdd != value))
				{
					this._EnableAdd = value;
				}
			}
		}
		
		[Column(Storage="_EnableView", DbType="Bit")]
		public System.Nullable<bool> EnableView
		{
			get
			{
				return this._EnableView;
			}
			set
			{
				if ((this._EnableView != value))
				{
					this._EnableView = value;
				}
			}
		}
		
		[Column(Storage="_EnableDelete", DbType="Bit")]
		public System.Nullable<bool> EnableDelete
		{
			get
			{
				return this._EnableDelete;
			}
			set
			{
				if ((this._EnableDelete != value))
				{
					this._EnableDelete = value;
				}
			}
		}
		
		[Column(Storage="_EnableEditByLoggedIn", DbType="Bit")]
		public System.Nullable<bool> EnableEditByLoggedIn
		{
			get
			{
				return this._EnableEditByLoggedIn;
			}
			set
			{
				if ((this._EnableEditByLoggedIn != value))
				{
					this._EnableEditByLoggedIn = value;
				}
			}
		}
	}
	
	public partial class GetUserObjectAccessResult
	{
		
		private string _Username;
		
		private int _LoginUserID;
		
		private System.Nullable<bool> _EnableEdit;
		
		private System.Nullable<bool> _EnableAdd;
		
		private System.Nullable<bool> _EnableView;
		
		private System.Nullable<bool> _EnableDelete;
		
		private System.Nullable<bool> _EnableEditByLoggedIn;
		
		public GetUserObjectAccessResult()
		{
		}
		
		[Column(Storage="_Username", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[Column(Storage="_LoginUserID", DbType="Int NOT NULL")]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					this._LoginUserID = value;
				}
			}
		}
		
		[Column(Storage="_EnableEdit", DbType="Bit")]
		public System.Nullable<bool> EnableEdit
		{
			get
			{
				return this._EnableEdit;
			}
			set
			{
				if ((this._EnableEdit != value))
				{
					this._EnableEdit = value;
				}
			}
		}
		
		[Column(Storage="_EnableAdd", DbType="Bit")]
		public System.Nullable<bool> EnableAdd
		{
			get
			{
				return this._EnableAdd;
			}
			set
			{
				if ((this._EnableAdd != value))
				{
					this._EnableAdd = value;
				}
			}
		}
		
		[Column(Storage="_EnableView", DbType="Bit")]
		public System.Nullable<bool> EnableView
		{
			get
			{
				return this._EnableView;
			}
			set
			{
				if ((this._EnableView != value))
				{
					this._EnableView = value;
				}
			}
		}
		
		[Column(Storage="_EnableDelete", DbType="Bit")]
		public System.Nullable<bool> EnableDelete
		{
			get
			{
				return this._EnableDelete;
			}
			set
			{
				if ((this._EnableDelete != value))
				{
					this._EnableDelete = value;
				}
			}
		}
		
		[Column(Storage="_EnableEditByLoggedIn", DbType="Bit")]
		public System.Nullable<bool> EnableEditByLoggedIn
		{
			get
			{
				return this._EnableEditByLoggedIn;
			}
			set
			{
				if ((this._EnableEditByLoggedIn != value))
				{
					this._EnableEditByLoggedIn = value;
				}
			}
		}
	}
	
	public partial class GetGroupObjectAccessResult
	{
		
		private string _Name;
		
		private int _InstituteUserTypeID;
		
		private System.Nullable<bool> _EnableEdit;
		
		private System.Nullable<bool> _EnableAdd;
		
		private System.Nullable<bool> _EnableView;
		
		private System.Nullable<bool> _EnableDelete;
		
		private System.Nullable<bool> _EnableEditByLoggedIn;
		
		public GetGroupObjectAccessResult()
		{
		}
		
		[Column(Storage="_Name", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_InstituteUserTypeID", DbType="Int NOT NULL")]
		public int InstituteUserTypeID
		{
			get
			{
				return this._InstituteUserTypeID;
			}
			set
			{
				if ((this._InstituteUserTypeID != value))
				{
					this._InstituteUserTypeID = value;
				}
			}
		}
		
		[Column(Storage="_EnableEdit", DbType="Bit")]
		public System.Nullable<bool> EnableEdit
		{
			get
			{
				return this._EnableEdit;
			}
			set
			{
				if ((this._EnableEdit != value))
				{
					this._EnableEdit = value;
				}
			}
		}
		
		[Column(Storage="_EnableAdd", DbType="Bit")]
		public System.Nullable<bool> EnableAdd
		{
			get
			{
				return this._EnableAdd;
			}
			set
			{
				if ((this._EnableAdd != value))
				{
					this._EnableAdd = value;
				}
			}
		}
		
		[Column(Storage="_EnableView", DbType="Bit")]
		public System.Nullable<bool> EnableView
		{
			get
			{
				return this._EnableView;
			}
			set
			{
				if ((this._EnableView != value))
				{
					this._EnableView = value;
				}
			}
		}
		
		[Column(Storage="_EnableDelete", DbType="Bit")]
		public System.Nullable<bool> EnableDelete
		{
			get
			{
				return this._EnableDelete;
			}
			set
			{
				if ((this._EnableDelete != value))
				{
					this._EnableDelete = value;
				}
			}
		}
		
		[Column(Storage="_EnableEditByLoggedIn", DbType="Bit")]
		public System.Nullable<bool> EnableEditByLoggedIn
		{
			get
			{
				return this._EnableEditByLoggedIn;
			}
			set
			{
				if ((this._EnableEditByLoggedIn != value))
				{
					this._EnableEditByLoggedIn = value;
				}
			}
		}
	}
	
	public partial class GetUserRelatedContentResult
	{
		
		private string _ID;
		
		private string _Title;
		
		private int _LoginUserID;
		
		private System.Nullable<int> _InstituteCourceID;
		
		private System.Nullable<int> _InstituteSubjectID;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private int _ContentType;
		
		private string _Param1;
		
		public GetUserRelatedContentResult()
		{
		}
		
		[Column(Storage="_ID", DbType="VarChar(40)")]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_LoginUserID", DbType="Int NOT NULL")]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					this._LoginUserID = value;
				}
			}
		}
		
		[Column(Storage="_InstituteCourceID", DbType="Int")]
		public System.Nullable<int> InstituteCourceID
		{
			get
			{
				return this._InstituteCourceID;
			}
			set
			{
				if ((this._InstituteCourceID != value))
				{
					this._InstituteCourceID = value;
				}
			}
		}
		
		[Column(Storage="_InstituteSubjectID", DbType="Int")]
		public System.Nullable<int> InstituteSubjectID
		{
			get
			{
				return this._InstituteSubjectID;
			}
			set
			{
				if ((this._InstituteSubjectID != value))
				{
					this._InstituteSubjectID = value;
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[Column(Storage="_ContentType", DbType="Int NOT NULL")]
		public int ContentType
		{
			get
			{
				return this._ContentType;
			}
			set
			{
				if ((this._ContentType != value))
				{
					this._ContentType = value;
				}
			}
		}
		
		[Column(Storage="_Param1", DbType="VarChar(MAX)")]
		public string Param1
		{
			get
			{
				return this._Param1;
			}
			set
			{
				if ((this._Param1 != value))
				{
					this._Param1 = value;
				}
			}
		}
	}
	
	public partial class GetUserRelatedContentSearchResult
	{
		
		private string _ID;
		
		private string _Title;
		
		private int _LoginUserID;
		
		private System.Nullable<int> _InstituteCourceID;
		
		private System.Nullable<int> _InstituteSubjectID;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private int _ContentType;
		
		private string _Param1;
		
		public GetUserRelatedContentSearchResult()
		{
		}
		
		[Column(Storage="_ID", DbType="VarChar(40)")]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_LoginUserID", DbType="Int NOT NULL")]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					this._LoginUserID = value;
				}
			}
		}
		
		[Column(Storage="_InstituteCourceID", DbType="Int")]
		public System.Nullable<int> InstituteCourceID
		{
			get
			{
				return this._InstituteCourceID;
			}
			set
			{
				if ((this._InstituteCourceID != value))
				{
					this._InstituteCourceID = value;
				}
			}
		}
		
		[Column(Storage="_InstituteSubjectID", DbType="Int")]
		public System.Nullable<int> InstituteSubjectID
		{
			get
			{
				return this._InstituteSubjectID;
			}
			set
			{
				if ((this._InstituteSubjectID != value))
				{
					this._InstituteSubjectID = value;
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[Column(Storage="_ContentType", DbType="Int NOT NULL")]
		public int ContentType
		{
			get
			{
				return this._ContentType;
			}
			set
			{
				if ((this._ContentType != value))
				{
					this._ContentType = value;
				}
			}
		}
		
		[Column(Storage="_Param1", DbType="VarChar(MAX)")]
		public string Param1
		{
			get
			{
				return this._Param1;
			}
			set
			{
				if ((this._Param1 != value))
				{
					this._Param1 = value;
				}
			}
		}
	}
}
#pragma warning restore 1591

#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataEntity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="edu")]
	public partial class MessageDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMessageLoginUser(MessageLoginUser instance);
    partial void UpdateMessageLoginUser(MessageLoginUser instance);
    partial void DeleteMessageLoginUser(MessageLoginUser instance);
    partial void InsertMessage(Message instance);
    partial void UpdateMessage(Message instance);
    partial void DeleteMessage(Message instance);
    #endregion
		
		public MessageDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MessageDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MessageDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MessageDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MessageLoginUser> MessageLoginUsers
		{
			get
			{
				return this.GetTable<MessageLoginUser>();
			}
		}
		
		public System.Data.Linq.Table<Message> Messages
		{
			get
			{
				return this.GetTable<Message>();
			}
		}
		
		[Function(Name="dbo.GetInboxMessage")]
		public ISingleResult<GetInboxMessageResult> GetInboxMessage([Parameter(Name="LoginUserID", DbType="Int")] System.Nullable<int> loginUserID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), loginUserID);
			return ((ISingleResult<GetInboxMessageResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GetFullMessage")]
		public ISingleResult<GetFullMessageResult> GetFullMessage([Parameter(Name="MessageID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> messageID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), messageID);
			return ((ISingleResult<GetFullMessageResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GetSentMessage")]
		public ISingleResult<GetSentMessageResult> GetSentMessage([Parameter(Name="LoginUserID", DbType="Int")] System.Nullable<int> loginUserID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), loginUserID);
			return ((ISingleResult<GetSentMessageResult>)(result.ReturnValue));
		}
	}
	
	[Table(Name="dbo.LoginUser")]
	public partial class MessageLoginUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoginUserID;
		
		private string _Username;
		
		private string _Password;
		
		private int _UserType;
		
		private System.Guid _UserId;
		
		private System.DateTime _ModifiedDate;
		
		private System.DateTime _CreatedDate;
		
		private EntitySet<Message> _Messages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginUserIDChanging(int value);
    partial void OnLoginUserIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnUserTypeChanging(int value);
    partial void OnUserTypeChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public MessageLoginUser()
		{
			this._Messages = new EntitySet<Message>(new Action<Message>(this.attach_Messages), new Action<Message>(this.detach_Messages));
			OnCreated();
		}
		
		[Column(Storage="_LoginUserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoginUserID
		{
			get
			{
				return this._LoginUserID;
			}
			set
			{
				if ((this._LoginUserID != value))
				{
					this.OnLoginUserIDChanging(value);
					this.SendPropertyChanging();
					this._LoginUserID = value;
					this.SendPropertyChanged("LoginUserID");
					this.OnLoginUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_Username", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[Column(Storage="_Password", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[Column(Storage="_UserType", DbType="Int NOT NULL")]
		public int UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[Association(Name="MessageLoginUser_Message", Storage="_Messages", OtherKey="FromLoginUserID")]
		public EntitySet<Message> Messages
		{
			get
			{
				return this._Messages;
			}
			set
			{
				this._Messages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Messages(Message entity)
		{
			this.SendPropertyChanging();
			entity.MessageLoginUser = this;
		}
		
		private void detach_Messages(Message entity)
		{
			this.SendPropertyChanging();
			entity.MessageLoginUser = null;
		}
	}
	
	[Table(Name="dbo.Message")]
	public partial class Message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MessageID;
		
		private string _Subject;
		
		private string _MessageText;
		
		private int _ToLoginUserID;
		
		private int _FromLoginUserID;
		
		private System.Nullable<int> _ReplyID;
		
		private System.Nullable<System.DateTime> _ReadTime;
		
		private System.Nullable<bool> _IsReaded;
		
		private System.Nullable<bool> _DeleteFromTo;
		
		private System.Nullable<bool> _DeleteFromFrom;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<MessageLoginUser> _MessageLoginUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageIDChanging(System.Guid value);
    partial void OnMessageIDChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnMessageTextChanging(string value);
    partial void OnMessageTextChanged();
    partial void OnToLoginUserIDChanging(int value);
    partial void OnToLoginUserIDChanged();
    partial void OnFromLoginUserIDChanging(int value);
    partial void OnFromLoginUserIDChanged();
    partial void OnReplyIDChanging(System.Nullable<int> value);
    partial void OnReplyIDChanged();
    partial void OnReadTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnReadTimeChanged();
    partial void OnIsReadedChanging(System.Nullable<bool> value);
    partial void OnIsReadedChanged();
    partial void OnDeleteFromToChanging(System.Nullable<bool> value);
    partial void OnDeleteFromToChanged();
    partial void OnDeleteFromFromChanging(System.Nullable<bool> value);
    partial void OnDeleteFromFromChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public Message()
		{
			this._MessageLoginUser = default(EntityRef<MessageLoginUser>);
			OnCreated();
		}
		
		[Column(Storage="_MessageID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[Column(Storage="_Subject", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[Column(Storage="_MessageText", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MessageText
		{
			get
			{
				return this._MessageText;
			}
			set
			{
				if ((this._MessageText != value))
				{
					this.OnMessageTextChanging(value);
					this.SendPropertyChanging();
					this._MessageText = value;
					this.SendPropertyChanged("MessageText");
					this.OnMessageTextChanged();
				}
			}
		}
		
		[Column(Storage="_ToLoginUserID", DbType="Int NOT NULL")]
		public int ToLoginUserID
		{
			get
			{
				return this._ToLoginUserID;
			}
			set
			{
				if ((this._ToLoginUserID != value))
				{
					this.OnToLoginUserIDChanging(value);
					this.SendPropertyChanging();
					this._ToLoginUserID = value;
					this.SendPropertyChanged("ToLoginUserID");
					this.OnToLoginUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_FromLoginUserID", DbType="Int NOT NULL")]
		public int FromLoginUserID
		{
			get
			{
				return this._FromLoginUserID;
			}
			set
			{
				if ((this._FromLoginUserID != value))
				{
					if (this._MessageLoginUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromLoginUserIDChanging(value);
					this.SendPropertyChanging();
					this._FromLoginUserID = value;
					this.SendPropertyChanged("FromLoginUserID");
					this.OnFromLoginUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_ReplyID", DbType="Int")]
		public System.Nullable<int> ReplyID
		{
			get
			{
				return this._ReplyID;
			}
			set
			{
				if ((this._ReplyID != value))
				{
					this.OnReplyIDChanging(value);
					this.SendPropertyChanging();
					this._ReplyID = value;
					this.SendPropertyChanged("ReplyID");
					this.OnReplyIDChanged();
				}
			}
		}
		
		[Column(Storage="_ReadTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReadTime
		{
			get
			{
				return this._ReadTime;
			}
			set
			{
				if ((this._ReadTime != value))
				{
					this.OnReadTimeChanging(value);
					this.SendPropertyChanging();
					this._ReadTime = value;
					this.SendPropertyChanged("ReadTime");
					this.OnReadTimeChanged();
				}
			}
		}
		
		[Column(Storage="_IsReaded", DbType="Bit")]
		public System.Nullable<bool> IsReaded
		{
			get
			{
				return this._IsReaded;
			}
			set
			{
				if ((this._IsReaded != value))
				{
					this.OnIsReadedChanging(value);
					this.SendPropertyChanging();
					this._IsReaded = value;
					this.SendPropertyChanged("IsReaded");
					this.OnIsReadedChanged();
				}
			}
		}
		
		[Column(Storage="_DeleteFromTo", DbType="Bit")]
		public System.Nullable<bool> DeleteFromTo
		{
			get
			{
				return this._DeleteFromTo;
			}
			set
			{
				if ((this._DeleteFromTo != value))
				{
					this.OnDeleteFromToChanging(value);
					this.SendPropertyChanging();
					this._DeleteFromTo = value;
					this.SendPropertyChanged("DeleteFromTo");
					this.OnDeleteFromToChanged();
				}
			}
		}
		
		[Column(Storage="_DeleteFromFrom", DbType="Bit")]
		public System.Nullable<bool> DeleteFromFrom
		{
			get
			{
				return this._DeleteFromFrom;
			}
			set
			{
				if ((this._DeleteFromFrom != value))
				{
					this.OnDeleteFromFromChanging(value);
					this.SendPropertyChanging();
					this._DeleteFromFrom = value;
					this.SendPropertyChanged("DeleteFromFrom");
					this.OnDeleteFromFromChanged();
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[Association(Name="MessageLoginUser_Message", Storage="_MessageLoginUser", ThisKey="FromLoginUserID", IsForeignKey=true)]
		public MessageLoginUser MessageLoginUser
		{
			get
			{
				return this._MessageLoginUser.Entity;
			}
			set
			{
				MessageLoginUser previousValue = this._MessageLoginUser.Entity;
				if (((previousValue != value) 
							|| (this._MessageLoginUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MessageLoginUser.Entity = null;
						previousValue.Messages.Remove(this);
					}
					this._MessageLoginUser.Entity = value;
					if ((value != null))
					{
						value.Messages.Add(this);
						this._FromLoginUserID = value.LoginUserID;
					}
					else
					{
						this._FromLoginUserID = default(int);
					}
					this.SendPropertyChanged("MessageLoginUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetInboxMessageResult
	{
		
		private System.Guid _MessageID;
		
		private string _Subject;
		
		private string _MessageText;
		
		private int _ToLoginUserID;
		
		private int _FromLoginUserID;
		
		private System.Nullable<int> _ReplyID;
		
		private System.Nullable<System.DateTime> _ReadTime;
		
		private System.Nullable<bool> _IsReaded;
		
		private System.Nullable<bool> _DeleteFromTo;
		
		private System.Nullable<bool> _DeleteFromFrom;
		
		private System.DateTime _ModifiedDate;
		
		private string _ToProfilePic;
		
		private string _FromProfilePic;
		
		private string _ToFullName;
		
		private string _FromFullName;
		
		public GetInboxMessageResult()
		{
		}
		
		[Column(Storage="_MessageID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this._MessageID = value;
				}
			}
		}
		
		[Column(Storage="_Subject", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this._Subject = value;
				}
			}
		}
		
		[Column(Storage="_MessageText", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MessageText
		{
			get
			{
				return this._MessageText;
			}
			set
			{
				if ((this._MessageText != value))
				{
					this._MessageText = value;
				}
			}
		}
		
		[Column(Storage="_ToLoginUserID", DbType="Int NOT NULL")]
		public int ToLoginUserID
		{
			get
			{
				return this._ToLoginUserID;
			}
			set
			{
				if ((this._ToLoginUserID != value))
				{
					this._ToLoginUserID = value;
				}
			}
		}
		
		[Column(Storage="_FromLoginUserID", DbType="Int NOT NULL")]
		public int FromLoginUserID
		{
			get
			{
				return this._FromLoginUserID;
			}
			set
			{
				if ((this._FromLoginUserID != value))
				{
					this._FromLoginUserID = value;
				}
			}
		}
		
		[Column(Storage="_ReplyID", DbType="Int")]
		public System.Nullable<int> ReplyID
		{
			get
			{
				return this._ReplyID;
			}
			set
			{
				if ((this._ReplyID != value))
				{
					this._ReplyID = value;
				}
			}
		}
		
		[Column(Storage="_ReadTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReadTime
		{
			get
			{
				return this._ReadTime;
			}
			set
			{
				if ((this._ReadTime != value))
				{
					this._ReadTime = value;
				}
			}
		}
		
		[Column(Storage="_IsReaded", DbType="Bit")]
		public System.Nullable<bool> IsReaded
		{
			get
			{
				return this._IsReaded;
			}
			set
			{
				if ((this._IsReaded != value))
				{
					this._IsReaded = value;
				}
			}
		}
		
		[Column(Storage="_DeleteFromTo", DbType="Bit")]
		public System.Nullable<bool> DeleteFromTo
		{
			get
			{
				return this._DeleteFromTo;
			}
			set
			{
				if ((this._DeleteFromTo != value))
				{
					this._DeleteFromTo = value;
				}
			}
		}
		
		[Column(Storage="_DeleteFromFrom", DbType="Bit")]
		public System.Nullable<bool> DeleteFromFrom
		{
			get
			{
				return this._DeleteFromFrom;
			}
			set
			{
				if ((this._DeleteFromFrom != value))
				{
					this._DeleteFromFrom = value;
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[Column(Storage="_ToProfilePic", DbType="VarChar(MAX)")]
		public string ToProfilePic
		{
			get
			{
				return this._ToProfilePic;
			}
			set
			{
				if ((this._ToProfilePic != value))
				{
					this._ToProfilePic = value;
				}
			}
		}
		
		[Column(Storage="_FromProfilePic", DbType="VarChar(MAX)")]
		public string FromProfilePic
		{
			get
			{
				return this._FromProfilePic;
			}
			set
			{
				if ((this._FromProfilePic != value))
				{
					this._FromProfilePic = value;
				}
			}
		}
		
		[Column(Storage="_ToFullName", DbType="VarChar(MAX)")]
		public string ToFullName
		{
			get
			{
				return this._ToFullName;
			}
			set
			{
				if ((this._ToFullName != value))
				{
					this._ToFullName = value;
				}
			}
		}
		
		[Column(Storage="_FromFullName", DbType="VarChar(MAX)")]
		public string FromFullName
		{
			get
			{
				return this._FromFullName;
			}
			set
			{
				if ((this._FromFullName != value))
				{
					this._FromFullName = value;
				}
			}
		}
	}
	
	public partial class GetFullMessageResult
	{
		
		private System.Guid _MessageID;
		
		private string _Subject;
		
		private string _MessageText;
		
		private int _ToLoginUserID;
		
		private int _FromLoginUserID;
		
		private System.Nullable<int> _ReplyID;
		
		private System.Nullable<System.DateTime> _ReadTime;
		
		private System.Nullable<bool> _IsReaded;
		
		private System.Nullable<bool> _DeleteFromTo;
		
		private System.Nullable<bool> _DeleteFromFrom;
		
		private System.DateTime _ModifiedDate;
		
		private string _ToProfilePic;
		
		private string _FromProfilePic;
		
		private string _ToFullName;
		
		private string _FromFullName;
		
		public GetFullMessageResult()
		{
		}
		
		[Column(Storage="_MessageID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this._MessageID = value;
				}
			}
		}
		
		[Column(Storage="_Subject", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this._Subject = value;
				}
			}
		}
		
		[Column(Storage="_MessageText", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MessageText
		{
			get
			{
				return this._MessageText;
			}
			set
			{
				if ((this._MessageText != value))
				{
					this._MessageText = value;
				}
			}
		}
		
		[Column(Storage="_ToLoginUserID", DbType="Int NOT NULL")]
		public int ToLoginUserID
		{
			get
			{
				return this._ToLoginUserID;
			}
			set
			{
				if ((this._ToLoginUserID != value))
				{
					this._ToLoginUserID = value;
				}
			}
		}
		
		[Column(Storage="_FromLoginUserID", DbType="Int NOT NULL")]
		public int FromLoginUserID
		{
			get
			{
				return this._FromLoginUserID;
			}
			set
			{
				if ((this._FromLoginUserID != value))
				{
					this._FromLoginUserID = value;
				}
			}
		}
		
		[Column(Storage="_ReplyID", DbType="Int")]
		public System.Nullable<int> ReplyID
		{
			get
			{
				return this._ReplyID;
			}
			set
			{
				if ((this._ReplyID != value))
				{
					this._ReplyID = value;
				}
			}
		}
		
		[Column(Storage="_ReadTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReadTime
		{
			get
			{
				return this._ReadTime;
			}
			set
			{
				if ((this._ReadTime != value))
				{
					this._ReadTime = value;
				}
			}
		}
		
		[Column(Storage="_IsReaded", DbType="Bit")]
		public System.Nullable<bool> IsReaded
		{
			get
			{
				return this._IsReaded;
			}
			set
			{
				if ((this._IsReaded != value))
				{
					this._IsReaded = value;
				}
			}
		}
		
		[Column(Storage="_DeleteFromTo", DbType="Bit")]
		public System.Nullable<bool> DeleteFromTo
		{
			get
			{
				return this._DeleteFromTo;
			}
			set
			{
				if ((this._DeleteFromTo != value))
				{
					this._DeleteFromTo = value;
				}
			}
		}
		
		[Column(Storage="_DeleteFromFrom", DbType="Bit")]
		public System.Nullable<bool> DeleteFromFrom
		{
			get
			{
				return this._DeleteFromFrom;
			}
			set
			{
				if ((this._DeleteFromFrom != value))
				{
					this._DeleteFromFrom = value;
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[Column(Storage="_ToProfilePic", DbType="VarChar(MAX)")]
		public string ToProfilePic
		{
			get
			{
				return this._ToProfilePic;
			}
			set
			{
				if ((this._ToProfilePic != value))
				{
					this._ToProfilePic = value;
				}
			}
		}
		
		[Column(Storage="_FromProfilePic", DbType="VarChar(MAX)")]
		public string FromProfilePic
		{
			get
			{
				return this._FromProfilePic;
			}
			set
			{
				if ((this._FromProfilePic != value))
				{
					this._FromProfilePic = value;
				}
			}
		}
		
		[Column(Storage="_ToFullName", DbType="VarChar(MAX)")]
		public string ToFullName
		{
			get
			{
				return this._ToFullName;
			}
			set
			{
				if ((this._ToFullName != value))
				{
					this._ToFullName = value;
				}
			}
		}
		
		[Column(Storage="_FromFullName", DbType="VarChar(MAX)")]
		public string FromFullName
		{
			get
			{
				return this._FromFullName;
			}
			set
			{
				if ((this._FromFullName != value))
				{
					this._FromFullName = value;
				}
			}
		}
	}
	
	public partial class GetSentMessageResult
	{
		
		private System.Guid _MessageID;
		
		private string _Subject;
		
		private string _MessageText;
		
		private int _ToLoginUserID;
		
		private int _FromLoginUserID;
		
		private System.Nullable<int> _ReplyID;
		
		private System.Nullable<System.DateTime> _ReadTime;
		
		private System.Nullable<bool> _IsReaded;
		
		private System.Nullable<bool> _DeleteFromTo;
		
		private System.Nullable<bool> _DeleteFromFrom;
		
		private System.DateTime _ModifiedDate;
		
		private string _ToProfilePic;
		
		private string _FromProfilePic;
		
		private string _ToFullName;
		
		private string _FromFullName;
		
		public GetSentMessageResult()
		{
		}
		
		[Column(Storage="_MessageID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this._MessageID = value;
				}
			}
		}
		
		[Column(Storage="_Subject", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this._Subject = value;
				}
			}
		}
		
		[Column(Storage="_MessageText", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MessageText
		{
			get
			{
				return this._MessageText;
			}
			set
			{
				if ((this._MessageText != value))
				{
					this._MessageText = value;
				}
			}
		}
		
		[Column(Storage="_ToLoginUserID", DbType="Int NOT NULL")]
		public int ToLoginUserID
		{
			get
			{
				return this._ToLoginUserID;
			}
			set
			{
				if ((this._ToLoginUserID != value))
				{
					this._ToLoginUserID = value;
				}
			}
		}
		
		[Column(Storage="_FromLoginUserID", DbType="Int NOT NULL")]
		public int FromLoginUserID
		{
			get
			{
				return this._FromLoginUserID;
			}
			set
			{
				if ((this._FromLoginUserID != value))
				{
					this._FromLoginUserID = value;
				}
			}
		}
		
		[Column(Storage="_ReplyID", DbType="Int")]
		public System.Nullable<int> ReplyID
		{
			get
			{
				return this._ReplyID;
			}
			set
			{
				if ((this._ReplyID != value))
				{
					this._ReplyID = value;
				}
			}
		}
		
		[Column(Storage="_ReadTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReadTime
		{
			get
			{
				return this._ReadTime;
			}
			set
			{
				if ((this._ReadTime != value))
				{
					this._ReadTime = value;
				}
			}
		}
		
		[Column(Storage="_IsReaded", DbType="Bit")]
		public System.Nullable<bool> IsReaded
		{
			get
			{
				return this._IsReaded;
			}
			set
			{
				if ((this._IsReaded != value))
				{
					this._IsReaded = value;
				}
			}
		}
		
		[Column(Storage="_DeleteFromTo", DbType="Bit")]
		public System.Nullable<bool> DeleteFromTo
		{
			get
			{
				return this._DeleteFromTo;
			}
			set
			{
				if ((this._DeleteFromTo != value))
				{
					this._DeleteFromTo = value;
				}
			}
		}
		
		[Column(Storage="_DeleteFromFrom", DbType="Bit")]
		public System.Nullable<bool> DeleteFromFrom
		{
			get
			{
				return this._DeleteFromFrom;
			}
			set
			{
				if ((this._DeleteFromFrom != value))
				{
					this._DeleteFromFrom = value;
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[Column(Storage="_ToProfilePic", DbType="VarChar(MAX)")]
		public string ToProfilePic
		{
			get
			{
				return this._ToProfilePic;
			}
			set
			{
				if ((this._ToProfilePic != value))
				{
					this._ToProfilePic = value;
				}
			}
		}
		
		[Column(Storage="_FromProfilePic", DbType="VarChar(MAX)")]
		public string FromProfilePic
		{
			get
			{
				return this._FromProfilePic;
			}
			set
			{
				if ((this._FromProfilePic != value))
				{
					this._FromProfilePic = value;
				}
			}
		}
		
		[Column(Storage="_ToFullName", DbType="VarChar(MAX)")]
		public string ToFullName
		{
			get
			{
				return this._ToFullName;
			}
			set
			{
				if ((this._ToFullName != value))
				{
					this._ToFullName = value;
				}
			}
		}
		
		[Column(Storage="_FromFullName", DbType="VarChar(MAX)")]
		public string FromFullName
		{
			get
			{
				return this._FromFullName;
			}
			set
			{
				if ((this._FromFullName != value))
				{
					this._FromFullName = value;
				}
			}
		}
	}
}
#pragma warning restore 1591

<?xml version="1.0"?>
<!-- 
    Note: As an alternative to hand editing this file you can use the 
    web admin tool to configure settings for your application. Use
    the Website->Asp.Net Configuration option in Visual Studio.
    A full list of settings and comments can be found in 
    machine.config.comments usually located in 
    \Windows\Microsoft.Net\Framework\v2.x\Config 
-->
<configuration>
	<appSettings configSource="App_Config\AppSetting.config"/>
	<connectionStrings configSource="App_Config\ConnectionStrings.config"/>
	<system.web>
		<globalization uiCulture="auto" culture="auto"/>
		<!-- 
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.
        -->
		<httpRuntime maxRequestLength="2097150" requestValidationMode="2.0"/>
		<membership>
			<providers>
				<remove name="AspNetSqlMembershipProvider"/>
				<add name="AspNetSqlMembershipProvider" type="System.Web.Security.SqlMembershipProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" connectionStringName="LocalSqlServer" enablePasswordRetrieval="false" enablePasswordReset="true" requiresQuestionAndAnswer="true" applicationName="/" requiresUniqueEmail="false" passwordFormat="Hashed" maxInvalidPasswordAttempts="5" minRequiredPasswordLength="2" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10" passwordStrengthRegularExpression=""/>
			</providers>
		</membership>
		<compilation debug="true" targetFramework="4.0">
			<assemblies>
				<add assembly="System.Data.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/></assemblies></compilation>
		<!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
        -->
		<authentication mode="Forms"/>
		<!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
		<pages theme="Default" validateRequest="false" enableEventValidation="false" enableViewStateMac="false" viewStateEncryptionMode="Never" >
			<controls>
				<add tagPrefix="ULink" src="~/User/UserControl/UserToolTipLink.ascx" tagName="ULink"/>
				<add tagPrefix="UNameLink" src="~/User/UserControl/UserNameToolTipLink.ascx" tagName="UNameLink"/>
				<add assembly="AjaxControl" namespace="AjaxControl" tagPrefix="aspajax"/>
				<add assembly="CustomControls" namespace="CustomControls" tagPrefix="cram"/>
			</controls>
		</pages>
	</system.web>
	<!-- 
        The system.webServer section is required for running ASP.NET AJAX under Internet
        Information Services 7.0.  It is not necessary for previous version of IIS.
    -->
	<system.net>
		<mailSettings>
			<smtp from="rohan.naik@live.com">
				<network host="smtp.live.com" defaultCredentials="false" port="25" userName="rohan.naik@live.com" password="michael"/>
			</smtp>
		</mailSettings>
	</system.net>
</configuration>

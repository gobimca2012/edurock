##|TYPE Template
##|UNIQUEID 06f66724-35d8-43a7-bebb-6258cfbadaca
##|TITLE AutoComplateJS
##|NAMESPACE 
##|SOURCE_TYPE Source
##|OUTPUT_LANGUAGE None
##|GUI_ENGINE .Net Script
##|GUI_LANGUAGE C#
##|GUI_BEGIN

public class GeneratedGui : DotNetScriptGui
{
	public GeneratedGui(ZeusContext context) : base(context) {}

	//-----------------------------------------
	// The User Interface Entry Point
	//-----------------------------------------
	public override void Setup()
	{
		// ** UNCOMMENT CODE BELOW TO SEE UI **

		ui.Title = ".NetScript C# Sample: Java Class";
		ui.Width = 340;
		ui.Height = 200;

		// Setup Database selection combobox.
		GuiLabel label_d = ui.AddLabel("lblDatabases", "Select a database:", "Select a database in the dropdown below.");
		GuiComboBox cmbDatabases = ui.AddComboBox("databaseName", "Select a database.");

		// Setup Tables selection multi-select listbox.
		GuiLabel label_t = ui.AddLabel("lblTables", "Select table:", "Select table from the combobox below.");
		GuiComboBox cmbTables = ui.AddComboBox("tableName", "Select a table.");

		// bind data to the controls
		cmbDatabases.BindData(MyMeta.Databases);
		cmbDatabases.SelectedValue = MyMeta.DefaultDatabase.Name;
		cmbTables.BindData( MyMeta.Databases[cmbDatabases.SelectedValue].Tables );
		
		
		// Attach the onchange event to the cmbDatabases control.
		cmbDatabases.AttachEvent("onchange", "cmbDatabases_onchange");

	
		ui.ShowGui = true;ui.AddLabel("lblDemo", "Demo", "Demo Tooltip");
		ui.ShowGui = true;
	}
	public void cmbDatabases_onchange(GuiComboBox control)
	{
		GuiComboBox cmbDatabases = ui["databaseName"] as GuiComboBox;
		GuiComboBox cmbTables = ui["tableName"] as GuiComboBox;
		
		cmbTables.BindData( MyMeta.Databases[cmbDatabases.SelectedValue].Tables );
	}

}
##|GUI_END
##|BODY_MODE Markup
##|BODY_ENGINE .Net Script
##|BODY_LANGUAGE C#
##|BODY_TAG_START <%
##|BODY_TAG_END %>
##|BODY_BEGIN
<%
public class GeneratedTemplate : DotNetScriptTemplate
{
	public GeneratedTemplate(ZeusContext context) : base(context) {}

	//---------------------------------------------------
	// Render() is where you want to write your logic    
	//---------------------------------------------------
	public override void Render()
	{
	string databaseName = input["databaseName"].ToString();
		string tableName = input["tableName"].ToString();
		int columnCount=0;
		IDatabase database = MyMeta.Databases[databaseName];
		ITable table = database.Tables[tableName];
		%>
		// JavaScript Document
		<%foreach(ForeignKey column in table.ForeignKeys)
		{	
		
		%>
$.ajax(
{
   type : "POST",
   url : "Add.aspx/Ajax<%=column.ForeignTable.Alias%>",
   data : "{}",
   contentType : "application/json; charset=utf-8",
   dataType : "json",
   success : function(msg)
   {

      $("#ctl00_ContentPlaceHolder1_UCSearchFlights_txtFrom").autocomplete(msg.d,
      {
         autoFill : true
      }

      );
   }
}
);

[WebMethod]
    public static List<string> Ajax<%=column.ForeignTable.Alias%>()
    {
        List<<%=column.ForeignTable.Alias%>> data = new <%=column.ForeignTable.Alias%>Controller().<%=column.ForeignTable.Alias%>Get().ToList();
        List<string> <%=column.ForeignTable.Alias%>List = (from p in data select p.Name).ToList();
        return <%=column.ForeignTable.Alias%>List;
    }
	<%
	
	}%>
	
	<%foreach(IColumn column in table.PrimaryKeys)
		{	
		
		%>
$.ajax(
{
   type : "POST",
   url : "Add.aspx/Ajax<%=column.Table.Alias%>",
   data : "{}",
   contentType : "application/json; charset=utf-8",
   dataType : "json",
   success : function(msg)
   {

      $("#ctl00_ContentPlaceHolder1_UCSearchFlights_txtFrom").autocomplete(msg.d,
      {
         autoFill : true
      }

      );
   }
}
);

[WebMethod]
    public static List<string> Ajax<%=column.Table.Alias%>()
    {
        List<<%=column.Table.Alias%>> data = new <%=column.Table.Alias%>Controller().<%=column.Table.Alias%>Get().ToList();
        List<string> <%=column.Table.Alias%>List = (from p in data select p.Name).ToList();
        return <%=column.Table.Alias%>List;
    }
	<%
	
	}%>
	
	
	<%foreach(IColumn column in table.Columns)
		{	
		
		%>
$.ajax(
{
   type : "POST",
   url : "Add.aspx/Ajax<%=column.Alias%>",
   data : "{}",
   contentType : "application/json; charset=utf-8",
   dataType : "json",
   success : function(msg)
   {

      $("#ctl00_ContentPlaceHolder1_UCSearchFlights_txtFrom").autocomplete(msg.d,
      {
         autoFill : true
      }

      );
   }
}
);

[WebMethod]
    public static List<string> Ajax<%=column.Alias%>()
    {
        List<<%=column.Alias%>> data = new <%=column.Alias%>Controller().<%=column.Alias%>Get().ToList();
        List<string> <%=column.Alias%>List = (from p in data select p.Name).ToList();
        return <%=column.Alias%>List;
    }
	<%
	
	}%>
		<%
		
	}

}
%>
##|BODY_END
